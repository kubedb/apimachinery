/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubedb.dev/apimachinery/apis/ops/v1alpha1"
)

// HazelcastOpsRequestLister helps list HazelcastOpsRequests.
// All objects returned here must be treated as read-only.
type HazelcastOpsRequestLister interface {
	// List lists all HazelcastOpsRequests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HazelcastOpsRequest, err error)
	// HazelcastOpsRequests returns an object that can list and get HazelcastOpsRequests.
	HazelcastOpsRequests(namespace string) HazelcastOpsRequestNamespaceLister
	HazelcastOpsRequestListerExpansion
}

// hazelcastOpsRequestLister implements the HazelcastOpsRequestLister interface.
type hazelcastOpsRequestLister struct {
	indexer cache.Indexer
}

// NewHazelcastOpsRequestLister returns a new HazelcastOpsRequestLister.
func NewHazelcastOpsRequestLister(indexer cache.Indexer) HazelcastOpsRequestLister {
	return &hazelcastOpsRequestLister{indexer: indexer}
}

// List lists all HazelcastOpsRequests in the indexer.
func (s *hazelcastOpsRequestLister) List(selector labels.Selector) (ret []*v1alpha1.HazelcastOpsRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HazelcastOpsRequest))
	})
	return ret, err
}

// HazelcastOpsRequests returns an object that can list and get HazelcastOpsRequests.
func (s *hazelcastOpsRequestLister) HazelcastOpsRequests(namespace string) HazelcastOpsRequestNamespaceLister {
	return hazelcastOpsRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HazelcastOpsRequestNamespaceLister helps list and get HazelcastOpsRequests.
// All objects returned here must be treated as read-only.
type HazelcastOpsRequestNamespaceLister interface {
	// List lists all HazelcastOpsRequests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HazelcastOpsRequest, err error)
	// Get retrieves the HazelcastOpsRequest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.HazelcastOpsRequest, error)
	HazelcastOpsRequestNamespaceListerExpansion
}

// hazelcastOpsRequestNamespaceLister implements the HazelcastOpsRequestNamespaceLister
// interface.
type hazelcastOpsRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HazelcastOpsRequests in the indexer for a given namespace.
func (s hazelcastOpsRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.HazelcastOpsRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HazelcastOpsRequest))
	})
	return ret, err
}

// Get retrieves the HazelcastOpsRequest from the indexer for a given namespace and name.
func (s hazelcastOpsRequestNamespaceLister) Get(name string) (*v1alpha1.HazelcastOpsRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("hazelcastopsrequest"), name)
	}
	return obj.(*v1alpha1.HazelcastOpsRequest), nil
}
