/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubedb.dev/apimachinery/apis/ops/v1alpha1"
)

// MsSQLOpsRequestLister helps list MsSQLOpsRequests.
// All objects returned here must be treated as read-only.
type MsSQLOpsRequestLister interface {
	// List lists all MsSQLOpsRequests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MsSQLOpsRequest, err error)
	// MsSQLOpsRequests returns an object that can list and get MsSQLOpsRequests.
	MsSQLOpsRequests(namespace string) MsSQLOpsRequestNamespaceLister
	MsSQLOpsRequestListerExpansion
}

// msSQLOpsRequestLister implements the MsSQLOpsRequestLister interface.
type msSQLOpsRequestLister struct {
	indexer cache.Indexer
}

// NewMsSQLOpsRequestLister returns a new MsSQLOpsRequestLister.
func NewMsSQLOpsRequestLister(indexer cache.Indexer) MsSQLOpsRequestLister {
	return &msSQLOpsRequestLister{indexer: indexer}
}

// List lists all MsSQLOpsRequests in the indexer.
func (s *msSQLOpsRequestLister) List(selector labels.Selector) (ret []*v1alpha1.MsSQLOpsRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MsSQLOpsRequest))
	})
	return ret, err
}

// MsSQLOpsRequests returns an object that can list and get MsSQLOpsRequests.
func (s *msSQLOpsRequestLister) MsSQLOpsRequests(namespace string) MsSQLOpsRequestNamespaceLister {
	return msSQLOpsRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MsSQLOpsRequestNamespaceLister helps list and get MsSQLOpsRequests.
// All objects returned here must be treated as read-only.
type MsSQLOpsRequestNamespaceLister interface {
	// List lists all MsSQLOpsRequests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MsSQLOpsRequest, err error)
	// Get retrieves the MsSQLOpsRequest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.MsSQLOpsRequest, error)
	MsSQLOpsRequestNamespaceListerExpansion
}

// msSQLOpsRequestNamespaceLister implements the MsSQLOpsRequestNamespaceLister
// interface.
type msSQLOpsRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MsSQLOpsRequests in the indexer for a given namespace.
func (s msSQLOpsRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MsSQLOpsRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MsSQLOpsRequest))
	})
	return ret, err
}

// Get retrieves the MsSQLOpsRequest from the indexer for a given namespace and name.
func (s msSQLOpsRequestNamespaceLister) Get(name string) (*v1alpha1.MsSQLOpsRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("mssqlopsrequest"), name)
	}
	return obj.(*v1alpha1.MsSQLOpsRequest), nil
}
