/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubedb.dev/apimachinery/apis/ops/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CassandraOpsRequestLister helps list CassandraOpsRequests.
// All objects returned here must be treated as read-only.
type CassandraOpsRequestLister interface {
	// List lists all CassandraOpsRequests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CassandraOpsRequest, err error)
	// CassandraOpsRequests returns an object that can list and get CassandraOpsRequests.
	CassandraOpsRequests(namespace string) CassandraOpsRequestNamespaceLister
	CassandraOpsRequestListerExpansion
}

// cassandraOpsRequestLister implements the CassandraOpsRequestLister interface.
type cassandraOpsRequestLister struct {
	indexer cache.Indexer
}

// NewCassandraOpsRequestLister returns a new CassandraOpsRequestLister.
func NewCassandraOpsRequestLister(indexer cache.Indexer) CassandraOpsRequestLister {
	return &cassandraOpsRequestLister{indexer: indexer}
}

// List lists all CassandraOpsRequests in the indexer.
func (s *cassandraOpsRequestLister) List(selector labels.Selector) (ret []*v1alpha1.CassandraOpsRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CassandraOpsRequest))
	})
	return ret, err
}

// CassandraOpsRequests returns an object that can list and get CassandraOpsRequests.
func (s *cassandraOpsRequestLister) CassandraOpsRequests(namespace string) CassandraOpsRequestNamespaceLister {
	return cassandraOpsRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CassandraOpsRequestNamespaceLister helps list and get CassandraOpsRequests.
// All objects returned here must be treated as read-only.
type CassandraOpsRequestNamespaceLister interface {
	// List lists all CassandraOpsRequests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CassandraOpsRequest, err error)
	// Get retrieves the CassandraOpsRequest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CassandraOpsRequest, error)
	CassandraOpsRequestNamespaceListerExpansion
}

// cassandraOpsRequestNamespaceLister implements the CassandraOpsRequestNamespaceLister
// interface.
type cassandraOpsRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CassandraOpsRequests in the indexer for a given namespace.
func (s cassandraOpsRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CassandraOpsRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CassandraOpsRequest))
	})
	return ret, err
}

// Get retrieves the CassandraOpsRequest from the indexer for a given namespace and name.
func (s cassandraOpsRequestNamespaceLister) Get(name string) (*v1alpha1.CassandraOpsRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("cassandraopsrequest"), name)
	}
	return obj.(*v1alpha1.CassandraOpsRequest), nil
}
