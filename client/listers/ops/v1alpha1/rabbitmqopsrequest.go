/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubedb.dev/apimachinery/apis/ops/v1alpha1"
)

// RabbitMQOpsRequestLister helps list RabbitMQOpsRequests.
// All objects returned here must be treated as read-only.
type RabbitMQOpsRequestLister interface {
	// List lists all RabbitMQOpsRequests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RabbitMQOpsRequest, err error)
	// RabbitMQOpsRequests returns an object that can list and get RabbitMQOpsRequests.
	RabbitMQOpsRequests(namespace string) RabbitMQOpsRequestNamespaceLister
	RabbitMQOpsRequestListerExpansion
}

// rabbitMQOpsRequestLister implements the RabbitMQOpsRequestLister interface.
type rabbitMQOpsRequestLister struct {
	indexer cache.Indexer
}

// NewRabbitMQOpsRequestLister returns a new RabbitMQOpsRequestLister.
func NewRabbitMQOpsRequestLister(indexer cache.Indexer) RabbitMQOpsRequestLister {
	return &rabbitMQOpsRequestLister{indexer: indexer}
}

// List lists all RabbitMQOpsRequests in the indexer.
func (s *rabbitMQOpsRequestLister) List(selector labels.Selector) (ret []*v1alpha1.RabbitMQOpsRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RabbitMQOpsRequest))
	})
	return ret, err
}

// RabbitMQOpsRequests returns an object that can list and get RabbitMQOpsRequests.
func (s *rabbitMQOpsRequestLister) RabbitMQOpsRequests(namespace string) RabbitMQOpsRequestNamespaceLister {
	return rabbitMQOpsRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RabbitMQOpsRequestNamespaceLister helps list and get RabbitMQOpsRequests.
// All objects returned here must be treated as read-only.
type RabbitMQOpsRequestNamespaceLister interface {
	// List lists all RabbitMQOpsRequests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RabbitMQOpsRequest, err error)
	// Get retrieves the RabbitMQOpsRequest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.RabbitMQOpsRequest, error)
	RabbitMQOpsRequestNamespaceListerExpansion
}

// rabbitMQOpsRequestNamespaceLister implements the RabbitMQOpsRequestNamespaceLister
// interface.
type rabbitMQOpsRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RabbitMQOpsRequests in the indexer for a given namespace.
func (s rabbitMQOpsRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RabbitMQOpsRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RabbitMQOpsRequest))
	})
	return ret, err
}

// Get retrieves the RabbitMQOpsRequest from the indexer for a given namespace and name.
func (s rabbitMQOpsRequestNamespaceLister) Get(name string) (*v1alpha1.RabbitMQOpsRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("rabbitmqopsrequest"), name)
	}
	return obj.(*v1alpha1.RabbitMQOpsRequest), nil
}
