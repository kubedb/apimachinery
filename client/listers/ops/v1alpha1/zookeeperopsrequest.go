/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubedb.dev/apimachinery/apis/ops/v1alpha1"
)

// ZooKeeperOpsRequestLister helps list ZooKeeperOpsRequests.
// All objects returned here must be treated as read-only.
type ZooKeeperOpsRequestLister interface {
	// List lists all ZooKeeperOpsRequests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ZooKeeperOpsRequest, err error)
	// ZooKeeperOpsRequests returns an object that can list and get ZooKeeperOpsRequests.
	ZooKeeperOpsRequests(namespace string) ZooKeeperOpsRequestNamespaceLister
	ZooKeeperOpsRequestListerExpansion
}

// zooKeeperOpsRequestLister implements the ZooKeeperOpsRequestLister interface.
type zooKeeperOpsRequestLister struct {
	indexer cache.Indexer
}

// NewZooKeeperOpsRequestLister returns a new ZooKeeperOpsRequestLister.
func NewZooKeeperOpsRequestLister(indexer cache.Indexer) ZooKeeperOpsRequestLister {
	return &zooKeeperOpsRequestLister{indexer: indexer}
}

// List lists all ZooKeeperOpsRequests in the indexer.
func (s *zooKeeperOpsRequestLister) List(selector labels.Selector) (ret []*v1alpha1.ZooKeeperOpsRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ZooKeeperOpsRequest))
	})
	return ret, err
}

// ZooKeeperOpsRequests returns an object that can list and get ZooKeeperOpsRequests.
func (s *zooKeeperOpsRequestLister) ZooKeeperOpsRequests(namespace string) ZooKeeperOpsRequestNamespaceLister {
	return zooKeeperOpsRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ZooKeeperOpsRequestNamespaceLister helps list and get ZooKeeperOpsRequests.
// All objects returned here must be treated as read-only.
type ZooKeeperOpsRequestNamespaceLister interface {
	// List lists all ZooKeeperOpsRequests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ZooKeeperOpsRequest, err error)
	// Get retrieves the ZooKeeperOpsRequest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ZooKeeperOpsRequest, error)
	ZooKeeperOpsRequestNamespaceListerExpansion
}

// zooKeeperOpsRequestNamespaceLister implements the ZooKeeperOpsRequestNamespaceLister
// interface.
type zooKeeperOpsRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ZooKeeperOpsRequests in the indexer for a given namespace.
func (s zooKeeperOpsRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ZooKeeperOpsRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ZooKeeperOpsRequest))
	})
	return ret, err
}

// Get retrieves the ZooKeeperOpsRequest from the indexer for a given namespace and name.
func (s zooKeeperOpsRequestNamespaceLister) Get(name string) (*v1alpha1.ZooKeeperOpsRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("zookeeperopsrequest"), name)
	}
	return obj.(*v1alpha1.ZooKeeperOpsRequest), nil
}
