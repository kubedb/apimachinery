/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubedb.dev/apimachinery/apis/ops/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FerretDBOpsRequestLister helps list FerretDBOpsRequests.
// All objects returned here must be treated as read-only.
type FerretDBOpsRequestLister interface {
	// List lists all FerretDBOpsRequests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FerretDBOpsRequest, err error)
	// FerretDBOpsRequests returns an object that can list and get FerretDBOpsRequests.
	FerretDBOpsRequests(namespace string) FerretDBOpsRequestNamespaceLister
	FerretDBOpsRequestListerExpansion
}

// ferretDBOpsRequestLister implements the FerretDBOpsRequestLister interface.
type ferretDBOpsRequestLister struct {
	indexer cache.Indexer
}

// NewFerretDBOpsRequestLister returns a new FerretDBOpsRequestLister.
func NewFerretDBOpsRequestLister(indexer cache.Indexer) FerretDBOpsRequestLister {
	return &ferretDBOpsRequestLister{indexer: indexer}
}

// List lists all FerretDBOpsRequests in the indexer.
func (s *ferretDBOpsRequestLister) List(selector labels.Selector) (ret []*v1alpha1.FerretDBOpsRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FerretDBOpsRequest))
	})
	return ret, err
}

// FerretDBOpsRequests returns an object that can list and get FerretDBOpsRequests.
func (s *ferretDBOpsRequestLister) FerretDBOpsRequests(namespace string) FerretDBOpsRequestNamespaceLister {
	return ferretDBOpsRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FerretDBOpsRequestNamespaceLister helps list and get FerretDBOpsRequests.
// All objects returned here must be treated as read-only.
type FerretDBOpsRequestNamespaceLister interface {
	// List lists all FerretDBOpsRequests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FerretDBOpsRequest, err error)
	// Get retrieves the FerretDBOpsRequest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.FerretDBOpsRequest, error)
	FerretDBOpsRequestNamespaceListerExpansion
}

// ferretDBOpsRequestNamespaceLister implements the FerretDBOpsRequestNamespaceLister
// interface.
type ferretDBOpsRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FerretDBOpsRequests in the indexer for a given namespace.
func (s ferretDBOpsRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FerretDBOpsRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FerretDBOpsRequest))
	})
	return ret, err
}

// Get retrieves the FerretDBOpsRequest from the indexer for a given namespace and name.
func (s ferretDBOpsRequestNamespaceLister) Get(name string) (*v1alpha1.FerretDBOpsRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("ferretdbopsrequest"), name)
	}
	return obj.(*v1alpha1.FerretDBOpsRequest), nil
}
