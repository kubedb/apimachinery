/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubedb.dev/apimachinery/apis/autoscaling/v1alpha1"
)

// RedisSentinelAutoscalerLister helps list RedisSentinelAutoscalers.
// All objects returned here must be treated as read-only.
type RedisSentinelAutoscalerLister interface {
	// List lists all RedisSentinelAutoscalers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RedisSentinelAutoscaler, err error)
	// RedisSentinelAutoscalers returns an object that can list and get RedisSentinelAutoscalers.
	RedisSentinelAutoscalers(namespace string) RedisSentinelAutoscalerNamespaceLister
	RedisSentinelAutoscalerListerExpansion
}

// redisSentinelAutoscalerLister implements the RedisSentinelAutoscalerLister interface.
type redisSentinelAutoscalerLister struct {
	indexer cache.Indexer
}

// NewRedisSentinelAutoscalerLister returns a new RedisSentinelAutoscalerLister.
func NewRedisSentinelAutoscalerLister(indexer cache.Indexer) RedisSentinelAutoscalerLister {
	return &redisSentinelAutoscalerLister{indexer: indexer}
}

// List lists all RedisSentinelAutoscalers in the indexer.
func (s *redisSentinelAutoscalerLister) List(selector labels.Selector) (ret []*v1alpha1.RedisSentinelAutoscaler, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RedisSentinelAutoscaler))
	})
	return ret, err
}

// RedisSentinelAutoscalers returns an object that can list and get RedisSentinelAutoscalers.
func (s *redisSentinelAutoscalerLister) RedisSentinelAutoscalers(namespace string) RedisSentinelAutoscalerNamespaceLister {
	return redisSentinelAutoscalerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RedisSentinelAutoscalerNamespaceLister helps list and get RedisSentinelAutoscalers.
// All objects returned here must be treated as read-only.
type RedisSentinelAutoscalerNamespaceLister interface {
	// List lists all RedisSentinelAutoscalers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RedisSentinelAutoscaler, err error)
	// Get retrieves the RedisSentinelAutoscaler from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.RedisSentinelAutoscaler, error)
	RedisSentinelAutoscalerNamespaceListerExpansion
}

// redisSentinelAutoscalerNamespaceLister implements the RedisSentinelAutoscalerNamespaceLister
// interface.
type redisSentinelAutoscalerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RedisSentinelAutoscalers in the indexer for a given namespace.
func (s redisSentinelAutoscalerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RedisSentinelAutoscaler, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RedisSentinelAutoscaler))
	})
	return ret, err
}

// Get retrieves the RedisSentinelAutoscaler from the indexer for a given namespace and name.
func (s redisSentinelAutoscalerNamespaceLister) Get(name string) (*v1alpha1.RedisSentinelAutoscaler, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("redissentinelautoscaler"), name)
	}
	return obj.(*v1alpha1.RedisSentinelAutoscaler), nil
}
