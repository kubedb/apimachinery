/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubedb.dev/apimachinery/apis/autoscaling/v1alpha1"
)

// RabbitMQAutoscalerLister helps list RabbitMQAutoscalers.
// All objects returned here must be treated as read-only.
type RabbitMQAutoscalerLister interface {
	// List lists all RabbitMQAutoscalers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RabbitMQAutoscaler, err error)
	// RabbitMQAutoscalers returns an object that can list and get RabbitMQAutoscalers.
	RabbitMQAutoscalers(namespace string) RabbitMQAutoscalerNamespaceLister
	RabbitMQAutoscalerListerExpansion
}

// rabbitMQAutoscalerLister implements the RabbitMQAutoscalerLister interface.
type rabbitMQAutoscalerLister struct {
	indexer cache.Indexer
}

// NewRabbitMQAutoscalerLister returns a new RabbitMQAutoscalerLister.
func NewRabbitMQAutoscalerLister(indexer cache.Indexer) RabbitMQAutoscalerLister {
	return &rabbitMQAutoscalerLister{indexer: indexer}
}

// List lists all RabbitMQAutoscalers in the indexer.
func (s *rabbitMQAutoscalerLister) List(selector labels.Selector) (ret []*v1alpha1.RabbitMQAutoscaler, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RabbitMQAutoscaler))
	})
	return ret, err
}

// RabbitMQAutoscalers returns an object that can list and get RabbitMQAutoscalers.
func (s *rabbitMQAutoscalerLister) RabbitMQAutoscalers(namespace string) RabbitMQAutoscalerNamespaceLister {
	return rabbitMQAutoscalerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RabbitMQAutoscalerNamespaceLister helps list and get RabbitMQAutoscalers.
// All objects returned here must be treated as read-only.
type RabbitMQAutoscalerNamespaceLister interface {
	// List lists all RabbitMQAutoscalers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RabbitMQAutoscaler, err error)
	// Get retrieves the RabbitMQAutoscaler from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.RabbitMQAutoscaler, error)
	RabbitMQAutoscalerNamespaceListerExpansion
}

// rabbitMQAutoscalerNamespaceLister implements the RabbitMQAutoscalerNamespaceLister
// interface.
type rabbitMQAutoscalerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RabbitMQAutoscalers in the indexer for a given namespace.
func (s rabbitMQAutoscalerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RabbitMQAutoscaler, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RabbitMQAutoscaler))
	})
	return ret, err
}

// Get retrieves the RabbitMQAutoscaler from the indexer for a given namespace and name.
func (s rabbitMQAutoscalerNamespaceLister) Get(name string) (*v1alpha1.RabbitMQAutoscaler, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("rabbitmqautoscaler"), name)
	}
	return obj.(*v1alpha1.RabbitMQAutoscaler), nil
}
