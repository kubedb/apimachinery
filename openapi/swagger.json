{
  "swagger": "2.0",
  "info": {
    "title": "KubeDB",
    "contact": {
      "name": "AppsCode Inc.",
      "url": "https://appscode.com",
      "email": "hello@appscode.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "v0"
  },
  "paths": {
    "/apis": {
      "get": {
        "description": "get available API versions",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "apis"
        ],
        "operationId": "getAPIVersions",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList"
            }
          }
        }
      }
    },
    "/apis/catalog.kubedb.com": {
      "get": {
        "description": "get information of a group",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom"
        ],
        "operationId": "getCatalogKubedbComAPIGroup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
            }
          }
        }
      }
    },
    "/apis/catalog.kubedb.com/v1alpha1": {
      "get": {
        "description": "get available resources",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "getCatalogKubedbComV1alpha1APIResources",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
            }
          }
        }
      }
    },
    "/apis/catalog.kubedb.com/v1alpha1/elasticsearchversions": {
      "get": {
        "description": "list or watch objects of kind ElasticsearchVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "listCatalogKubedbComV1alpha1ElasticsearchVersion",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersionList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchVersion"
        }
      },
      "post": {
        "description": "create an ElasticsearchVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "createCatalogKubedbComV1alpha1ElasticsearchVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersion"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersion"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchVersion"
        }
      },
      "delete": {
        "description": "delete collection of ElasticsearchVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1CollectionElasticsearchVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/elasticsearchversions/{name}": {
      "get": {
        "description": "read the specified ElasticsearchVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "readCatalogKubedbComV1alpha1ElasticsearchVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersion"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchVersion"
        }
      },
      "put": {
        "description": "replace the specified ElasticsearchVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "replaceCatalogKubedbComV1alpha1ElasticsearchVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersion"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchVersion"
        }
      },
      "delete": {
        "description": "delete an ElasticsearchVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1ElasticsearchVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchVersion"
        }
      },
      "patch": {
        "description": "partially update the specified ElasticsearchVersion",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "patchCatalogKubedbComV1alpha1ElasticsearchVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersion"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ElasticsearchVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/etcdversions": {
      "get": {
        "description": "list or watch objects of kind EtcdVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "listCatalogKubedbComV1alpha1EtcdVersion",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersionList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdVersion"
        }
      },
      "post": {
        "description": "create an EtcdVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "createCatalogKubedbComV1alpha1EtcdVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersion"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersion"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdVersion"
        }
      },
      "delete": {
        "description": "delete collection of EtcdVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1CollectionEtcdVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/etcdversions/{name}": {
      "get": {
        "description": "read the specified EtcdVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "readCatalogKubedbComV1alpha1EtcdVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersion"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdVersion"
        }
      },
      "put": {
        "description": "replace the specified EtcdVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "replaceCatalogKubedbComV1alpha1EtcdVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersion"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdVersion"
        }
      },
      "delete": {
        "description": "delete an EtcdVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1EtcdVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdVersion"
        }
      },
      "patch": {
        "description": "partially update the specified EtcdVersion",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "patchCatalogKubedbComV1alpha1EtcdVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersion"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the EtcdVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/memcachedversions": {
      "get": {
        "description": "list or watch objects of kind MemcachedVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "listCatalogKubedbComV1alpha1MemcachedVersion",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersionList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedVersion"
        }
      },
      "post": {
        "description": "create a MemcachedVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "createCatalogKubedbComV1alpha1MemcachedVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersion"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersion"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedVersion"
        }
      },
      "delete": {
        "description": "delete collection of MemcachedVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1CollectionMemcachedVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/memcachedversions/{name}": {
      "get": {
        "description": "read the specified MemcachedVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "readCatalogKubedbComV1alpha1MemcachedVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersion"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedVersion"
        }
      },
      "put": {
        "description": "replace the specified MemcachedVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "replaceCatalogKubedbComV1alpha1MemcachedVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersion"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedVersion"
        }
      },
      "delete": {
        "description": "delete a MemcachedVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1MemcachedVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedVersion"
        }
      },
      "patch": {
        "description": "partially update the specified MemcachedVersion",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "patchCatalogKubedbComV1alpha1MemcachedVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersion"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MemcachedVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/mongodbversions": {
      "get": {
        "description": "list or watch objects of kind MongoDBVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "listCatalogKubedbComV1alpha1MongoDBVersion",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersionList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBVersion"
        }
      },
      "post": {
        "description": "create a MongoDBVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "createCatalogKubedbComV1alpha1MongoDBVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersion"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersion"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBVersion"
        }
      },
      "delete": {
        "description": "delete collection of MongoDBVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1CollectionMongoDBVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/mongodbversions/{name}": {
      "get": {
        "description": "read the specified MongoDBVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "readCatalogKubedbComV1alpha1MongoDBVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersion"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBVersion"
        }
      },
      "put": {
        "description": "replace the specified MongoDBVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "replaceCatalogKubedbComV1alpha1MongoDBVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersion"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBVersion"
        }
      },
      "delete": {
        "description": "delete a MongoDBVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1MongoDBVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBVersion"
        }
      },
      "patch": {
        "description": "partially update the specified MongoDBVersion",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "patchCatalogKubedbComV1alpha1MongoDBVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersion"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MongoDBVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/mysqlversions": {
      "get": {
        "description": "list or watch objects of kind MySQLVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "listCatalogKubedbComV1alpha1MySQLVersion",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLVersion"
        }
      },
      "post": {
        "description": "create a MySQLVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "createCatalogKubedbComV1alpha1MySQLVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersion"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersion"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLVersion"
        }
      },
      "delete": {
        "description": "delete collection of MySQLVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1CollectionMySQLVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/mysqlversions/{name}": {
      "get": {
        "description": "read the specified MySQLVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "readCatalogKubedbComV1alpha1MySQLVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersion"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLVersion"
        }
      },
      "put": {
        "description": "replace the specified MySQLVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "replaceCatalogKubedbComV1alpha1MySQLVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersion"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLVersion"
        }
      },
      "delete": {
        "description": "delete a MySQLVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1MySQLVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLVersion"
        }
      },
      "patch": {
        "description": "partially update the specified MySQLVersion",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "patchCatalogKubedbComV1alpha1MySQLVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersion"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MySQLVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/perconaxtradbversions": {
      "get": {
        "description": "list or watch objects of kind PerconaXtraDBVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "listCatalogKubedbComV1alpha1PerconaXtraDBVersion",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersionList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBVersion"
        }
      },
      "post": {
        "description": "create a PerconaXtraDBVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "createCatalogKubedbComV1alpha1PerconaXtraDBVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersion"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersion"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBVersion"
        }
      },
      "delete": {
        "description": "delete collection of PerconaXtraDBVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1CollectionPerconaXtraDBVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/perconaxtradbversions/{name}": {
      "get": {
        "description": "read the specified PerconaXtraDBVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "readCatalogKubedbComV1alpha1PerconaXtraDBVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersion"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBVersion"
        }
      },
      "put": {
        "description": "replace the specified PerconaXtraDBVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "replaceCatalogKubedbComV1alpha1PerconaXtraDBVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersion"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBVersion"
        }
      },
      "delete": {
        "description": "delete a PerconaXtraDBVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1PerconaXtraDBVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBVersion"
        }
      },
      "patch": {
        "description": "partially update the specified PerconaXtraDBVersion",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "patchCatalogKubedbComV1alpha1PerconaXtraDBVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersion"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the PerconaXtraDBVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/postgresversions": {
      "get": {
        "description": "list or watch objects of kind PostgresVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "listCatalogKubedbComV1alpha1PostgresVersion",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersionList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresVersion"
        }
      },
      "post": {
        "description": "create a PostgresVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "createCatalogKubedbComV1alpha1PostgresVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersion"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersion"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresVersion"
        }
      },
      "delete": {
        "description": "delete collection of PostgresVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1CollectionPostgresVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/postgresversions/{name}": {
      "get": {
        "description": "read the specified PostgresVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "readCatalogKubedbComV1alpha1PostgresVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersion"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresVersion"
        }
      },
      "put": {
        "description": "replace the specified PostgresVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "replaceCatalogKubedbComV1alpha1PostgresVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersion"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresVersion"
        }
      },
      "delete": {
        "description": "delete a PostgresVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1PostgresVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresVersion"
        }
      },
      "patch": {
        "description": "partially update the specified PostgresVersion",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "patchCatalogKubedbComV1alpha1PostgresVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersion"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the PostgresVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/proxysqlversions": {
      "get": {
        "description": "list or watch objects of kind ProxySQLVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "listCatalogKubedbComV1alpha1ProxySQLVersion",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersionList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLVersion"
        }
      },
      "post": {
        "description": "create a ProxySQLVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "createCatalogKubedbComV1alpha1ProxySQLVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersion"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersion"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLVersion"
        }
      },
      "delete": {
        "description": "delete collection of ProxySQLVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1CollectionProxySQLVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/proxysqlversions/{name}": {
      "get": {
        "description": "read the specified ProxySQLVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "readCatalogKubedbComV1alpha1ProxySQLVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersion"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLVersion"
        }
      },
      "put": {
        "description": "replace the specified ProxySQLVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "replaceCatalogKubedbComV1alpha1ProxySQLVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersion"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLVersion"
        }
      },
      "delete": {
        "description": "delete a ProxySQLVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1ProxySQLVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLVersion"
        }
      },
      "patch": {
        "description": "partially update the specified ProxySQLVersion",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "patchCatalogKubedbComV1alpha1ProxySQLVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersion"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ProxySQLVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/redisversions": {
      "get": {
        "description": "list or watch objects of kind RedisVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "listCatalogKubedbComV1alpha1RedisVersion",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersionList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisVersion"
        }
      },
      "post": {
        "description": "create a RedisVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "createCatalogKubedbComV1alpha1RedisVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersion"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersion"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisVersion"
        }
      },
      "delete": {
        "description": "delete collection of RedisVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1CollectionRedisVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/redisversions/{name}": {
      "get": {
        "description": "read the specified RedisVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "readCatalogKubedbComV1alpha1RedisVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersion"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisVersion"
        }
      },
      "put": {
        "description": "replace the specified RedisVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "replaceCatalogKubedbComV1alpha1RedisVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersion"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersion"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisVersion"
        }
      },
      "delete": {
        "description": "delete a RedisVersion",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "deleteCatalogKubedbComV1alpha1RedisVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisVersion"
        }
      },
      "patch": {
        "description": "partially update the specified RedisVersion",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "patchCatalogKubedbComV1alpha1RedisVersion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersion"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the RedisVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/elasticsearchversions": {
      "get": {
        "description": "watch individual changes to a list of ElasticsearchVersion. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1ElasticsearchVersionList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/elasticsearchversions/{name}": {
      "get": {
        "description": "watch changes to an object of kind ElasticsearchVersion. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1ElasticsearchVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ElasticsearchVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/etcdversions": {
      "get": {
        "description": "watch individual changes to a list of EtcdVersion. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1EtcdVersionList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/etcdversions/{name}": {
      "get": {
        "description": "watch changes to an object of kind EtcdVersion. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1EtcdVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the EtcdVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/memcachedversions": {
      "get": {
        "description": "watch individual changes to a list of MemcachedVersion. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1MemcachedVersionList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/memcachedversions/{name}": {
      "get": {
        "description": "watch changes to an object of kind MemcachedVersion. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1MemcachedVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MemcachedVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/mongodbversions": {
      "get": {
        "description": "watch individual changes to a list of MongoDBVersion. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1MongoDBVersionList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/mongodbversions/{name}": {
      "get": {
        "description": "watch changes to an object of kind MongoDBVersion. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1MongoDBVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MongoDBVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/mysqlversions": {
      "get": {
        "description": "watch individual changes to a list of MySQLVersion. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1MySQLVersionList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/mysqlversions/{name}": {
      "get": {
        "description": "watch changes to an object of kind MySQLVersion. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1MySQLVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MySQLVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/perconaxtradbversions": {
      "get": {
        "description": "watch individual changes to a list of PerconaXtraDBVersion. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1PerconaXtraDBVersionList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/perconaxtradbversions/{name}": {
      "get": {
        "description": "watch changes to an object of kind PerconaXtraDBVersion. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1PerconaXtraDBVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the PerconaXtraDBVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/postgresversions": {
      "get": {
        "description": "watch individual changes to a list of PostgresVersion. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1PostgresVersionList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/postgresversions/{name}": {
      "get": {
        "description": "watch changes to an object of kind PostgresVersion. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1PostgresVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the PostgresVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/proxysqlversions": {
      "get": {
        "description": "watch individual changes to a list of ProxySQLVersion. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1ProxySQLVersionList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/proxysqlversions/{name}": {
      "get": {
        "description": "watch changes to an object of kind ProxySQLVersion. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1ProxySQLVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ProxySQLVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/redisversions": {
      "get": {
        "description": "watch individual changes to a list of RedisVersion. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1RedisVersionList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/catalog.kubedb.com/v1alpha1/watch/redisversions/{name}": {
      "get": {
        "description": "watch changes to an object of kind RedisVersion. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "catalogKubedbCom_v1alpha1"
        ],
        "operationId": "watchCatalogKubedbComV1alpha1RedisVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "catalog.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisVersion"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the RedisVersion",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com": {
      "get": {
        "description": "get information of a group",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom"
        ],
        "operationId": "getKubedbComAPIGroup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
            }
          }
        }
      }
    },
    "/apis/kubedb.com/v1alpha2": {
      "get": {
        "description": "get available resources",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "getKubedbComV1alpha2APIResources",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
            }
          }
        }
      }
    },
    "/apis/kubedb.com/v1alpha2/elasticsearches": {
      "get": {
        "description": "list or watch objects of kind Elasticsearch",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2ElasticsearchForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Elasticsearch"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/etcds": {
      "get": {
        "description": "list or watch objects of kind Etcd",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2EtcdForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.EtcdList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Etcd"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/mariadbs": {
      "get": {
        "description": "list or watch objects of kind MariaDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2MariaDBForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDBList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MariaDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/memcacheds": {
      "get": {
        "description": "list or watch objects of kind Memcached",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2MemcachedForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MemcachedList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Memcached"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/mongodbs": {
      "get": {
        "description": "list or watch objects of kind MongoDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2MongoDBForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MongoDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/mysqls": {
      "get": {
        "description": "list or watch objects of kind MySQL",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2MySQLForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MySQL"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/elasticsearches": {
      "get": {
        "description": "list or watch objects of kind Elasticsearch",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2NamespacedElasticsearch",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Elasticsearch"
        }
      },
      "post": {
        "description": "create an Elasticsearch",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "createKubedbComV1alpha2NamespacedElasticsearch",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Elasticsearch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Elasticsearch"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Elasticsearch"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Elasticsearch"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Elasticsearch"
        }
      },
      "delete": {
        "description": "delete collection of Elasticsearch",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2CollectionNamespacedElasticsearch",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Elasticsearch"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/elasticsearches/{name}": {
      "get": {
        "description": "read the specified Elasticsearch",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "readKubedbComV1alpha2NamespacedElasticsearch",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Elasticsearch"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Elasticsearch"
        }
      },
      "put": {
        "description": "replace the specified Elasticsearch",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "replaceKubedbComV1alpha2NamespacedElasticsearch",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Elasticsearch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Elasticsearch"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Elasticsearch"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Elasticsearch"
        }
      },
      "delete": {
        "description": "delete an Elasticsearch",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2NamespacedElasticsearch",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Elasticsearch"
        }
      },
      "patch": {
        "description": "partially update the specified Elasticsearch",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "patchKubedbComV1alpha2NamespacedElasticsearch",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Elasticsearch"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Elasticsearch"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Elasticsearch"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Elasticsearch",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/etcds": {
      "get": {
        "description": "list or watch objects of kind Etcd",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2NamespacedEtcd",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.EtcdList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Etcd"
        }
      },
      "post": {
        "description": "create an Etcd",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "createKubedbComV1alpha2NamespacedEtcd",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Etcd"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Etcd"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Etcd"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Etcd"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Etcd"
        }
      },
      "delete": {
        "description": "delete collection of Etcd",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2CollectionNamespacedEtcd",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Etcd"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/etcds/{name}": {
      "get": {
        "description": "read the specified Etcd",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "readKubedbComV1alpha2NamespacedEtcd",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Etcd"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Etcd"
        }
      },
      "put": {
        "description": "replace the specified Etcd",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "replaceKubedbComV1alpha2NamespacedEtcd",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Etcd"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Etcd"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Etcd"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Etcd"
        }
      },
      "delete": {
        "description": "delete an Etcd",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2NamespacedEtcd",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Etcd"
        }
      },
      "patch": {
        "description": "partially update the specified Etcd",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "patchKubedbComV1alpha2NamespacedEtcd",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Etcd"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Etcd"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Etcd"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Etcd",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/mariadbs": {
      "get": {
        "description": "list or watch objects of kind MariaDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2NamespacedMariaDB",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDBList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MariaDB"
        }
      },
      "post": {
        "description": "create a MariaDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "createKubedbComV1alpha2NamespacedMariaDB",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDB"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDB"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDB"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDB"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MariaDB"
        }
      },
      "delete": {
        "description": "delete collection of MariaDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2CollectionNamespacedMariaDB",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MariaDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/mariadbs/{name}": {
      "get": {
        "description": "read the specified MariaDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "readKubedbComV1alpha2NamespacedMariaDB",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDB"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MariaDB"
        }
      },
      "put": {
        "description": "replace the specified MariaDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "replaceKubedbComV1alpha2NamespacedMariaDB",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDB"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDB"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDB"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MariaDB"
        }
      },
      "delete": {
        "description": "delete a MariaDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2NamespacedMariaDB",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MariaDB"
        }
      },
      "patch": {
        "description": "partially update the specified MariaDB",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "patchKubedbComV1alpha2NamespacedMariaDB",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDB"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDB"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MariaDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MariaDB",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/memcacheds": {
      "get": {
        "description": "list or watch objects of kind Memcached",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2NamespacedMemcached",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MemcachedList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Memcached"
        }
      },
      "post": {
        "description": "create a Memcached",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "createKubedbComV1alpha2NamespacedMemcached",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Memcached"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Memcached"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Memcached"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Memcached"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Memcached"
        }
      },
      "delete": {
        "description": "delete collection of Memcached",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2CollectionNamespacedMemcached",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Memcached"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/memcacheds/{name}": {
      "get": {
        "description": "read the specified Memcached",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "readKubedbComV1alpha2NamespacedMemcached",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Memcached"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Memcached"
        }
      },
      "put": {
        "description": "replace the specified Memcached",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "replaceKubedbComV1alpha2NamespacedMemcached",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Memcached"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Memcached"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Memcached"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Memcached"
        }
      },
      "delete": {
        "description": "delete a Memcached",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2NamespacedMemcached",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Memcached"
        }
      },
      "patch": {
        "description": "partially update the specified Memcached",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "patchKubedbComV1alpha2NamespacedMemcached",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Memcached"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Memcached"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Memcached"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Memcached",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/mongodbs": {
      "get": {
        "description": "list or watch objects of kind MongoDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2NamespacedMongoDB",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MongoDB"
        }
      },
      "post": {
        "description": "create a MongoDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "createKubedbComV1alpha2NamespacedMongoDB",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDB"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDB"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDB"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDB"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MongoDB"
        }
      },
      "delete": {
        "description": "delete collection of MongoDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2CollectionNamespacedMongoDB",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MongoDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/mongodbs/{name}": {
      "get": {
        "description": "read the specified MongoDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "readKubedbComV1alpha2NamespacedMongoDB",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDB"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MongoDB"
        }
      },
      "put": {
        "description": "replace the specified MongoDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "replaceKubedbComV1alpha2NamespacedMongoDB",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDB"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDB"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDB"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MongoDB"
        }
      },
      "delete": {
        "description": "delete a MongoDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2NamespacedMongoDB",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MongoDB"
        }
      },
      "patch": {
        "description": "partially update the specified MongoDB",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "patchKubedbComV1alpha2NamespacedMongoDB",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDB"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDB"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MongoDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MongoDB",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/mysqls": {
      "get": {
        "description": "list or watch objects of kind MySQL",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2NamespacedMySQL",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MySQL"
        }
      },
      "post": {
        "description": "create a MySQL",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "createKubedbComV1alpha2NamespacedMySQL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQL"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQL"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQL"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQL"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MySQL"
        }
      },
      "delete": {
        "description": "delete collection of MySQL",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2CollectionNamespacedMySQL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MySQL"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/mysqls/{name}": {
      "get": {
        "description": "read the specified MySQL",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "readKubedbComV1alpha2NamespacedMySQL",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQL"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MySQL"
        }
      },
      "put": {
        "description": "replace the specified MySQL",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "replaceKubedbComV1alpha2NamespacedMySQL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQL"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQL"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQL"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MySQL"
        }
      },
      "delete": {
        "description": "delete a MySQL",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2NamespacedMySQL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MySQL"
        }
      },
      "patch": {
        "description": "partially update the specified MySQL",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "patchKubedbComV1alpha2NamespacedMySQL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQL"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQL"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MySQL"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MySQL",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/perconaxtradbs": {
      "get": {
        "description": "list or watch objects of kind PerconaXtraDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2NamespacedPerconaXtraDB",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDBList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PerconaXtraDB"
        }
      },
      "post": {
        "description": "create a PerconaXtraDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "createKubedbComV1alpha2NamespacedPerconaXtraDB",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDB"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDB"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDB"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDB"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PerconaXtraDB"
        }
      },
      "delete": {
        "description": "delete collection of PerconaXtraDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2CollectionNamespacedPerconaXtraDB",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PerconaXtraDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/perconaxtradbs/{name}": {
      "get": {
        "description": "read the specified PerconaXtraDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "readKubedbComV1alpha2NamespacedPerconaXtraDB",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDB"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PerconaXtraDB"
        }
      },
      "put": {
        "description": "replace the specified PerconaXtraDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "replaceKubedbComV1alpha2NamespacedPerconaXtraDB",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDB"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDB"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDB"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PerconaXtraDB"
        }
      },
      "delete": {
        "description": "delete a PerconaXtraDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2NamespacedPerconaXtraDB",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PerconaXtraDB"
        }
      },
      "patch": {
        "description": "partially update the specified PerconaXtraDB",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "patchKubedbComV1alpha2NamespacedPerconaXtraDB",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDB"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDB"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PerconaXtraDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the PerconaXtraDB",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/pgbouncers": {
      "get": {
        "description": "list or watch objects of kind PgBouncer",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2NamespacedPgBouncer",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncerList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PgBouncer"
        }
      },
      "post": {
        "description": "create a PgBouncer",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "createKubedbComV1alpha2NamespacedPgBouncer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncer"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncer"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncer"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncer"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PgBouncer"
        }
      },
      "delete": {
        "description": "delete collection of PgBouncer",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2CollectionNamespacedPgBouncer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PgBouncer"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/pgbouncers/{name}": {
      "get": {
        "description": "read the specified PgBouncer",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "readKubedbComV1alpha2NamespacedPgBouncer",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncer"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PgBouncer"
        }
      },
      "put": {
        "description": "replace the specified PgBouncer",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "replaceKubedbComV1alpha2NamespacedPgBouncer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncer"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncer"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncer"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PgBouncer"
        }
      },
      "delete": {
        "description": "delete a PgBouncer",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2NamespacedPgBouncer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PgBouncer"
        }
      },
      "patch": {
        "description": "partially update the specified PgBouncer",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "patchKubedbComV1alpha2NamespacedPgBouncer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncer"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncer"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PgBouncer"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the PgBouncer",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/postgreses": {
      "get": {
        "description": "list or watch objects of kind Postgres",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2NamespacedPostgres",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PostgresList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Postgres"
        }
      },
      "post": {
        "description": "create Postgres",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "createKubedbComV1alpha2NamespacedPostgres",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Postgres"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Postgres"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Postgres"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Postgres"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Postgres"
        }
      },
      "delete": {
        "description": "delete collection of Postgres",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2CollectionNamespacedPostgres",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Postgres"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/postgreses/{name}": {
      "get": {
        "description": "read the specified Postgres",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "readKubedbComV1alpha2NamespacedPostgres",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Postgres"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Postgres"
        }
      },
      "put": {
        "description": "replace the specified Postgres",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "replaceKubedbComV1alpha2NamespacedPostgres",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Postgres"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Postgres"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Postgres"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Postgres"
        }
      },
      "delete": {
        "description": "delete Postgres",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2NamespacedPostgres",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Postgres"
        }
      },
      "patch": {
        "description": "partially update the specified Postgres",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "patchKubedbComV1alpha2NamespacedPostgres",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Postgres"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Postgres"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Postgres"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Postgres",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/proxysqls": {
      "get": {
        "description": "list or watch objects of kind ProxySQL",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2NamespacedProxySQL",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQLList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "ProxySQL"
        }
      },
      "post": {
        "description": "create a ProxySQL",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "createKubedbComV1alpha2NamespacedProxySQL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQL"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQL"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQL"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQL"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "ProxySQL"
        }
      },
      "delete": {
        "description": "delete collection of ProxySQL",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2CollectionNamespacedProxySQL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "ProxySQL"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/proxysqls/{name}": {
      "get": {
        "description": "read the specified ProxySQL",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "readKubedbComV1alpha2NamespacedProxySQL",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQL"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "ProxySQL"
        }
      },
      "put": {
        "description": "replace the specified ProxySQL",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "replaceKubedbComV1alpha2NamespacedProxySQL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQL"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQL"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQL"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "ProxySQL"
        }
      },
      "delete": {
        "description": "delete a ProxySQL",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2NamespacedProxySQL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "ProxySQL"
        }
      },
      "patch": {
        "description": "partially update the specified ProxySQL",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "patchKubedbComV1alpha2NamespacedProxySQL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQL"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQL"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "ProxySQL"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ProxySQL",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/redises": {
      "get": {
        "description": "list or watch objects of kind Redis",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2NamespacedRedis",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.RedisList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Redis"
        }
      },
      "post": {
        "description": "create Redis",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "createKubedbComV1alpha2NamespacedRedis",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Redis"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Redis"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Redis"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Redis"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Redis"
        }
      },
      "delete": {
        "description": "delete collection of Redis",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2CollectionNamespacedRedis",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Redis"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/namespaces/{namespace}/redises/{name}": {
      "get": {
        "description": "read the specified Redis",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "readKubedbComV1alpha2NamespacedRedis",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Redis"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Redis"
        }
      },
      "put": {
        "description": "replace the specified Redis",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "replaceKubedbComV1alpha2NamespacedRedis",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Redis"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Redis"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Redis"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Redis"
        }
      },
      "delete": {
        "description": "delete Redis",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "deleteKubedbComV1alpha2NamespacedRedis",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Redis"
        }
      },
      "patch": {
        "description": "partially update the specified Redis",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "patchKubedbComV1alpha2NamespacedRedis",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Redis"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Redis"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Redis"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Redis",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/perconaxtradbs": {
      "get": {
        "description": "list or watch objects of kind PerconaXtraDB",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2PerconaXtraDBForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDBList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PerconaXtraDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/pgbouncers": {
      "get": {
        "description": "list or watch objects of kind PgBouncer",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2PgBouncerForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncerList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PgBouncer"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/postgreses": {
      "get": {
        "description": "list or watch objects of kind Postgres",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2PostgresForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PostgresList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Postgres"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/proxysqls": {
      "get": {
        "description": "list or watch objects of kind ProxySQL",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2ProxySQLForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQLList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "ProxySQL"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/redises": {
      "get": {
        "description": "list or watch objects of kind Redis",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "listKubedbComV1alpha2RedisForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.RedisList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Redis"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/elasticsearches": {
      "get": {
        "description": "watch individual changes to a list of Elasticsearch. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2ElasticsearchListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Elasticsearch"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/etcds": {
      "get": {
        "description": "watch individual changes to a list of Etcd. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2EtcdListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Etcd"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/mariadbs": {
      "get": {
        "description": "watch individual changes to a list of MariaDB. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2MariaDBListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MariaDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/memcacheds": {
      "get": {
        "description": "watch individual changes to a list of Memcached. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2MemcachedListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Memcached"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/mongodbs": {
      "get": {
        "description": "watch individual changes to a list of MongoDB. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2MongoDBListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MongoDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/mysqls": {
      "get": {
        "description": "watch individual changes to a list of MySQL. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2MySQLListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MySQL"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/elasticsearches": {
      "get": {
        "description": "watch individual changes to a list of Elasticsearch. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedElasticsearchList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Elasticsearch"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/elasticsearches/{name}": {
      "get": {
        "description": "watch changes to an object of kind Elasticsearch. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedElasticsearch",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Elasticsearch"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Elasticsearch",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/etcds": {
      "get": {
        "description": "watch individual changes to a list of Etcd. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedEtcdList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Etcd"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/etcds/{name}": {
      "get": {
        "description": "watch changes to an object of kind Etcd. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedEtcd",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Etcd"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Etcd",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/mariadbs": {
      "get": {
        "description": "watch individual changes to a list of MariaDB. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedMariaDBList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MariaDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/mariadbs/{name}": {
      "get": {
        "description": "watch changes to an object of kind MariaDB. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedMariaDB",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MariaDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MariaDB",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/memcacheds": {
      "get": {
        "description": "watch individual changes to a list of Memcached. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedMemcachedList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Memcached"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/memcacheds/{name}": {
      "get": {
        "description": "watch changes to an object of kind Memcached. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedMemcached",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Memcached"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Memcached",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/mongodbs": {
      "get": {
        "description": "watch individual changes to a list of MongoDB. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedMongoDBList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MongoDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/mongodbs/{name}": {
      "get": {
        "description": "watch changes to an object of kind MongoDB. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedMongoDB",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MongoDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MongoDB",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/mysqls": {
      "get": {
        "description": "watch individual changes to a list of MySQL. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedMySQLList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MySQL"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/mysqls/{name}": {
      "get": {
        "description": "watch changes to an object of kind MySQL. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedMySQL",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "MySQL"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MySQL",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/perconaxtradbs": {
      "get": {
        "description": "watch individual changes to a list of PerconaXtraDB. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedPerconaXtraDBList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PerconaXtraDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/perconaxtradbs/{name}": {
      "get": {
        "description": "watch changes to an object of kind PerconaXtraDB. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedPerconaXtraDB",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PerconaXtraDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the PerconaXtraDB",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/pgbouncers": {
      "get": {
        "description": "watch individual changes to a list of PgBouncer. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedPgBouncerList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PgBouncer"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/pgbouncers/{name}": {
      "get": {
        "description": "watch changes to an object of kind PgBouncer. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedPgBouncer",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PgBouncer"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the PgBouncer",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/postgreses": {
      "get": {
        "description": "watch individual changes to a list of Postgres. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedPostgresList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Postgres"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/postgreses/{name}": {
      "get": {
        "description": "watch changes to an object of kind Postgres. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedPostgres",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Postgres"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Postgres",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/proxysqls": {
      "get": {
        "description": "watch individual changes to a list of ProxySQL. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedProxySQLList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "ProxySQL"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/proxysqls/{name}": {
      "get": {
        "description": "watch changes to an object of kind ProxySQL. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedProxySQL",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "ProxySQL"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ProxySQL",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/redises": {
      "get": {
        "description": "watch individual changes to a list of Redis. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedRedisList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Redis"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/namespaces/{namespace}/redises/{name}": {
      "get": {
        "description": "watch changes to an object of kind Redis. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2NamespacedRedis",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Redis"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Redis",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/perconaxtradbs": {
      "get": {
        "description": "watch individual changes to a list of PerconaXtraDB. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2PerconaXtraDBListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PerconaXtraDB"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/pgbouncers": {
      "get": {
        "description": "watch individual changes to a list of PgBouncer. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2PgBouncerListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "PgBouncer"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/postgreses": {
      "get": {
        "description": "watch individual changes to a list of Postgres. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2PostgresListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Postgres"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/proxysqls": {
      "get": {
        "description": "watch individual changes to a list of ProxySQL. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2ProxySQLListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "ProxySQL"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/kubedb.com/v1alpha2/watch/redises": {
      "get": {
        "description": "watch individual changes to a list of Redis. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "kubedbCom_v1alpha2"
        ],
        "operationId": "watchKubedbComV1alpha2RedisListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "kubedb.com",
          "version": "v1alpha2",
          "kind": "Redis"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com": {
      "get": {
        "description": "get information of a group",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom"
        ],
        "operationId": "getOpsKubedbComAPIGroup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
            }
          }
        }
      }
    },
    "/apis/ops.kubedb.com/v1alpha1": {
      "get": {
        "description": "get available resources",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "getOpsKubedbComV1alpha1APIResources",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
            }
          }
        }
      }
    },
    "/apis/ops.kubedb.com/v1alpha1/elasticsearchopsrequests": {
      "get": {
        "description": "list or watch objects of kind ElasticsearchOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1ElasticsearchOpsRequestForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/etcdopsrequests": {
      "get": {
        "description": "list or watch objects of kind EtcdOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1EtcdOpsRequestForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/memcachedopsrequests": {
      "get": {
        "description": "list or watch objects of kind MemcachedOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1MemcachedOpsRequestForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/mongodbopsrequests": {
      "get": {
        "description": "list or watch objects of kind MongoDBOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1MongoDBOpsRequestForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/mysqlopsrequests": {
      "get": {
        "description": "list or watch objects of kind MySQLOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1MySQLOpsRequestForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/elasticsearchopsrequests": {
      "get": {
        "description": "list or watch objects of kind ElasticsearchOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1NamespacedElasticsearchOpsRequest",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchOpsRequest"
        }
      },
      "post": {
        "description": "create an ElasticsearchOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "createOpsKubedbComV1alpha1NamespacedElasticsearchOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequest"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchOpsRequest"
        }
      },
      "delete": {
        "description": "delete collection of ElasticsearchOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1CollectionNamespacedElasticsearchOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/elasticsearchopsrequests/{name}": {
      "get": {
        "description": "read the specified ElasticsearchOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "readOpsKubedbComV1alpha1NamespacedElasticsearchOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchOpsRequest"
        }
      },
      "put": {
        "description": "replace the specified ElasticsearchOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "replaceOpsKubedbComV1alpha1NamespacedElasticsearchOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchOpsRequest"
        }
      },
      "delete": {
        "description": "delete an ElasticsearchOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1NamespacedElasticsearchOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchOpsRequest"
        }
      },
      "patch": {
        "description": "partially update the specified ElasticsearchOpsRequest",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "patchOpsKubedbComV1alpha1NamespacedElasticsearchOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ElasticsearchOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/etcdopsrequests": {
      "get": {
        "description": "list or watch objects of kind EtcdOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1NamespacedEtcdOpsRequest",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdOpsRequest"
        }
      },
      "post": {
        "description": "create an EtcdOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "createOpsKubedbComV1alpha1NamespacedEtcdOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequest"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdOpsRequest"
        }
      },
      "delete": {
        "description": "delete collection of EtcdOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1CollectionNamespacedEtcdOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/etcdopsrequests/{name}": {
      "get": {
        "description": "read the specified EtcdOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "readOpsKubedbComV1alpha1NamespacedEtcdOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdOpsRequest"
        }
      },
      "put": {
        "description": "replace the specified EtcdOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "replaceOpsKubedbComV1alpha1NamespacedEtcdOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdOpsRequest"
        }
      },
      "delete": {
        "description": "delete an EtcdOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1NamespacedEtcdOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdOpsRequest"
        }
      },
      "patch": {
        "description": "partially update the specified EtcdOpsRequest",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "patchOpsKubedbComV1alpha1NamespacedEtcdOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the EtcdOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/memcachedopsrequests": {
      "get": {
        "description": "list or watch objects of kind MemcachedOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1NamespacedMemcachedOpsRequest",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedOpsRequest"
        }
      },
      "post": {
        "description": "create a MemcachedOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "createOpsKubedbComV1alpha1NamespacedMemcachedOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequest"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedOpsRequest"
        }
      },
      "delete": {
        "description": "delete collection of MemcachedOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1CollectionNamespacedMemcachedOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/memcachedopsrequests/{name}": {
      "get": {
        "description": "read the specified MemcachedOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "readOpsKubedbComV1alpha1NamespacedMemcachedOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedOpsRequest"
        }
      },
      "put": {
        "description": "replace the specified MemcachedOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "replaceOpsKubedbComV1alpha1NamespacedMemcachedOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedOpsRequest"
        }
      },
      "delete": {
        "description": "delete a MemcachedOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1NamespacedMemcachedOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedOpsRequest"
        }
      },
      "patch": {
        "description": "partially update the specified MemcachedOpsRequest",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "patchOpsKubedbComV1alpha1NamespacedMemcachedOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MemcachedOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/mongodbopsrequests": {
      "get": {
        "description": "list or watch objects of kind MongoDBOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1NamespacedMongoDBOpsRequest",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBOpsRequest"
        }
      },
      "post": {
        "description": "create a MongoDBOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "createOpsKubedbComV1alpha1NamespacedMongoDBOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequest"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBOpsRequest"
        }
      },
      "delete": {
        "description": "delete collection of MongoDBOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1CollectionNamespacedMongoDBOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/mongodbopsrequests/{name}": {
      "get": {
        "description": "read the specified MongoDBOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "readOpsKubedbComV1alpha1NamespacedMongoDBOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBOpsRequest"
        }
      },
      "put": {
        "description": "replace the specified MongoDBOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "replaceOpsKubedbComV1alpha1NamespacedMongoDBOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBOpsRequest"
        }
      },
      "delete": {
        "description": "delete a MongoDBOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1NamespacedMongoDBOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBOpsRequest"
        }
      },
      "patch": {
        "description": "partially update the specified MongoDBOpsRequest",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "patchOpsKubedbComV1alpha1NamespacedMongoDBOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MongoDBOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/mysqlopsrequests": {
      "get": {
        "description": "list or watch objects of kind MySQLOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1NamespacedMySQLOpsRequest",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLOpsRequest"
        }
      },
      "post": {
        "description": "create a MySQLOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "createOpsKubedbComV1alpha1NamespacedMySQLOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequest"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLOpsRequest"
        }
      },
      "delete": {
        "description": "delete collection of MySQLOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1CollectionNamespacedMySQLOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/mysqlopsrequests/{name}": {
      "get": {
        "description": "read the specified MySQLOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "readOpsKubedbComV1alpha1NamespacedMySQLOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLOpsRequest"
        }
      },
      "put": {
        "description": "replace the specified MySQLOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "replaceOpsKubedbComV1alpha1NamespacedMySQLOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLOpsRequest"
        }
      },
      "delete": {
        "description": "delete a MySQLOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1NamespacedMySQLOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLOpsRequest"
        }
      },
      "patch": {
        "description": "partially update the specified MySQLOpsRequest",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "patchOpsKubedbComV1alpha1NamespacedMySQLOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MySQLOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/perconaxtradbopsrequests": {
      "get": {
        "description": "list or watch objects of kind PerconaXtraDBOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1NamespacedPerconaXtraDBOpsRequest",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBOpsRequest"
        }
      },
      "post": {
        "description": "create a PerconaXtraDBOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "createOpsKubedbComV1alpha1NamespacedPerconaXtraDBOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequest"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBOpsRequest"
        }
      },
      "delete": {
        "description": "delete collection of PerconaXtraDBOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1CollectionNamespacedPerconaXtraDBOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/perconaxtradbopsrequests/{name}": {
      "get": {
        "description": "read the specified PerconaXtraDBOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "readOpsKubedbComV1alpha1NamespacedPerconaXtraDBOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBOpsRequest"
        }
      },
      "put": {
        "description": "replace the specified PerconaXtraDBOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "replaceOpsKubedbComV1alpha1NamespacedPerconaXtraDBOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBOpsRequest"
        }
      },
      "delete": {
        "description": "delete a PerconaXtraDBOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1NamespacedPerconaXtraDBOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBOpsRequest"
        }
      },
      "patch": {
        "description": "partially update the specified PerconaXtraDBOpsRequest",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "patchOpsKubedbComV1alpha1NamespacedPerconaXtraDBOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the PerconaXtraDBOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/postgresopsrequests": {
      "get": {
        "description": "list or watch objects of kind PostgresOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1NamespacedPostgresOpsRequest",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresOpsRequest"
        }
      },
      "post": {
        "description": "create a PostgresOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "createOpsKubedbComV1alpha1NamespacedPostgresOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequest"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresOpsRequest"
        }
      },
      "delete": {
        "description": "delete collection of PostgresOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1CollectionNamespacedPostgresOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/postgresopsrequests/{name}": {
      "get": {
        "description": "read the specified PostgresOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "readOpsKubedbComV1alpha1NamespacedPostgresOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresOpsRequest"
        }
      },
      "put": {
        "description": "replace the specified PostgresOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "replaceOpsKubedbComV1alpha1NamespacedPostgresOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresOpsRequest"
        }
      },
      "delete": {
        "description": "delete a PostgresOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1NamespacedPostgresOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresOpsRequest"
        }
      },
      "patch": {
        "description": "partially update the specified PostgresOpsRequest",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "patchOpsKubedbComV1alpha1NamespacedPostgresOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the PostgresOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/proxysqlopsrequests": {
      "get": {
        "description": "list or watch objects of kind ProxySQLOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1NamespacedProxySQLOpsRequest",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLOpsRequest"
        }
      },
      "post": {
        "description": "create a ProxySQLOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "createOpsKubedbComV1alpha1NamespacedProxySQLOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequest"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLOpsRequest"
        }
      },
      "delete": {
        "description": "delete collection of ProxySQLOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1CollectionNamespacedProxySQLOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/proxysqlopsrequests/{name}": {
      "get": {
        "description": "read the specified ProxySQLOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "readOpsKubedbComV1alpha1NamespacedProxySQLOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLOpsRequest"
        }
      },
      "put": {
        "description": "replace the specified ProxySQLOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "replaceOpsKubedbComV1alpha1NamespacedProxySQLOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLOpsRequest"
        }
      },
      "delete": {
        "description": "delete a ProxySQLOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1NamespacedProxySQLOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLOpsRequest"
        }
      },
      "patch": {
        "description": "partially update the specified ProxySQLOpsRequest",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "patchOpsKubedbComV1alpha1NamespacedProxySQLOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ProxySQLOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/redisopsrequests": {
      "get": {
        "description": "list or watch objects of kind RedisOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1NamespacedRedisOpsRequest",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
            "name": "allowWatchBookmarks",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
            "name": "watch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisOpsRequest"
        }
      },
      "post": {
        "description": "create a RedisOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "createOpsKubedbComV1alpha1NamespacedRedisOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequest"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisOpsRequest"
        }
      },
      "delete": {
        "description": "delete collection of RedisOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1CollectionNamespacedRedisOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
            "name": "continue",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
            "name": "fieldSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
            "name": "labelSelector",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
            "name": "limit",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersion",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
            "name": "resourceVersionMatch",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
            "name": "timeoutSeconds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/namespaces/{namespace}/redisopsrequests/{name}": {
      "get": {
        "description": "read the specified RedisOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "readOpsKubedbComV1alpha1NamespacedRedisOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisOpsRequest"
        }
      },
      "put": {
        "description": "replace the specified RedisOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "replaceOpsKubedbComV1alpha1NamespacedRedisOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequest"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisOpsRequest"
        }
      },
      "delete": {
        "description": "delete a RedisOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "deleteOpsKubedbComV1alpha1NamespacedRedisOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "integer",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "name": "gracePeriodSeconds",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
            "name": "orphanDependents",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "name": "propagationPolicy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisOpsRequest"
        }
      },
      "patch": {
        "description": "partially update the specified RedisOpsRequest",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "patchOpsKubedbComV1alpha1NamespacedRedisOpsRequest",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
            "name": "fieldManager",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "boolean",
            "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequest"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequest"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the RedisOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/perconaxtradbopsrequests": {
      "get": {
        "description": "list or watch objects of kind PerconaXtraDBOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1PerconaXtraDBOpsRequestForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/postgresopsrequests": {
      "get": {
        "description": "list or watch objects of kind PostgresOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1PostgresOpsRequestForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/proxysqlopsrequests": {
      "get": {
        "description": "list or watch objects of kind ProxySQLOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1ProxySQLOpsRequestForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/redisopsrequests": {
      "get": {
        "description": "list or watch objects of kind RedisOpsRequest",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "listOpsKubedbComV1alpha1RedisOpsRequestForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequestList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/elasticsearchopsrequests": {
      "get": {
        "description": "watch individual changes to a list of ElasticsearchOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1ElasticsearchOpsRequestListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/etcdopsrequests": {
      "get": {
        "description": "watch individual changes to a list of EtcdOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1EtcdOpsRequestListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/memcachedopsrequests": {
      "get": {
        "description": "watch individual changes to a list of MemcachedOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1MemcachedOpsRequestListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/mongodbopsrequests": {
      "get": {
        "description": "watch individual changes to a list of MongoDBOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1MongoDBOpsRequestListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/mysqlopsrequests": {
      "get": {
        "description": "watch individual changes to a list of MySQLOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1MySQLOpsRequestListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/elasticsearchopsrequests": {
      "get": {
        "description": "watch individual changes to a list of ElasticsearchOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedElasticsearchOpsRequestList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/elasticsearchopsrequests/{name}": {
      "get": {
        "description": "watch changes to an object of kind ElasticsearchOpsRequest. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedElasticsearchOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ElasticsearchOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ElasticsearchOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/etcdopsrequests": {
      "get": {
        "description": "watch individual changes to a list of EtcdOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedEtcdOpsRequestList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/etcdopsrequests/{name}": {
      "get": {
        "description": "watch changes to an object of kind EtcdOpsRequest. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedEtcdOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "EtcdOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the EtcdOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/memcachedopsrequests": {
      "get": {
        "description": "watch individual changes to a list of MemcachedOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedMemcachedOpsRequestList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/memcachedopsrequests/{name}": {
      "get": {
        "description": "watch changes to an object of kind MemcachedOpsRequest. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedMemcachedOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MemcachedOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MemcachedOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/mongodbopsrequests": {
      "get": {
        "description": "watch individual changes to a list of MongoDBOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedMongoDBOpsRequestList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/mongodbopsrequests/{name}": {
      "get": {
        "description": "watch changes to an object of kind MongoDBOpsRequest. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedMongoDBOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MongoDBOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MongoDBOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/mysqlopsrequests": {
      "get": {
        "description": "watch individual changes to a list of MySQLOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedMySQLOpsRequestList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/mysqlopsrequests/{name}": {
      "get": {
        "description": "watch changes to an object of kind MySQLOpsRequest. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedMySQLOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "MySQLOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the MySQLOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/perconaxtradbopsrequests": {
      "get": {
        "description": "watch individual changes to a list of PerconaXtraDBOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedPerconaXtraDBOpsRequestList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/perconaxtradbopsrequests/{name}": {
      "get": {
        "description": "watch changes to an object of kind PerconaXtraDBOpsRequest. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedPerconaXtraDBOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the PerconaXtraDBOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/postgresopsrequests": {
      "get": {
        "description": "watch individual changes to a list of PostgresOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedPostgresOpsRequestList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/postgresopsrequests/{name}": {
      "get": {
        "description": "watch changes to an object of kind PostgresOpsRequest. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedPostgresOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the PostgresOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/proxysqlopsrequests": {
      "get": {
        "description": "watch individual changes to a list of ProxySQLOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedProxySQLOpsRequestList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/proxysqlopsrequests/{name}": {
      "get": {
        "description": "watch changes to an object of kind ProxySQLOpsRequest. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedProxySQLOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ProxySQLOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/redisopsrequests": {
      "get": {
        "description": "watch individual changes to a list of RedisOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedRedisOpsRequestList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/namespaces/{namespace}/redisopsrequests/{name}": {
      "get": {
        "description": "watch changes to an object of kind RedisOpsRequest. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1NamespacedRedisOpsRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the RedisOpsRequest",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "object name and auth scope, such as for teams and projects",
          "name": "namespace",
          "in": "path",
          "required": true
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/perconaxtradbopsrequests": {
      "get": {
        "description": "watch individual changes to a list of PerconaXtraDBOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1PerconaXtraDBOpsRequestListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PerconaXtraDBOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/postgresopsrequests": {
      "get": {
        "description": "watch individual changes to a list of PostgresOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1PostgresOpsRequestListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "PostgresOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/proxysqlopsrequests": {
      "get": {
        "description": "watch individual changes to a list of ProxySQLOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1ProxySQLOpsRequestListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "ProxySQLOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    },
    "/apis/ops.kubedb.com/v1alpha1/watch/redisopsrequests": {
      "get": {
        "description": "watch individual changes to a list of RedisOpsRequest. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "opsKubedbCom_v1alpha1"
        ],
        "operationId": "watchOpsKubedbComV1alpha1RedisOpsRequestListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "ops.kubedb.com",
          "version": "v1alpha1",
          "kind": "RedisOpsRequest"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "name": "allowWatchBookmarks",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "name": "continue",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "name": "fieldSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "name": "labelSelector",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "name": "limit",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "If 'true', then the output is pretty printed.",
          "name": "pretty",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersion",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "name": "resourceVersionMatch",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "integer",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "name": "timeoutSeconds",
          "in": "query"
        },
        {
          "uniqueItems": true,
          "type": "boolean",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "name": "watch",
          "in": "query"
        }
      ]
    }
  },
  "definitions": {
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.AddonSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tasks": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.AddonTasks"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.AddonTasks": {
      "type": "object",
      "properties": {
        "manifestBackup": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ManifestBackup"
        },
        "manifestRestore": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ManifestRestore"
        },
        "volumeSnapshot": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.VolumeSnapshot"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ArchiverSpec": {
      "type": "object",
      "properties": {
        "addon": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.AddonSpec"
        },
        "walg": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.WalgSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchDashboardVersionDatabase": {
      "description": "ElasticsearchDashboardVersionDatabase is the Elasticsearch Dashboard image",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchSecurityContext": {
      "description": "ElasticsearchSecurityContext provides additional securityContext settings for the Elasticsearch Image",
      "type": "object",
      "properties": {
        "runAsAnyNonRoot": {
          "description": "RunAsAnyNonRoot will be true if user can change the default UID to other than 1000.",
          "type": "boolean"
        },
        "runAsUser": {
          "description": "RunAsUser is default UID for the DB container. It defaults to 1000.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersion": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersionSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "ElasticsearchVersion",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersionDashboardInitContainer": {
      "description": "ElasticsearchVersionDashboardInitContainer is the ElasticsearchDashboard Container initializer",
      "type": "object",
      "required": [
        "yqImage"
      ],
      "properties": {
        "yqImage": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersionDatabase": {
      "description": "ElasticsearchVersionDatabase is the Elasticsearch Database image",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersionExporter": {
      "description": "ElasticsearchVersionExporter is the image for the Elasticsearch exporter",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersionInitContainer": {
      "description": "ElasticsearchVersionInitContainer is the Elasticsearch Container initializer",
      "type": "object",
      "required": [
        "image",
        "yqImage"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        },
        "yqImage": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersionList": {
      "description": "ElasticsearchVersionList is a list of ElasticsearchVersions",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of ElasticsearchVersion CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersion"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "ElasticsearchVersionList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersionPodSecurityPolicy": {
      "description": "ElasticsearchVersionPodSecurityPolicy is the Elasticsearch pod security policies",
      "type": "object",
      "required": [
        "databasePolicyName"
      ],
      "properties": {
        "databasePolicyName": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersionSpec": {
      "description": "ElasticsearchVersionSpec is the spec for elasticsearch version",
      "type": "object",
      "required": [
        "version",
        "authPlugin",
        "db",
        "exporter",
        "initContainer",
        "podSecurityPolicies"
      ],
      "properties": {
        "authPlugin": {
          "description": "Authentication plugin used by Elasticsearch cluster",
          "type": "string",
          "default": ""
        },
        "dashboard": {
          "description": "Dashboard Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchDashboardVersionDatabase"
        },
        "dashboardInitContainer": {
          "description": "Init container Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersionDashboardInitContainer"
        },
        "db": {
          "description": "Database Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersionDatabase"
        },
        "deprecated": {
          "description": "Deprecated versions usable but regarded as obsolete and best avoided, typically due to having been superseded.",
          "type": "boolean"
        },
        "distribution": {
          "description": "Distribution",
          "type": "string"
        },
        "exporter": {
          "description": "Exporter Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersionExporter"
        },
        "gitSyncer": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.GitSyncer"
        },
        "initContainer": {
          "description": "Init container Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersionInitContainer"
        },
        "podSecurityPolicies": {
          "description": "PSP names",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchVersionPodSecurityPolicy"
        },
        "securityContext": {
          "description": "SecurityContext is for the additional security information for the Elasticsearch container",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ElasticsearchSecurityContext"
        },
        "stash": {
          "description": "Stash defines backup and restore task definitions.",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.StashAddonSpec"
        },
        "updateConstraints": {
          "description": "update constraints",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.UpdateConstraints"
        },
        "version": {
          "description": "Version",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersion": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersionSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "EtcdVersion",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersionDatabase": {
      "description": "EtcdVersionDatabase is the Etcd Database image",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersionExporter": {
      "description": "EtcdVersionExporter is the image for the Etcd exporter",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersionList": {
      "description": "EtcdVersionList is a list of EtcdVersions",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of EtcdVersion CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersion"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "EtcdVersionList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersionSpec": {
      "description": "EtcdVersionSpec is the spec for postgres version",
      "type": "object",
      "required": [
        "version",
        "db",
        "exporter"
      ],
      "properties": {
        "db": {
          "description": "Database Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersionDatabase"
        },
        "deprecated": {
          "description": "Deprecated versions usable but regarded as obsolete and best avoided, typically due to having been superseded.",
          "type": "boolean"
        },
        "exporter": {
          "description": "Exporter Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.EtcdVersionExporter"
        },
        "gitSyncer": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.GitSyncer"
        },
        "stash": {
          "description": "Stash defines backup and restore task definitions.",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.StashAddonSpec"
        },
        "version": {
          "description": "Version",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.GitSyncer": {
      "description": "GitSyncer is the image for the kubernetes/git-sync https://github.com/kubernetes/git-sync",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ManifestBackup": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ManifestRestore": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersion": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersionSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "MemcachedVersion",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersionDatabase": {
      "description": "MemcachedVersionDatabase is the Memcached Database image",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersionExporter": {
      "description": "MemcachedVersionExporter is the image for the Memcached exporter",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersionList": {
      "description": "MemcachedVersionList is a list of MemcachedVersions",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of MemcachedVersion CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersion"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "MemcachedVersionList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersionPodSecurityPolicy": {
      "description": "MemcachedVersionPodSecurityPolicy is the Memcached pod security policies",
      "type": "object",
      "required": [
        "databasePolicyName"
      ],
      "properties": {
        "databasePolicyName": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersionSpec": {
      "description": "MemcachedVersionSpec is the spec for memcached version",
      "type": "object",
      "required": [
        "version",
        "db",
        "exporter",
        "podSecurityPolicies"
      ],
      "properties": {
        "db": {
          "description": "Database Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersionDatabase"
        },
        "deprecated": {
          "description": "Deprecated versions usable but regarded as obsolete and best avoided, typically due to having been superseded.",
          "type": "boolean"
        },
        "exporter": {
          "description": "Exporter Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersionExporter"
        },
        "podSecurityPolicies": {
          "description": "PSP names",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MemcachedVersionPodSecurityPolicy"
        },
        "version": {
          "description": "Version",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersion": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersionSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "MongoDBVersion",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersionDatabase": {
      "description": "MongoDBVersionDatabase is the MongoDB Database image",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersionExporter": {
      "description": "MongoDBVersionExporter is the image for the MongoDB exporter",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersionInitContainer": {
      "description": "MongoDBVersionInitContainer is the Elasticsearch Container initializer",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersionList": {
      "description": "MongoDBVersionList is a list of MongoDBVersions",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of MongoDBVersion CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersion"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "MongoDBVersionList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersionPodSecurityPolicy": {
      "description": "MongoDBVersionPodSecurityPolicy is the MongoDB pod security policies",
      "type": "object",
      "required": [
        "databasePolicyName"
      ],
      "properties": {
        "databasePolicyName": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersionSpec": {
      "description": "MongoDBVersionSpec is the spec for mongodb version",
      "type": "object",
      "required": [
        "version",
        "db",
        "exporter",
        "initContainer",
        "podSecurityPolicies",
        "replicationModeDetector"
      ],
      "properties": {
        "archiver": {
          "description": "Archiver defines the walg \u0026 stash-addon related specifications",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ArchiverSpec"
        },
        "db": {
          "description": "Database Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersionDatabase"
        },
        "deprecated": {
          "description": "Deprecated versions usable but regarded as obsolete and best avoided, typically due to having been superseded.",
          "type": "boolean"
        },
        "distribution": {
          "description": "Distribution",
          "type": "string"
        },
        "exporter": {
          "description": "Exporter Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersionExporter"
        },
        "gitSyncer": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.GitSyncer"
        },
        "initContainer": {
          "description": "Init container Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersionInitContainer"
        },
        "podSecurityPolicies": {
          "description": "PSP names",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MongoDBVersionPodSecurityPolicy"
        },
        "replicationModeDetector": {
          "description": "ReplicationModeDetector Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ReplicationModeDetector"
        },
        "stash": {
          "description": "Stash defines backup and restore task definitions.",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.StashAddonSpec"
        },
        "updateConstraints": {
          "description": "update constraints",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.UpdateConstraints"
        },
        "version": {
          "description": "Version",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLUpdateConstraints": {
      "type": "object",
      "properties": {
        "allowlist": {
          "description": "List of all accepted versions for upgrade request",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionAllowlist"
        },
        "denylist": {
          "description": "List of all rejected versions for upgrade request",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionDenylist"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersion": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "MySQLVersion",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionAllowlist": {
      "type": "object",
      "properties": {
        "groupReplication": {
          "description": "List of all accepted versions for upgrade request of a GroupReplication cluster. empty indicates all accepted",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "standalone": {
          "description": "List of all accepted versions for upgrade request of a Standalone server. empty indicates all accepted",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionCoordinator": {
      "description": "MySQLVersionCoordinator is the image for coordinator",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionDatabase": {
      "description": "MySQLVersionDatabase is the MySQL Database image",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionDenylist": {
      "type": "object",
      "properties": {
        "groupReplication": {
          "description": "List of all rejected versions for upgrade request of a GroupReplication cluster",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "standalone": {
          "description": "List of all rejected versions for upgrade request of a Standalone server",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionExporter": {
      "description": "MySQLVersionExporter is the image for the MySQL exporter",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionInitContainer": {
      "description": "MySQLVersionInitContainer is the MySQL Container initializer",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionList": {
      "description": "MySQLVersionList is a list of MySQLVersions",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of MySQLVersion CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersion"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "MySQLVersionList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionPodSecurityPolicy": {
      "description": "MySQLVersionPodSecurityPolicy is the MySQL pod security policies",
      "type": "object",
      "required": [
        "databasePolicyName"
      ],
      "properties": {
        "databasePolicyName": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionRouter": {
      "description": "MySQLVersionRouter is the MySQL Router lightweight middleware that provides transparent routing between your application and back-end MySQL Servers",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionRouterInitContainer": {
      "description": "MySQLVersionRouterInitContainer is mysql router init container",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionSpec": {
      "description": "MySQLVersionSpec is the spec for MySQL version",
      "type": "object",
      "required": [
        "version",
        "db",
        "exporter",
        "initContainer",
        "podSecurityPolicies"
      ],
      "properties": {
        "coordinator": {
          "description": "Coordinator Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionCoordinator"
        },
        "db": {
          "description": "Database Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionDatabase"
        },
        "deprecated": {
          "description": "Deprecated versions usable but regarded as obsolete and best avoided, typically due to having been superseded.",
          "type": "boolean"
        },
        "distribution": {
          "description": "Distribution",
          "type": "string"
        },
        "exporter": {
          "description": "Exporter Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionExporter"
        },
        "gitSyncer": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.GitSyncer"
        },
        "initContainer": {
          "description": "Init container Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionInitContainer"
        },
        "podSecurityPolicies": {
          "description": "PSP names",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionPodSecurityPolicy"
        },
        "replicationModeDetector": {
          "description": "ReplicationModeDetector Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ReplicationModeDetector"
        },
        "router": {
          "description": "Router image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionRouter"
        },
        "routerInitContainer": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLVersionRouterInitContainer"
        },
        "stash": {
          "description": "Stash defines backup and restore task definitions.",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.StashAddonSpec"
        },
        "updateConstraints": {
          "description": "update constraints",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.MySQLUpdateConstraints"
        },
        "version": {
          "description": "Version",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersion": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersionSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "PerconaXtraDBVersion",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersionCoordinator": {
      "description": "PerconaXtraDBVersionCoordinator is the PerconaXtraDB Coordinator image",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersionDatabase": {
      "description": "PerconaXtraDBVersionDatabase is the perconaxtradb image",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersionExporter": {
      "description": "PerconaXtraDBVersionExporter is the image for the PerconaXtraDB exporter",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersionInitContainer": {
      "description": "PerconaXtraDBVersionInitContainer is the PerconaXtraDB Container initializer",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersionList": {
      "description": "PerconaXtraDBVersionList is a list of PerconaXtraDBVersions",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of PerconaXtraDBVersion CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersion"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "PerconaXtraDBVersionList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersionPodSecurityPolicy": {
      "description": "PerconaXtraDBVersionPodSecurityPolicy is the PerconaXtraDB pod security policies",
      "type": "object",
      "required": [
        "databasePolicyName"
      ],
      "properties": {
        "databasePolicyName": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersionSpec": {
      "description": "PerconaXtraDBVersionSpec is the spec for PerconaXtraDB version",
      "type": "object",
      "required": [
        "version",
        "db",
        "exporter",
        "initContainer",
        "podSecurityPolicies"
      ],
      "properties": {
        "coordinator": {
          "description": "Coordinator Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersionCoordinator"
        },
        "db": {
          "description": "Database Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersionDatabase"
        },
        "deprecated": {
          "description": "Deprecated versions usable but regarded as obsolete and best avoided, typically due to having been superseded.",
          "type": "boolean"
        },
        "exporter": {
          "description": "Exporter Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersionExporter"
        },
        "gitSyncer": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.GitSyncer"
        },
        "initContainer": {
          "description": "Init container Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersionInitContainer"
        },
        "podSecurityPolicies": {
          "description": "PSP names",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PerconaXtraDBVersionPodSecurityPolicy"
        },
        "stash": {
          "description": "Stash defines backup and restore task definitions.",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.StashAddonSpec"
        },
        "updateConstraints": {
          "description": "update constraints",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.UpdateConstraints"
        },
        "version": {
          "description": "Version",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresSecurityContext": {
      "description": "PostgresSecurityContext is the additional features for the Postgres",
      "type": "object",
      "properties": {
        "runAsAnyNonRoot": {
          "description": "RunAsAnyNonRoot will be true if user can change the default db container user to other than postgres user. It will be always false for alpine images https://hub.docker.com/_/postgres/ # section : Arbitrary --user Notes",
          "type": "boolean"
        },
        "runAsUser": {
          "description": "RunAsUser is default UID for the DB container. It is by default 999 for debian based image and 70 for alpine based image. postgres UID 999 for debian images https://github.com/docker-library/postgres/blob/14f13e4b399ed1848fa24c2c1f5bd40c25732bdd/13/Dockerfile#L15 postgres UID 70  for alpine images https://github.com/docker-library/postgres/blob/14f13e4b399ed1848fa24c2c1f5bd40c25732bdd/13/alpine/Dockerfile#L6",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersion": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersionSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "PostgresVersion",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersionCoordinator": {
      "description": "PostgresVersionCoordinator is the Postgres leader elector image",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersionDatabase": {
      "description": "PostgresVersionDatabase is the Postgres Database image",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "baseOS": {
          "type": "string"
        },
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersionExporter": {
      "description": "PostgresVersionExporter is the image for the Postgres exporter",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersionInitContainer": {
      "description": "PostgresVersionInitContainer is the Postgres init container image",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersionList": {
      "description": "PostgresVersionList is a list of PostgresVersions",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of PostgresVersion CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersion"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "PostgresVersionList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersionPodSecurityPolicy": {
      "description": "PostgresVersionPodSecurityPolicy is the Postgres pod security policies",
      "type": "object",
      "required": [
        "databasePolicyName"
      ],
      "properties": {
        "databasePolicyName": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersionSpec": {
      "description": "PostgresVersionSpec is the spec for postgres version",
      "type": "object",
      "required": [
        "version",
        "db",
        "exporter",
        "podSecurityPolicies"
      ],
      "properties": {
        "archiver": {
          "description": "Archiver defines the walg \u0026 stash-addon related specifications",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ArchiverSpec"
        },
        "coordinator": {
          "description": "Coordinator Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersionCoordinator"
        },
        "db": {
          "description": "Database Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersionDatabase"
        },
        "deprecated": {
          "description": "Deprecated versions usable but regarded as obsolete and best avoided, typically due to having been superseded.",
          "type": "boolean"
        },
        "distribution": {
          "description": "Distribution",
          "type": "string"
        },
        "exporter": {
          "description": "Exporter Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersionExporter"
        },
        "gitSyncer": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.GitSyncer"
        },
        "initContainer": {
          "description": "init container image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersionInitContainer"
        },
        "podSecurityPolicies": {
          "description": "PSP names",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresVersionPodSecurityPolicy"
        },
        "securityContext": {
          "description": "SecurityContext is for the additional config for postgres DB container",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.PostgresSecurityContext"
        },
        "stash": {
          "description": "Stash defines backup and restore task definitions.",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.StashAddonSpec"
        },
        "updateConstraints": {
          "description": "update constraints",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.UpdateConstraints"
        },
        "version": {
          "description": "Version",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersion": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersionSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "ProxySQLVersion",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersionExporter": {
      "description": "ProxySQLVersionExporter is the image for the ProxySQL exporter",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersionList": {
      "description": "ProxySQLVersionList is a list of ProxySQLVersions",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of ProxySQLVersion CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersion"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "ProxySQLVersionList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersionPodSecurityPolicy": {
      "description": "ProxySQLVersionPodSecurityPolicy is the ProxySQL pod security policies",
      "type": "object",
      "required": [
        "databasePolicyName"
      ],
      "properties": {
        "databasePolicyName": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersionProxysql": {
      "description": "ProxySQLVersionProxysql is the proxysql image",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersionSpec": {
      "description": "ProxySQLVersionSpec is the spec for ProxySQL version",
      "type": "object",
      "required": [
        "version",
        "proxysql",
        "podSecurityPolicies"
      ],
      "properties": {
        "deprecated": {
          "description": "Deprecated versions usable but regarded as obsolete and best avoided, typically due to having been superseded.",
          "type": "boolean"
        },
        "exporter": {
          "description": "Exporter Image",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersionExporter"
        },
        "podSecurityPolicies": {
          "description": "PSP names",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersionPodSecurityPolicy"
        },
        "proxysql": {
          "description": "Proxysql Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.ProxySQLVersionProxysql"
        },
        "updateConstraints": {
          "description": "update constraints",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.UpdateConstraints"
        },
        "version": {
          "description": "Version",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersion": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersionSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "RedisVersion",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersionCoordinator": {
      "description": "RedisVersionCoordinator is the Redis coordinator image",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersionDatabase": {
      "description": "RedisVersionDatabase is the Redis Database image",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersionExporter": {
      "description": "RedisVersionExporter is the image for the Redis exporter",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersionInitContainer": {
      "description": "RedisVersionInitContainer is the Redis init container image",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersionList": {
      "description": "RedisVersionList is a list of RedisVersions",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of RedisVersion CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersion"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "catalog.kubedb.com",
          "kind": "RedisVersionList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersionPodSecurityPolicy": {
      "description": "RedisVersionPodSecurityPolicy is the Redis pod security policies",
      "type": "object",
      "required": [
        "databasePolicyName"
      ],
      "properties": {
        "databasePolicyName": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersionSpec": {
      "description": "RedisVersionSpec is the spec for redis version",
      "type": "object",
      "required": [
        "version",
        "db",
        "exporter",
        "podSecurityPolicies"
      ],
      "properties": {
        "coordinator": {
          "description": "Coordinator Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersionCoordinator"
        },
        "db": {
          "description": "Database Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersionDatabase"
        },
        "deprecated": {
          "description": "Deprecated versions usable but regarded as obsolete and best avoided, typically due to having been superseded.",
          "type": "boolean"
        },
        "exporter": {
          "description": "Exporter Image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersionExporter"
        },
        "gitSyncer": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.GitSyncer"
        },
        "initContainer": {
          "description": "init container image",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersionInitContainer"
        },
        "podSecurityPolicies": {
          "description": "PSP names",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.RedisVersionPodSecurityPolicy"
        },
        "stash": {
          "description": "Stash defines backup and restore task definitions.",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.StashAddonSpec"
        },
        "updateConstraints": {
          "description": "update constraints",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.catalog.v1alpha1.UpdateConstraints"
        },
        "version": {
          "description": "Version",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.ReplicationModeDetector": {
      "description": "ReplicationModeDetector is the image for the MySQL replication mode detector",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.UpdateConstraints": {
      "description": "UpdateConstraints specifies the constraints that need to be considered during version upgrade",
      "type": "object",
      "properties": {
        "allowlist": {
          "description": "List of all accepted versions for upgrade request. An empty list indicates all versions are accepted except the denylist.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "denylist": {
          "description": "List of all rejected versions for upgrade request. An empty list indicates no version is rejected.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.VolumeSnapshot": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.catalog.v1alpha1.WalgSpec": {
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "image": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Age": {
      "type": "object",
      "properties": {
        "lastUpdateTimestamp": {
          "description": "Populated by Provisioner when authSecret is created or Ops Manager when authSecret is updated.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AllowedConsumers": {
      "description": "AllowedConsumers defines which consumers may refer to a database instance.",
      "type": "object",
      "properties": {
        "namespaces": {
          "description": "Namespaces indicates namespaces from which Consumers may be attached to",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ConsumerNamespaces"
        },
        "selector": {
          "description": "Selector specifies a selector for consumers that are allowed to bind to this database instance.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Archiver": {
      "type": "object",
      "required": [
        "ref"
      ],
      "properties": {
        "pause": {
          "description": "Pause is used to stop the archiver backup for the database",
          "type": "boolean"
        },
        "ref": {
          "description": "Ref is the name and namespace reference to the Archiver CR",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.ObjectReference"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ArchiverRecovery": {
      "type": "object",
      "required": [
        "recoveryTimestamp"
      ],
      "properties": {
        "encryptionSecret": {
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.ObjectReference"
        },
        "fullDBRepository": {
          "description": "FullDBRepository means db restore + manifest restore",
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.ObjectReference"
        },
        "manifestRepository": {
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.ObjectReference"
        },
        "recoveryTimestamp": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AutoOpsSpec": {
      "description": "AutoOpsSpec defines the specifications of automatic ops-request recommendation generation",
      "type": "object",
      "properties": {
        "disabled": {
          "description": "Disabled specifies whether the ops-request recommendation generation will be disabled or not.",
          "type": "boolean"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ConnectionPoolConfig": {
      "type": "object",
      "properties": {
        "authType": {
          "description": "AuthType specifies how to authenticate users. Default: md5 (md5+plain text).",
          "type": "string"
        },
        "defaultPoolSize": {
          "description": "DefaultPoolSize specifies how many server connections to allow per user/database pair. Default: 20.",
          "type": "integer",
          "format": "int64"
        },
        "ignoreStartupParameters": {
          "description": "IgnoreStartupParameters specifies comma-separated startup parameters that pgbouncer knows are handled by admin and it can ignore them. Default: empty",
          "type": "string"
        },
        "maxClientConnections": {
          "description": "MaxClientConnections is the maximum number of allowed client connections. Default: 100.",
          "type": "integer",
          "format": "int64"
        },
        "maxDBConnections": {
          "description": "MaxDBConnections is the maximum number of connections allowed per-database. Default: 0 (unlimited).",
          "type": "integer",
          "format": "int64"
        },
        "maxUserConnections": {
          "description": "MaxUserConnections is the maximum number of users allowed per-database. Default: 0 (unlimited).",
          "type": "integer",
          "format": "int64"
        },
        "minPoolSize": {
          "description": "MinPoolSize is used to add more server connections to pool if below this number. Default: 0 (disabled).",
          "type": "integer",
          "format": "int64"
        },
        "poolMode": {
          "description": "PoolMode is the pooling mechanism type. Default: session.",
          "type": "string"
        },
        "port": {
          "description": "Port is the port number on which PgBouncer listens to clients. Default: 5432.",
          "type": "integer",
          "format": "int32"
        },
        "reservePoolSize": {
          "description": "ReservePoolSize specifies how many additional connections to allow to a pool. 0 disables. Default: 0 (disabled).",
          "type": "integer",
          "format": "int64"
        },
        "reservePoolTimeoutSeconds": {
          "description": "ReservePoolTimeoutSeconds is the number of seconds in which if a client has not been serviced, pgbouncer enables use of additional connections from reserve pool. 0 disables. Default: 5.0.",
          "type": "integer",
          "format": "int64"
        },
        "statsPeriodSeconds": {
          "description": "StatsPeriodSeconds sets how often the averages shown in various SHOW commands are updated and how often aggregated statistics are written to the log. Default: 60",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ConsumerNamespaces": {
      "description": "ConsumerNamespaces indicate which namespaces Consumers should be selected from.",
      "type": "object",
      "properties": {
        "from": {
          "description": "From indicates where Consumers will be selected for the database instance. Possible values are: * All: Consumers in all namespaces. * Selector: Consumers in namespaces selected by the selector * Same: Only Consumers in the same namespace",
          "type": "string"
        },
        "selector": {
          "description": "Selector must be specified when From is set to \"Selector\". In that case, only Consumers in Namespaces matching this Selector will be selected by the database instance. This field is ignored for other values of \"From\".",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.CoordinatorSpec": {
      "description": "CoordinatorSpec defines attributes of the coordinator container",
      "type": "object",
      "properties": {
        "resources": {
          "description": "Compute Resources required by coordinator container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "securityContext": {
          "description": "Security options the coordinator container should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Databases": {
      "type": "object",
      "required": [
        "alias",
        "databaseRef",
        "databaseName"
      ],
      "properties": {
        "alias": {
          "description": "Alias to uniquely identify a target database running inside a specific Postgres instance.",
          "type": "string",
          "default": ""
        },
        "databaseName": {
          "description": "DatabaseName is the name of the target database inside a Postgres instance.",
          "type": "string",
          "default": ""
        },
        "databaseRef": {
          "description": "DatabaseRef specifies the database appbinding reference in any namespace.",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.AppReference"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Elasticsearch": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "Elasticsearch",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchClusterTopology": {
      "type": "object",
      "required": [
        "master",
        "ingest"
      ],
      "properties": {
        "coordinating": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchNode"
        },
        "data": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchNode"
        },
        "dataCold": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchNode"
        },
        "dataContent": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchNode"
        },
        "dataFrozen": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchNode"
        },
        "dataHot": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchNode"
        },
        "dataWarm": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchNode"
        },
        "ingest": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchNode"
        },
        "master": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchNode"
        },
        "ml": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchNode"
        },
        "transform": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchNode"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchList": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of Elasticsearch CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Elasticsearch"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "ElasticsearchList",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchNode": {
      "type": "object",
      "properties": {
        "heapSizePercentage": {
          "description": "HeapSizePercentage specifies both the initial heap allocation (-Xms) percentage and the maximum heap allocation (-Xmx) percentage. Node level values have higher precedence than global values.",
          "type": "integer",
          "format": "int32"
        },
        "maxUnavailable": {
          "description": "An eviction is allowed if at most \"maxUnavailable\" pods selected by \"selector\" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with \"minAvailable\".",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "replicas": {
          "description": "Replicas represents number of replica for this specific type of node",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Compute Resources required by the sidecar container.",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "storage": {
          "description": "Storage to specify how storage shall be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "suffix": {
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchRoleMapSpec": {
      "description": "Specifies the role mapping structure. Both 'json' and 'yaml' tags are used in structure metadata. The `json` tags (camel case) are used while taking input from users. The `yaml` tags (snake case) are used by the operator to generate roles_mapping.yml file.",
      "type": "object",
      "properties": {
        "andBackendRoles": {
          "description": "Specifies a list of backend roles (migrated from ES-version6) assigned to this role.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "backendRoles": {
          "description": "Specifies a list of backend roles assigned to this role. Backend roles can come from the internal user database, LDAP groups, JSON web token claims or SAML assertions.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "hidden": {
          "description": "Specifies the hidden status. Resources that have this set to true are not returned by the REST API and not visible in Kibana. Default to \"false\".",
          "type": "boolean"
        },
        "hosts": {
          "description": "Specifies a list of hosts assigned to this role.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "reserved": {
          "description": "Specifies the reserved status. Resources that have this set to true can’t be changed using the REST API or Kibana. Default to \"false\".",
          "type": "boolean"
        },
        "users": {
          "description": "Specifies a list of users assigned to this role.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchSpec": {
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "authSecret": {
          "description": "Database authentication secret",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SecretReference"
        },
        "autoOps": {
          "description": "AutoOps contains configuration of automatic ops-request-recommendation generation",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AutoOpsSpec"
        },
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for database. If specified, this file will be used as configuration file otherwise default configuration file will be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "disableSecurity": {
          "description": "disable security of authPlugin (ie, xpack or searchguard). It disables authentication security of user. If unset, default is false",
          "type": "boolean"
        },
        "enableSSL": {
          "description": "To enable ssl for http layer",
          "type": "boolean"
        },
        "halted": {
          "description": "Indicates that the database is halted and all offshoot Kubernetes resources except PVCs are deleted.",
          "type": "boolean"
        },
        "healthChecker": {
          "description": "HealthChecker defines attributes of the health checker",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.HealthCheckSpec"
        },
        "heapSizePercentage": {
          "description": "HeapSizePercentage specifies both the initial heap allocation (xms) percentage and the maximum heap allocation (xmx) percentage. Elasticsearch bootstrap fails, if -Xms and -Xmx are not equal. Error: initial heap size [X] not equal to maximum heap size [Y]; this can cause resize pauses. It will be applied to all nodes. If the node level `heapSizePercentage` is specified,  this global value will be overwritten. It defaults to 50% of memory limit.",
          "type": "integer",
          "format": "int32"
        },
        "init": {
          "description": "Init is used to initialize database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.InitSpec"
        },
        "internalUsers": {
          "description": "InternalUsers contains internal user configurations. Expected Input format: internalUsers:\n  \u003cusername1\u003e:\n\t\t...\n  \u003cusername2\u003e:\n\t\t...",
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchUserSpec"
          }
        },
        "kernelSettings": {
          "description": "KernelSettings contains the additional kernel settings.",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.KernelSettings"
        },
        "maxUnavailable": {
          "description": "An eviction is allowed if at most \"maxUnavailable\" pods selected by \"selector\" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with \"minAvailable\".",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "monitor": {
          "description": "Monitor is used monitor database instance",
          "$ref": "#/definitions/xyz.kmodules.monitoring-agent-api.api.v1.AgentSpec"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose database",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "replicas": {
          "description": "Number of instances to deploy for a Elasticsearch database.",
          "type": "integer",
          "format": "int32"
        },
        "rolesMapping": {
          "description": "RolesMapping contains roles mapping configurations. Expected Input format: rolesMapping:\n  \u003crole1\u003e:\n\t\t...\n  \u003crole2\u003e:\n\t\t...",
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchRoleMapSpec"
          }
        },
        "secureConfigSecret": {
          "description": "SecureConfigSecret is an optional field to provide secure settings for database.\n\t- Ref: https://www.elastic.co/guide/en/elasticsearch/reference/7.14/secure-settings.html\nSecure settings are store at \"ES_CONFIG_DIR/elasticsearch.keystore\" file (contents are encoded with password), once the keystore created. Expects a k8s secret name with data format:\n\tdata:\n\t\tkey: value\n\t\tpassword: KEYSTORE_PASSWORD\n\t\ts3.client.default.access_key: ACCESS_KEY\n\t\ts3.client.default.secret_key: SECRET_KEY",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "serviceTemplates": {
          "description": "ServiceTemplates is an optional configuration for services used to expose database",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.NamedServiceTemplateSpec"
          }
        },
        "storage": {
          "description": "Storage to specify how storage shall be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "storageType": {
          "description": "StorageType can be durable (default) or ephemeral",
          "type": "string"
        },
        "terminationPolicy": {
          "description": "TerminationPolicy controls the delete operation for database",
          "type": "string"
        },
        "tls": {
          "description": "TLS contains tls configurations",
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.TLSConfig"
        },
        "topology": {
          "description": "Elasticsearch topology for node specification",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchClusterTopology"
        },
        "version": {
          "description": "Version of Elasticsearch to be deployed.",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchStatus": {
      "type": "object",
      "properties": {
        "authSecret": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Age"
        },
        "conditions": {
          "description": "Conditions applied to the database, such as approval or denial.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.Condition"
          }
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this resource. It corresponds to the resource's generation, which is updated on mutation by the API Server.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "Specifies the current phase of the database",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ElasticsearchUserSpec": {
      "description": "ElasticsearchUserSpec specifies the security plugin internal user structure. Both 'json' and 'yaml' tags are used in structure metadata. The `json` tags (camel case) are used while taking input from users. The `yaml` tags (snake case) are used by the operator to generate internal_users.yml file. For Elastic-Stack built-in users, there is no yaml files, instead the operator is responsible for creating/syncing the users. For the fields that are only used by operator, the metadata yaml tag is kept empty (\"-\") so that they do not interrupt in other distributions YAML generation.",
      "type": "object",
      "properties": {
        "attributes": {
          "description": "Specifies one or more custom attributes, which can be used in index names and DLS queries.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "backendRoles": {
          "description": "Specifies a list of backend roles assigned to this user. Backend roles can come from the internal user database, LDAP groups, JSON web token claims or SAML assertions.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "description": {
          "description": "Specifies the description of the user",
          "type": "string"
        },
        "email": {
          "description": "Specifies the email of the user. Only applicable for xpack authplugin",
          "type": "string"
        },
        "full_name": {
          "description": "Specifies The full name of the user Only applicable for xpack authplugin",
          "type": "string"
        },
        "hidden": {
          "description": "Specifies the hidden status. Resources that have this set to true are not returned by the REST API and not visible in Kibana. Default to \"false\".",
          "type": "boolean"
        },
        "metadata": {
          "description": "Specifies Arbitrary metadata that you want to associate with the user Only applicable for xpack authplugin",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "opendistroSecurityRoles": {
          "description": "Specifies a list of opendistro security plugin roles assigned to this user.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "reserved": {
          "description": "Specifies the reserved status. Resources that have this set to true can’t be changed using the REST API or Kibana. Default to \"false\".",
          "type": "boolean"
        },
        "roles": {
          "description": "A set of roles the user has. The roles determine the user’s access permissions. To create a user without any roles, specify an empty list: [] Only applicable for xpack authplugin",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "searchGuardRoles": {
          "description": "Specifies a list of searchguard security plugin roles assigned to this user.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "secretName": {
          "description": "Specifies the k8s secret name that holds the user credentials. Default to \"\u003cresource-name\u003e-\u003cusername\u003e-cred\".",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Etcd": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.EtcdSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.EtcdStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "Etcd",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.EtcdList": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of Etcd TPR objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Etcd"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "EtcdList",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.EtcdSpec": {
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "authSecret": {
          "description": "Database authentication secret",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SecretReference"
        },
        "halted": {
          "description": "Indicates that the database is halted and all offshoot Kubernetes resources except PVCs are deleted.",
          "type": "boolean"
        },
        "init": {
          "description": "Init is used to initialize database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.InitSpec"
        },
        "monitor": {
          "description": "Monitor is used monitor database instance",
          "$ref": "#/definitions/xyz.kmodules.monitoring-agent-api.api.v1.AgentSpec"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose database",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "replicas": {
          "description": "Number of instances to deploy for a Etcd database.",
          "type": "integer",
          "format": "int32"
        },
        "serviceTemplates": {
          "description": "ServiceTemplates is an optional configuration for services used to expose database",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.NamedServiceTemplateSpec"
          }
        },
        "storage": {
          "description": "Storage spec to specify how storage shall be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "storageType": {
          "description": "StorageType can be durable (default) or ephemeral",
          "type": "string"
        },
        "terminationPolicy": {
          "description": "TerminationPolicy controls the delete operation for database",
          "type": "string"
        },
        "tls": {
          "description": "etcd cluster TLS configuration",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.TLSPolicy"
        },
        "version": {
          "description": "Version of Etcd to be deployed.",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.EtcdStatus": {
      "type": "object",
      "properties": {
        "authSecret": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Age"
        },
        "conditions": {
          "description": "Conditions applied to the database, such as approval or denial.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.Condition"
          }
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this resource. It corresponds to the resource's generation, which is updated on mutation by the API Server.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "Specifies the current phase of the database",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.GitRepo": {
      "type": "object",
      "required": [
        "args"
      ],
      "properties": {
        "args": {
          "description": "https://github.com/kubernetes/git-sync/tree/master",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "authSecret": {
          "description": "Authentication secret for git repository",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "env": {
          "description": "List of environment variables to set in the container. Cannot be updated.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "resources": {
          "description": "Compute Resources required by the sidecar container.",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "securityContext": {
          "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.InitSpec": {
      "type": "object",
      "properties": {
        "archiver": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ArchiverRecovery"
        },
        "initialized": {
          "description": "Initialized indicates that this database has been initialized. This will be set by the operator when status.conditions[\"Provisioned\"] is set to ensure that database is not mistakenly reset when recovered using disaster recovery tools.",
          "type": "boolean"
        },
        "script": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ScriptSourceSpec"
        },
        "waitForInitialRestore": {
          "description": "Wait for initial DataRestore condition",
          "type": "boolean"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.KernelSettings": {
      "type": "object",
      "properties": {
        "disableDefaults": {
          "description": "DisableDefaults can be set to false to avoid defaulting via mutator",
          "type": "boolean"
        },
        "privileged": {
          "description": "Privileged specifies the status whether the init container requires privileged access to perform the following commands.",
          "type": "boolean"
        },
        "sysctls": {
          "description": "Sysctls hold a list of sysctls commands needs to apply to kernel.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Sysctl"
          }
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDB": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDBSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDBStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "MariaDB",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDBList": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of MariaDB TPR objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDB"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "MariaDBList",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDBSpec": {
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "allowedSchemas": {
          "description": "AllowedSchemas defines the types of database schemas that MAY refer to a database instance and the trusted namespaces where those schema resources MAY be present.",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AllowedConsumers"
        },
        "authSecret": {
          "description": "Database authentication secret",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SecretReference"
        },
        "autoOps": {
          "description": "AutoOps contains configuration of automatic ops-request-recommendation generation",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AutoOpsSpec"
        },
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for database (i.e custom-mysql.cnf). If specified, this file will be used as configuration file otherwise default configuration file will be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "coordinator": {
          "description": "Coordinator defines attributes of the coordinator container",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.CoordinatorSpec"
        },
        "halted": {
          "description": "Indicates that the database is halted and all offshoot Kubernetes resources except PVCs are deleted.",
          "type": "boolean"
        },
        "healthChecker": {
          "description": "HealthChecker defines attributes of the health checker",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.HealthCheckSpec"
        },
        "init": {
          "description": "Init is used to initialize database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.InitSpec"
        },
        "monitor": {
          "description": "Monitor is used monitor database instance",
          "$ref": "#/definitions/xyz.kmodules.monitoring-agent-api.api.v1.AgentSpec"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose database",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "replicas": {
          "description": "Number of instances to deploy for a MariaDB database.",
          "type": "integer",
          "format": "int32"
        },
        "requireSSL": {
          "description": "Indicates that the database server need to be encrypted connections(ssl)",
          "type": "boolean"
        },
        "serviceTemplates": {
          "description": "ServiceTemplates is an optional configuration for services used to expose database",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.NamedServiceTemplateSpec"
          }
        },
        "storage": {
          "description": "Storage spec to specify how storage shall be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "storageType": {
          "description": "StorageType can be durable (default) or ephemeral",
          "type": "string"
        },
        "terminationPolicy": {
          "description": "TerminationPolicy controls the delete operation for database",
          "type": "string"
        },
        "tls": {
          "description": "TLS contains tls configurations",
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.TLSConfig"
        },
        "version": {
          "description": "Version of MariaDB to be deployed.",
          "type": "string",
          "default": ""
        },
        "wsrepSSTMethod": {
          "description": "WsrepSSTMethod is used to define the STATE-SNAPSHOT-TRANSFER method to be used in the Galera cluster default value : rsync",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MariaDBStatus": {
      "type": "object",
      "properties": {
        "authSecret": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Age"
        },
        "conditions": {
          "description": "Conditions applied to the database, such as approval or denial.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.Condition"
          }
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this resource. It corresponds to the resource's generation, which is updated on mutation by the API Server.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "Specifies the current phase of the database",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MemberSecret": {
      "type": "object",
      "properties": {
        "peerSecret": {
          "description": "PeerSecret is the secret containing TLS certs used by each etcd member pod for the communication between etcd peers.",
          "type": "string"
        },
        "serverSecret": {
          "description": "ServerSecret is the secret containing TLS certs used by each etcd member pod for the communication between etcd server and its clients.",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Memcached": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MemcachedSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MemcachedStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "Memcached",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MemcachedList": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of Memcached TPR objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Memcached"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "MemcachedList",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MemcachedSpec": {
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for database. If specified, this file will be used as configuration file otherwise default configuration file will be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "dataVolume": {
          "description": "DataVolume is an optional field to add one volume to each memcached pod.  The volume will be made available under /data and owned by the memcached user.\n\nWhile not mandated by the API and not configured automatically, the intended purpose is to use that volume for memcached's persistent memory support (https://memcached.org/blog/persistent-memory/) by adding the memory-file and memory-limit options to the config (https://github.com/memcached/memcached/wiki/WarmRestart).\n\nFor that purpose, a CSI inline volume provided by PMEM-CSI can be used, in which case each pod will get its own, empty volume. Warm restarts are not supported.\n\nFor testing, an empty dir can be used instead.",
          "$ref": "#/definitions/io.k8s.api.core.v1.VolumeSource"
        },
        "halted": {
          "description": "Indicates that the database is halted and all offshoot Kubernetes resources except PVCs are deleted.",
          "type": "boolean"
        },
        "monitor": {
          "description": "Monitor is used monitor database instance",
          "$ref": "#/definitions/xyz.kmodules.monitoring-agent-api.api.v1.AgentSpec"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose database",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "replicas": {
          "description": "Number of instances to deploy for a Memcached database.",
          "type": "integer",
          "format": "int32"
        },
        "serviceTemplates": {
          "description": "ServiceTemplates is an optional configuration for services used to expose database",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.NamedServiceTemplateSpec"
          }
        },
        "terminationPolicy": {
          "description": "TerminationPolicy controls the delete operation for database",
          "type": "string"
        },
        "tls": {
          "description": "TLS contains tls configurations",
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.TLSConfig"
        },
        "version": {
          "description": "Version of Memcached to be deployed.",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MemcachedStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions applied to the database, such as approval or denial.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.Condition"
          }
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this resource. It corresponds to the resource's generation, which is updated on mutation by the API Server.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "Specifies the current phase of the database",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoArbiterNode": {
      "type": "object",
      "properties": {
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for database (i.e mongod.cnf). If specified, this file will be used as configuration file otherwise default configuration file will be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose database",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDB": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "MongoDB",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBConfigNode": {
      "type": "object",
      "required": [
        "replicas"
      ],
      "properties": {
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for database (i.e mongod.cnf). If specified, this file will be used as configuration file otherwise default configuration file will be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "ephemeralStorage": {
          "description": "EphemeralStorage spec to specify the configuration of ephemeral storage type.",
          "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose database",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "prefix": {
          "description": "Prefix is the name prefix of this node.",
          "type": "string"
        },
        "replicas": {
          "description": "Replicas represents number of replicas of this specific node. If current node has replicaset enabled, then replicas is the amount of replicaset nodes.",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "storage": {
          "description": "Storage to specify how storage shall be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBList": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of MongoDB TPR objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDB"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "MongoDBList",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBMongosNode": {
      "type": "object",
      "required": [
        "replicas"
      ],
      "properties": {
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for database (i.e mongod.cnf). If specified, this file will be used as configuration file otherwise default configuration file will be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose database",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "prefix": {
          "description": "Prefix is the name prefix of this node.",
          "type": "string"
        },
        "replicas": {
          "description": "Replicas represents number of replicas of this specific node. If current node has replicaset enabled, then replicas is the amount of replicaset nodes.",
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBReplicaSet": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Name of replicaset",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBShardNode": {
      "type": "object",
      "required": [
        "shards",
        "replicas"
      ],
      "properties": {
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for database (i.e mongod.cnf). If specified, this file will be used as configuration file otherwise default configuration file will be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "ephemeralStorage": {
          "description": "EphemeralStorage spec to specify the configuration of ephemeral storage type.",
          "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose database",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "prefix": {
          "description": "Prefix is the name prefix of this node.",
          "type": "string"
        },
        "replicas": {
          "description": "Replicas represents number of replicas of this specific node. If current node has replicaset enabled, then replicas is the amount of replicaset nodes.",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "shards": {
          "description": "Shards represents number of shards for shard type of node More info: https://docs.mongodb.com/manual/core/sharded-cluster-shards/",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "storage": {
          "description": "Storage to specify how storage shall be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBShardingTopology": {
      "type": "object",
      "required": [
        "shard",
        "configServer",
        "mongos"
      ],
      "properties": {
        "configServer": {
          "description": "Config Server (metadata) component of mongodb. More info: https://docs.mongodb.com/manual/core/sharded-cluster-config-servers/",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBConfigNode"
        },
        "mongos": {
          "description": "Mongos (router) component of mongodb. More info: https://docs.mongodb.com/manual/core/sharded-cluster-query-router/",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBMongosNode"
        },
        "shard": {
          "description": "Shard component of mongodb. More info: https://docs.mongodb.com/manual/core/sharded-cluster-shards/",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBShardNode"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBSpec": {
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "allowedSchemas": {
          "description": "AllowedSchemas defines the types of database schemas that MAY refer to a database instance and the trusted namespaces where those schema resources MAY be present.",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AllowedConsumers"
        },
        "arbiter": {
          "description": "Mongo Arbiter component of mongodb. More info: https://docs.mongodb.com/manual/core/replica-set-arbiter/",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoArbiterNode"
        },
        "archiver": {
          "description": "Archiver controls database backup using Archiver CR",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Archiver"
        },
        "authSecret": {
          "description": "Database authentication secret",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SecretReference"
        },
        "autoOps": {
          "description": "AutoOps contains configuration of automatic ops-request-recommendation generation",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AutoOpsSpec"
        },
        "clusterAuthMode": {
          "description": "ClusterAuthMode for replicaset or sharding. (default will be x509 if sslmode is not `disabled`.) See available ClusterAuthMode: https://docs.mongodb.com/manual/reference/program/mongod/#cmdoption-mongod-clusterauthmode",
          "type": "string"
        },
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for database (i.e mongod.cnf). If specified, this file will be used as configuration file otherwise default configuration file will be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "coordinator": {
          "description": "Coordinator defines attributes of the coordinator container",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.CoordinatorSpec"
        },
        "ephemeralStorage": {
          "description": "EphemeralStorage spec to specify the configuration of ephemeral storage type.",
          "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"
        },
        "halted": {
          "description": "Indicates that the database is halted and all offshoot Kubernetes resources except PVCs are deleted.",
          "type": "boolean"
        },
        "healthChecker": {
          "description": "HealthChecker defines attributes of the health checker",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.HealthCheckSpec"
        },
        "hidden": {
          "description": "Hidden component of mongodb which is invisible to client applications More info: https://www.mongodb.com/docs/manual/core/replica-set-hidden-member/",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoHiddenNode"
        },
        "init": {
          "description": "Init is used to initialize database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.InitSpec"
        },
        "keyFileSecret": {
          "description": "Secret for KeyFileSecret. Contains keyfile `key.txt` if spec.clusterAuthMode == keyFile || sendKeyFile",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "monitor": {
          "description": "Monitor is used monitor database instance",
          "$ref": "#/definitions/xyz.kmodules.monitoring-agent-api.api.v1.AgentSpec"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose database",
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "replicaSet": {
          "description": "MongoDB replica set",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBReplicaSet"
        },
        "replicas": {
          "description": "Number of instances to deploy for a MongoDB database.",
          "type": "integer",
          "format": "int32"
        },
        "serviceTemplates": {
          "description": "ServiceTemplates is an optional configuration for services used to expose database",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.NamedServiceTemplateSpec"
          }
        },
        "shardTopology": {
          "description": "MongoDB sharding topology.",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBShardingTopology"
        },
        "sslMode": {
          "description": "SSLMode for both standalone and clusters. (default, disabled.) See more options: https://docs.mongodb.com/manual/reference/program/mongod/#cmdoption-mongod-sslmode",
          "type": "string"
        },
        "storage": {
          "description": "Storage spec to specify how storage shall be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "storageEngine": {
          "description": "StorageEngine can be wiredTiger (default) or inMemory See available StorageEngine: https://docs.mongodb.com/manual/core/storage-engines/",
          "type": "string"
        },
        "storageType": {
          "description": "StorageType can be durable (default) or ephemeral",
          "type": "string"
        },
        "terminationPolicy": {
          "description": "TerminationPolicy controls the delete operation for database",
          "type": "string"
        },
        "tls": {
          "description": "TLS contains tls configurations for client and server.",
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.TLSConfig"
        },
        "version": {
          "description": "Version of MongoDB to be deployed.",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoDBStatus": {
      "type": "object",
      "properties": {
        "authSecret": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Age"
        },
        "conditions": {
          "description": "Conditions applied to the database, such as approval or denial.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.Condition"
          }
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this resource. It corresponds to the resource's generation, which is updated on mutation by the API Server.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "Specifies the current phase of the database",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MongoHiddenNode": {
      "type": "object",
      "required": [
        "replicas",
        "storage"
      ],
      "properties": {
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for database (i.e mongod.cnf). If specified, this file will be used as configuration file otherwise default configuration file will be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose database",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "replicas": {
          "description": "Replicas represents number of replicas of this specific node. If current node has replicaset enabled, then replicas is the amount of replicaset nodes.",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "storage": {
          "description": "Storage to specify how storage shall be used.",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQL": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "MySQL",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLGroupSpec": {
      "type": "object",
      "properties": {
        "mode": {
          "description": "Group Replication can be deployed in either \"Single-Primary\" or \"Multi-Primary\" mode",
          "type": "string"
        },
        "name": {
          "description": "Group name is a version 4 UUID ref: https://dev.mysql.com/doc/refman/5.7/en/group-replication-options.html#sysvar_group_replication_group_name",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLInnoDBClusterSpec": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        },
        "router": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLRouterSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLList": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of MySQL TPR objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQL"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "MySQLList",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLRouterSpec": {
      "type": "object",
      "properties": {
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose MySQL router",
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLSpec": {
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "allowedReadReplicas": {
          "description": "AllowedReadReplicas defines the types of read replicas that MAY be attached to a MySQL instance and the trusted namespaces where those Read Replica resources MAY be present.\n\nSupport: Core",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AllowedConsumers"
        },
        "allowedSchemas": {
          "description": "AllowedSchemas defines the types of database schemas that may refer to a database instance and the trusted namespaces where those schema resources may be present.",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AllowedConsumers"
        },
        "authSecret": {
          "description": "Database authentication secret",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SecretReference"
        },
        "autoOps": {
          "description": "AutoOps contains configuration of automatic ops-request-recommendation generation",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AutoOpsSpec"
        },
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for database (i.e custom-mysql.cnf). If specified, this file will be used as configuration file otherwise default configuration file will be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "coordinator": {
          "description": "Coordinator defines attributes of the coordinator container",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.CoordinatorSpec"
        },
        "halted": {
          "description": "Indicates that the database is halted and all offshoot Kubernetes resources except PVCs are deleted.",
          "type": "boolean"
        },
        "healthChecker": {
          "description": "HealthChecker defines attributes of the health checker",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.HealthCheckSpec"
        },
        "init": {
          "description": "Init is used to initialize database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.InitSpec"
        },
        "monitor": {
          "description": "Monitor is used monitor database instance",
          "$ref": "#/definitions/xyz.kmodules.monitoring-agent-api.api.v1.AgentSpec"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose database",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "replicas": {
          "description": "Number of instances to deploy for a MySQL database. In case of MySQL group replication, max allowed value is 9 (default 3). (see ref: https://dev.mysql.com/doc/refman/5.7/en/group-replication-frequently-asked-questions.html)",
          "type": "integer",
          "format": "int32"
        },
        "requireSSL": {
          "description": "Indicates that the database server need to be encrypted connections(ssl)",
          "type": "boolean"
        },
        "serviceTemplates": {
          "description": "ServiceTemplates is an optional configuration for services used to expose database",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.NamedServiceTemplateSpec"
          }
        },
        "storage": {
          "description": "Storage spec to specify how storage shall be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "storageType": {
          "description": "StorageType can be durable (default) or ephemeral",
          "type": "string"
        },
        "terminationPolicy": {
          "description": "TerminationPolicy controls the delete operation for database",
          "type": "string"
        },
        "tls": {
          "description": "TLS contains tls configurations for client and server.",
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.TLSConfig"
        },
        "topology": {
          "description": "MySQL cluster topology",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLTopology"
        },
        "useAddressType": {
          "description": "Indicated whether to use DNS or IP address to address pods in a db cluster. If IP address is used, HostNetwork will be used. Defaults to DNS.",
          "type": "string",
          "default": "DNS"
        },
        "version": {
          "description": "Version of MySQL to be deployed.",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLStatus": {
      "type": "object",
      "properties": {
        "authSecret": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Age"
        },
        "conditions": {
          "description": "Conditions applied to the database, such as approval or denial.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.Condition"
          }
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this resource. It corresponds to the resource's generation, which is updated on mutation by the API Server.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "Specifies the current phase of the database",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLTopology": {
      "type": "object",
      "properties": {
        "group": {
          "description": "Group replication info for MySQL",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLGroupSpec"
        },
        "innoDBCluster": {
          "description": "InnoDBCluster replication info for MySQL InnodbCluster",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLInnoDBClusterSpec"
        },
        "mode": {
          "description": "If set to - \"GroupReplication\", GroupSpec is required and MySQL servers will start  a replication group",
          "type": "string"
        },
        "remoteReplica": {
          "description": "RemoteReplica implies that the instance will be a MySQL Read Only Replica and it will take reference of  appbinding of the source",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.RemoteReplicaSpec"
        },
        "semiSync": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SemiSyncSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLUser": {
      "type": "object",
      "required": [
        "username"
      ],
      "properties": {
        "active": {
          "type": "integer",
          "format": "int32"
        },
        "attributes": {
          "type": "string"
        },
        "backend": {
          "type": "integer",
          "format": "int32"
        },
        "comment": {
          "type": "string"
        },
        "default_hostgroup": {
          "type": "integer",
          "format": "int32"
        },
        "default_schema": {
          "type": "string"
        },
        "fast_forward": {
          "type": "integer",
          "format": "int32"
        },
        "frontend": {
          "type": "integer",
          "format": "int32"
        },
        "max_connections": {
          "type": "integer",
          "format": "int32"
        },
        "schema_locked": {
          "type": "integer",
          "format": "int32"
        },
        "transaction_persistent": {
          "type": "integer",
          "format": "int32"
        },
        "use_ssl": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.NamedServiceTemplateSpec": {
      "type": "object",
      "required": [
        "alias"
      ],
      "properties": {
        "alias": {
          "description": "Alias represents the identifier of the service.",
          "type": "string",
          "default": ""
        },
        "metadata": {
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.ObjectMeta"
        },
        "spec": {
          "description": "Specification of the desired behavior of the service. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.ServiceSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDB": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDBSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDBStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "PerconaXtraDB",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDBList": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of PerconaXtraDB TPR objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDB"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "PerconaXtraDBList",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDBSpec": {
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "allowedSchemas": {
          "description": "AllowedSchemas defines the types of database schemas that MAY refer to a database instance and the trusted namespaces where those schema resources MAY be present.",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AllowedConsumers"
        },
        "authSecret": {
          "description": "Database authentication secret",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SecretReference"
        },
        "autoOps": {
          "description": "AutoOps contains configuration of automatic ops-request-recommendation generation",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AutoOpsSpec"
        },
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for database (i.e custom-mysql.cnf). If specified, this file will be used as configuration file otherwise default configuration file will be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "coordinator": {
          "description": "Coordinator defines attributes of the coordinator container",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.CoordinatorSpec"
        },
        "halted": {
          "description": "Indicates that the database is halted and all offshoot Kubernetes resources except PVCs are deleted.",
          "type": "boolean"
        },
        "healthChecker": {
          "description": "HealthChecker defines attributes of the health checker",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.HealthCheckSpec"
        },
        "init": {
          "description": "Init is used to initialize database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.InitSpec"
        },
        "monitor": {
          "description": "Monitor is used monitor database instance",
          "$ref": "#/definitions/xyz.kmodules.monitoring-agent-api.api.v1.AgentSpec"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose database",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "replicas": {
          "description": "Replicas defines the number of instances to deploy for PerconaXtraDB.",
          "type": "integer",
          "format": "int32"
        },
        "requireSSL": {
          "description": "Indicates that the database server need to be encrypted connections(ssl)",
          "type": "boolean"
        },
        "serviceTemplates": {
          "description": "ServiceTemplates is an optional configuration for services used to expose database",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.NamedServiceTemplateSpec"
          }
        },
        "storage": {
          "description": "Storage spec to specify how storage shall be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "storageType": {
          "description": "StorageType can be durable (default) or ephemeral",
          "type": "string"
        },
        "systemUserSecrets": {
          "description": "SystemUserSecrets contains the system user credentials",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SystemUserSecretsSpec"
        },
        "terminationPolicy": {
          "description": "TerminationPolicy controls the delete operation for database",
          "type": "string"
        },
        "tls": {
          "description": "TLS contains tls configurations",
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.TLSConfig"
        },
        "version": {
          "description": "Version of PerconaXtraDB to be deployed.",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PerconaXtraDBStatus": {
      "type": "object",
      "properties": {
        "authSecret": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Age"
        },
        "conditions": {
          "description": "Conditions applied to the database, such as approval or denial.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.Condition"
          }
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this resource. It corresponds to the resource's generation, which is updated on mutation by the API Server.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "Specifies the current phase of the database",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncer": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncerSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncerStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "PgBouncer",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncerList": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of PgBouncer CRD objects.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncer"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "PgBouncerList",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncerSpec": {
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "authSecret": {
          "description": "Database authentication secret",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SecretReference"
        },
        "autoOps": {
          "description": "AutoOps contains configuration of automatic ops-request-recommendation generation",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AutoOpsSpec"
        },
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for database (i.e mongod.cnf). If specified, this file will be used as configuration file otherwise default configuration file will be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "connectionPool": {
          "description": "ConnectionPoolConfig defines Connection pool configuration.",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ConnectionPoolConfig"
        },
        "databases": {
          "description": "Databases to proxy by connection pooling.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Databases"
          }
        },
        "healthChecker": {
          "description": "HealthChecker defines attributes of the health checker",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.HealthCheckSpec"
        },
        "monitor": {
          "description": "Monitor is used monitor database instance.",
          "$ref": "#/definitions/xyz.kmodules.monitoring-agent-api.api.v1.AgentSpec"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods.",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "replicas": {
          "description": "Number of instances to deploy for a PgBouncer instance.",
          "type": "integer",
          "format": "int32"
        },
        "serviceTemplates": {
          "description": "ServiceTemplates is an optional configuration for services used to expose database",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.NamedServiceTemplateSpec"
          }
        },
        "sslMode": {
          "description": "SSLMode for both standalone and clusters. [disable;allow;prefer;require;verify-ca;verify-full]",
          "type": "string"
        },
        "terminationPolicy": {
          "description": "TerminationPolicy controls the delete operation for database",
          "type": "string"
        },
        "tls": {
          "description": "TLS contains tls configurations for client and server.",
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.TLSConfig"
        },
        "version": {
          "description": "Version of PgBouncer to be deployed.",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PgBouncerStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions applied to the database, such as approval or denial.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.Condition"
          }
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this resource. It corresponds to the resource's generation, which is updated on mutation by the API Server.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "Specifies the current phase of the database",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PostgreLeaderElectionConfig": {
      "description": "PostgreLeaderElectionConfig contains essential attributes of leader election.",
      "type": "object",
      "properties": {
        "electionTick": {
          "description": "ElectionTick is the number of Node.Tick invocations that must pass between\n\telections. That is, if a follower does not receive any message from the\n leader of current term before ElectionTick has elapsed, it will become\n\tcandidate and start an election. ElectionTick must be greater than\n HeartbeatTick. We suggest ElectionTick = 10 * HeartbeatTick to avoid\n unnecessary leader switching. default value is 10.",
          "type": "integer",
          "format": "int32",
          "default": 10
        },
        "heartbeatTick": {
          "description": "HeartbeatTick is the number of Node.Tick invocations that must pass between heartbeats. That is, a leader sends heartbeat messages to maintain its leadership every HeartbeatTick ticks. default value is 1.",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "leaseDurationSeconds": {
          "description": "LeaseDuration is the duration in second that non-leader candidates will wait to force acquire leadership. This is measured against time of last observed ack. Default 15 Deprecated",
          "type": "integer",
          "format": "int32"
        },
        "maximumLagBeforeFailover": {
          "description": "MaximumLagBeforeFailover is used as maximum lag tolerance for the cluster. when ever a replica is lagging more than MaximumLagBeforeFailover this node need to sync manually with the primary node. default value is 32MB",
          "type": "integer",
          "format": "int64",
          "default": 33554432
        },
        "period": {
          "description": "Period between Node.Tick invocations",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "renewDeadlineSeconds": {
          "description": "RenewDeadline is the duration in second that the acting master will retry refreshing leadership before giving up. Normally, LeaseDuration * 2 / 3. Default 10 Deprecated",
          "type": "integer",
          "format": "int32"
        },
        "retryPeriodSeconds": {
          "description": "RetryPeriod is the duration in second the LeaderElector clients should wait between tries of actions. Normally, LeaseDuration / 3. Default 2 Deprecated",
          "type": "integer",
          "format": "int32"
        },
        "transferLeadershipInterval": {
          "description": "TransferLeadershipInterval retry interval for transfer leadership to the healthiest node",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "transferLeadershipTimeout": {
          "description": "TransferLeadershipTimeout retry timeout for transfer leadership to the healthiest node",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Postgres": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PostgresSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PostgresStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "Postgres",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PostgresList": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of Postgres CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Postgres"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "PostgresList",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PostgresSpec": {
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "allowedSchemas": {
          "description": "AllowedSchemas defines the types of database schemas that MAY refer to a database instance and the trusted namespaces where those schema resources MAY be present.",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AllowedConsumers"
        },
        "archiver": {
          "description": "Archiver controls database backup using Archiver CR",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Archiver"
        },
        "authSecret": {
          "description": "Database authentication secret",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SecretReference"
        },
        "autoOps": {
          "description": "AutoOps contains configuration of automatic ops-request-recommendation generation",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AutoOpsSpec"
        },
        "clientAuthMode": {
          "description": "ClientAuthMode for sidecar or sharding. (default will be md5. [md5;scram;cert])",
          "type": "string"
        },
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for database (i.e postgresql.conf). If specified, this file will be used as configuration file otherwise default configuration file will be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "coordinator": {
          "description": "Coordinator defines attributes of the coordinator container",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.CoordinatorSpec"
        },
        "enforceFsGroup": {
          "description": "EnforceFsGroup Is Used when the storageClass's CSI Driver doesn't support FsGroup properties properly. If It's true then The Init Container will run as RootUser and the init-container will set user's permission for the mounted pvc volume with which coordinator and postgres containers are going to run. In postgres it is /var/pv",
          "type": "boolean"
        },
        "halted": {
          "description": "Indicates that the database is halted and all offshoot Kubernetes resources except PVCs are deleted.",
          "type": "boolean"
        },
        "healthChecker": {
          "description": "HealthChecker defines attributes of the health checker",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.HealthCheckSpec"
        },
        "init": {
          "description": "Init is used to initialize database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.InitSpec"
        },
        "leaderElection": {
          "description": "Leader election configuration",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PostgreLeaderElectionConfig"
        },
        "mode": {
          "type": "string"
        },
        "monitor": {
          "description": "Monitor is used monitor database instance",
          "$ref": "#/definitions/xyz.kmodules.monitoring-agent-api.api.v1.AgentSpec"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose database",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "remoteReplica": {
          "description": "RemoteReplica implies that the instance will be a MySQL Read Only Replica, and it will take reference of  appbinding of the source",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.RemoteReplicaSpec"
        },
        "replicas": {
          "description": "Number of instances to deploy for a Postgres database.",
          "type": "integer",
          "format": "int32"
        },
        "serviceTemplates": {
          "description": "ServiceTemplates is an optional configuration for services used to expose database",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.NamedServiceTemplateSpec"
          }
        },
        "sslMode": {
          "description": "SSLMode for both standalone and clusters. [disable;allow;prefer;require;verify-ca;verify-full]",
          "type": "string"
        },
        "standbyMode": {
          "description": "Standby mode",
          "type": "string"
        },
        "storage": {
          "description": "Storage to specify how storage shall be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "storageType": {
          "description": "StorageType can be durable (default) or ephemeral",
          "type": "string"
        },
        "streamingMode": {
          "description": "Streaming mode",
          "type": "string"
        },
        "terminationPolicy": {
          "description": "TerminationPolicy controls the delete operation for database",
          "type": "string"
        },
        "tls": {
          "description": "TLS contains tls configurations for client and server.",
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.TLSConfig"
        },
        "version": {
          "description": "Version of Postgres to be deployed.",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.PostgresStatus": {
      "type": "object",
      "properties": {
        "authSecret": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Age"
        },
        "conditions": {
          "description": "Conditions applied to the database, such as approval or denial.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.Condition"
          }
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this resource. It corresponds to the resource's generation, which is updated on mutation by the API Server.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "Specifies the current phase of the database",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQL": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQLSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQLStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "ProxySQL",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQLConfiguration": {
      "type": "object",
      "properties": {
        "adminVariables": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "mysqlQueryRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
          }
        },
        "mysqlUsers": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLUser"
          }
        },
        "mysqlVariables": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQLList": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of ProxySQL TPR objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQL"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "ProxySQLList",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQLSpec": {
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "authSecret": {
          "description": "ProxySQL secret containing username and password for root user and proxysql user",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SecretReference"
        },
        "autoOps": {
          "description": "AutoOps contains configuration of automatic ops-request-recommendation generation",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AutoOpsSpec"
        },
        "backend": {
          "description": "Backend refers to the AppBinding of the backend MySQL/MariaDB/Percona-XtraDB server",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for proxysql (i.e custom-proxysql.cnf). If specified, this file will be used as configuration file otherwise default configuration file will be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "healthChecker": {
          "description": "HealthChecker defines attributes of the health checker",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.HealthCheckSpec"
        },
        "initConfig": {
          "description": "InitConfiguration contains information with which the proxysql will bootstrap (only 4 tables are configurable)",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQLConfiguration"
        },
        "monitor": {
          "description": "Monitor is used monitor proxysql instance",
          "$ref": "#/definitions/xyz.kmodules.monitoring-agent-api.api.v1.AgentSpec"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose proxysql",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "replicas": {
          "description": "Number of instances to deploy for ProxySQL. Currently we support only replicas = 1.",
          "type": "integer",
          "format": "int32"
        },
        "serviceTemplates": {
          "description": "ServiceTemplates is an optional configuration for services used to expose database",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.NamedServiceTemplateSpec"
          }
        },
        "syncUsers": {
          "description": "SyncUsers is a boolean type and when enabled, operator fetches all users created in the backend server to the ProxySQL server . Password changes are also synced in proxysql when it is enabled.",
          "type": "boolean"
        },
        "terminationPolicy": {
          "description": "TerminationPolicy controls the delete operation for database",
          "type": "string"
        },
        "tls": {
          "description": "TLS contains tls configurations for client and server.",
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.TLSConfig"
        },
        "version": {
          "description": "Version of ProxySQL to be deployed.",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ProxySQLStatus": {
      "type": "object",
      "properties": {
        "authSecret": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Age"
        },
        "conditions": {
          "description": "Conditions applied to the database, such as approval or denial.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.Condition"
          }
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this resource. It corresponds to the resource's generation, which is updated on mutation by the API Server.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "Specifies the current phase of the database",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Redis": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.RedisSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.RedisStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "Redis",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.RedisClusterSpec": {
      "type": "object",
      "properties": {
        "master": {
          "description": "Number of master nodes. It must be \u003e= 3. If not specified, defaults to 3.",
          "type": "integer",
          "format": "int32"
        },
        "replicas": {
          "description": "Number of replica(s) per master node. If not specified, defaults to 1.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.RedisList": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of Redis TPR objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Redis"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "kubedb.com",
          "kind": "RedisList",
          "version": "v1alpha2"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.RedisSentinelRef": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the refereed sentinel",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace where refereed sentinel has been deployed",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.RedisSpec": {
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "allowedSchemas": {
          "description": "AllowedSchemas defines the types of database schemas that MAY refer to a database instance and the trusted namespaces where those schema resources MAY be present.",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AllowedConsumers"
        },
        "authSecret": {
          "description": "Database authentication secret",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SecretReference"
        },
        "autoOps": {
          "description": "AutoOps contains configuration of automatic ops-request-recommendation generation",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.AutoOpsSpec"
        },
        "cluster": {
          "description": "Redis cluster configuration for running redis servers in cluster mode. Required if Mode is set to \"Cluster\"",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.RedisClusterSpec"
        },
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for database (i.e redis.conf). If specified, this file will be used as configuration file otherwise default configuration file will be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "coordinator": {
          "description": "Coordinator defines attributes of the coordinator container",
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.CoordinatorSpec"
        },
        "disableAuth": {
          "description": "If disable Auth true then don't create any auth secret",
          "type": "boolean"
        },
        "halted": {
          "description": "Indicates that the database is halted and all offshoot Kubernetes resources except PVCs are deleted.",
          "type": "boolean"
        },
        "healthChecker": {
          "description": "HealthChecker defines attributes of the health checker",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.HealthCheckSpec"
        },
        "init": {
          "description": "Init is used to initialize database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.InitSpec"
        },
        "mode": {
          "description": "Default is \"Standalone\". If set to \"Cluster\", ClusterSpec is required and redis servers will start in cluster mode",
          "type": "string"
        },
        "monitor": {
          "description": "Monitor is used monitor database instance",
          "$ref": "#/definitions/xyz.kmodules.monitoring-agent-api.api.v1.AgentSpec"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose database",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "replicas": {
          "description": "Number of instances to deploy for a Redis database.",
          "type": "integer",
          "format": "int32"
        },
        "sentinelRef": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.RedisSentinelRef"
        },
        "serviceTemplates": {
          "description": "ServiceTemplates is an optional configuration for services used to expose database",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.NamedServiceTemplateSpec"
          }
        },
        "storage": {
          "description": "Storage spec to specify how storage shall be used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "storageType": {
          "description": "StorageType can be durable (default) or ephemeral",
          "type": "string"
        },
        "terminationPolicy": {
          "description": "TerminationPolicy controls the delete operation for database",
          "type": "string"
        },
        "tls": {
          "description": "TLS contains tls configurations for client and server.",
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.TLSConfig"
        },
        "version": {
          "description": "Version of Redis to be deployed.",
          "type": "string",
          "default": ""
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.RedisStatus": {
      "type": "object",
      "properties": {
        "authSecret": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.Age"
        },
        "conditions": {
          "description": "Conditions applied to the database, such as approval or denial.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.Condition"
          }
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this resource. It corresponds to the resource's generation, which is updated on mutation by the API Server.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "Specifies the current phase of the database",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.RemoteReplicaSpec": {
      "type": "object",
      "required": [
        "sourceRef"
      ],
      "properties": {
        "sourceRef": {
          "description": "SourceRef specifies the  source object",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.ScriptSourceSpec": {
      "type": "object",
      "properties": {
        "awsElasticBlockStore": {
          "description": "awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "$ref": "#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"
        },
        "azureDisk": {
          "description": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource"
        },
        "azureFile": {
          "description": "azureFile represents an Azure File Service mount on the host and bind mount to the pod.",
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureFileVolumeSource"
        },
        "cephfs": {
          "description": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
          "$ref": "#/definitions/io.k8s.api.core.v1.CephFSVolumeSource"
        },
        "cinder": {
          "description": "cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.CinderVolumeSource"
        },
        "configMap": {
          "description": "configMap represents a configMap that should populate this volume",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapVolumeSource"
        },
        "csi": {
          "description": "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).",
          "$ref": "#/definitions/io.k8s.api.core.v1.CSIVolumeSource"
        },
        "downwardAPI": {
          "description": "downwardAPI represents downward API about the pod that should populate this volume",
          "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeSource"
        },
        "emptyDir": {
          "description": "emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
          "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"
        },
        "ephemeral": {
          "description": "ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.\n\nUse this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.\n\nA pod can use both types of ephemeral volumes and persistent volumes at the same time.",
          "$ref": "#/definitions/io.k8s.api.core.v1.EphemeralVolumeSource"
        },
        "fc": {
          "description": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
          "$ref": "#/definitions/io.k8s.api.core.v1.FCVolumeSource"
        },
        "flexVolume": {
          "description": "flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
          "$ref": "#/definitions/io.k8s.api.core.v1.FlexVolumeSource"
        },
        "flocker": {
          "description": "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running",
          "$ref": "#/definitions/io.k8s.api.core.v1.FlockerVolumeSource"
        },
        "gcePersistentDisk": {
          "description": "gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "$ref": "#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"
        },
        "git": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.GitRepo"
        },
        "gitRepo": {
          "description": "gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
          "$ref": "#/definitions/io.k8s.api.core.v1.GitRepoVolumeSource"
        },
        "glusterfs": {
          "description": "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.GlusterfsVolumeSource"
        },
        "hostPath": {
          "description": "hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
          "$ref": "#/definitions/io.k8s.api.core.v1.HostPathVolumeSource"
        },
        "iscsi": {
          "description": "iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.ISCSIVolumeSource"
        },
        "nfs": {
          "description": "nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "$ref": "#/definitions/io.k8s.api.core.v1.NFSVolumeSource"
        },
        "persistentVolumeClaim": {
          "description": "persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource"
        },
        "photonPersistentDisk": {
          "description": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"
        },
        "portworxVolume": {
          "description": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.api.core.v1.PortworxVolumeSource"
        },
        "projected": {
          "description": "projected items for all in one resources secrets, configmaps, and downward API",
          "$ref": "#/definitions/io.k8s.api.core.v1.ProjectedVolumeSource"
        },
        "quobyte": {
          "description": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
          "$ref": "#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource"
        },
        "rbd": {
          "description": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.RBDVolumeSource"
        },
        "scaleIO": {
          "description": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ScaleIOVolumeSource"
        },
        "scriptPath": {
          "type": "string"
        },
        "secret": {
          "description": "secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretVolumeSource"
        },
        "storageos": {
          "description": "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
          "$ref": "#/definitions/io.k8s.api.core.v1.StorageOSVolumeSource"
        },
        "vsphereVolume": {
          "description": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SecretReference": {
      "type": "object",
      "properties": {
        "externallyManaged": {
          "type": "boolean"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SemiSyncSpec": {
      "type": "object",
      "required": [
        "errantTransactionRecoveryPolicy"
      ],
      "properties": {
        "errantTransactionRecoveryPolicy": {
          "description": "recovery method if the slave has any errant transaction",
          "type": "string"
        },
        "sourceTimeout": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "sourceWaitForReplicaCount": {
          "description": "count of slave to wait for before commit",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SystemUserSecretsSpec": {
      "type": "object",
      "properties": {
        "monitorUserSecret": {
          "description": "MonitorUserSecret contains monitor system user credentials",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SecretReference"
        },
        "replicationUserSecret": {
          "description": "ReplicationUserSecret contains replication system user credentials",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.SecretReference"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.kubedb.v1alpha2.TLSPolicy": {
      "type": "object",
      "properties": {
        "member": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MemberSecret"
        },
        "operatorSecret": {
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ArchiverOptions": {
      "type": "object",
      "required": [
        "operation",
        "ref"
      ],
      "properties": {
        "operation": {
          "type": "string",
          "default": ""
        },
        "ref": {
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.ObjectReference"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ConfigNode": {
      "description": "ConfigNode is the spec for mongodb ConfigServer",
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchCustomConfigurationSpec": {
      "description": "ElasticsearchCustomConfigurationSpec is the spec for Reconfiguring the Elasticsearch Settings",
      "type": "object",
      "properties": {
        "applyConfig": {
          "description": "ApplyConfig is an optional field to provide Elasticsearch configuration. Provided configuration will be applied to config files stored in ConfigSecret. If the ConfigSecret is missing, the operator will create a new k8s secret by the following naming convention: {db-name}-user-config . Expected input format:\n\tapplyConfig:\n\t\tfile-name.yml: |\n\t\t\tkey: value\n\t\telasticsearch.yml: |\n\t\t\tthread_pool:\n\t\t\t\twrite:\n\t\t\t\t\tsize: 30",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for database.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "removeCustomConfig": {
          "description": "If set to \"true\", the user provided configuration will be removed. The Elasticsearch cluster will start will default configuration that is generated by the operator.",
          "type": "boolean"
        },
        "removeSecureCustomConfig": {
          "description": "If set to \"true\", the user provided secure settings will be removed. The elasticsearch.keystore will start will default password (i.e. \"\").",
          "type": "boolean"
        },
        "secureConfigSecret": {
          "description": "SecureConfigSecret is an optional field to provide secure settings for database.\n\t- Ref: https://www.elastic.co/guide/en/elasticsearch/reference/7.14/secure-settings.html",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchHorizontalScalingSpec": {
      "description": "ElasticsearchHorizontalScalingSpec contains the horizontal scaling information of an Elasticsearch cluster",
      "type": "object",
      "properties": {
        "node": {
          "description": "Number of combined (i.e. master, data, ingest) node",
          "type": "integer",
          "format": "int32"
        },
        "topology": {
          "description": "Node topology specification",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchHorizontalScalingTopologySpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchHorizontalScalingTopologySpec": {
      "description": "ElasticsearchHorizontalScalingTopologySpec contains the horizontal scaling information in cluster topology mode",
      "type": "object",
      "properties": {
        "coordinating": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "description": "Number of data nodes",
          "type": "integer",
          "format": "int32"
        },
        "dataCold": {
          "type": "integer",
          "format": "int32"
        },
        "dataContent": {
          "type": "integer",
          "format": "int32"
        },
        "dataFrozen": {
          "type": "integer",
          "format": "int32"
        },
        "dataHot": {
          "type": "integer",
          "format": "int32"
        },
        "dataWarm": {
          "type": "integer",
          "format": "int32"
        },
        "ingest": {
          "description": "Number of ingest nodes",
          "type": "integer",
          "format": "int32"
        },
        "master": {
          "description": "Number of master nodes",
          "type": "integer",
          "format": "int32"
        },
        "ml": {
          "type": "integer",
          "format": "int32"
        },
        "transform": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequest": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequestSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.OpsRequestStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "ElasticsearchOpsRequest",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequestList": {
      "description": "ElasticsearchOpsRequestList is a list of ElasticsearchOpsRequests",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of ElasticsearchOpsRequest CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequest"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "ElasticsearchOpsRequestList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchOpsRequestSpec": {
      "description": "ElasticsearchOpsRequestSpec is the spec for ElasticsearchOpsRequest",
      "type": "object",
      "required": [
        "databaseRef",
        "type"
      ],
      "properties": {
        "apply": {
          "description": "ApplyOption is to control the execution of OpsRequest depending on the database state.",
          "type": "string"
        },
        "configuration": {
          "description": "Specifies information necessary for custom configuration of Elasticsearch",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchCustomConfigurationSpec"
        },
        "databaseRef": {
          "description": "Specifies the Elasticsearch reference",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "horizontalScaling": {
          "description": "Specifies information necessary for horizontal scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchHorizontalScalingSpec"
        },
        "restart": {
          "description": "Specifies information necessary for restarting database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RestartSpec"
        },
        "timeout": {
          "description": "Timeout for each step of the ops request in second. If a step doesn't finish within the specified timeout, the ops request will result in failure.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "tls": {
          "description": "Specifies information necessary for configuring TLS",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.TLSSpec"
        },
        "type": {
          "description": "Specifies the ops request type: Upgrade, HorizontalScaling, VerticalScaling etc.",
          "type": "string",
          "default": ""
        },
        "updateVersion": {
          "description": "Specifies information necessary for upgrading Elasticsearch",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchUpdateVersionSpec"
        },
        "verticalScaling": {
          "description": "Specifies information necessary for vertical scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchVerticalScalingSpec"
        },
        "volumeExpansion": {
          "description": "Specifies information necessary for volume expansion",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchVolumeExpansionSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchUpdateVersionSpec": {
      "type": "object",
      "properties": {
        "targetVersion": {
          "description": "Specifies the target version name from catalog",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchVerticalScalingSpec": {
      "description": "ElasticsearchVerticalScalingSpec is the spec for Elasticsearch vertical scaling",
      "type": "object",
      "properties": {
        "exporter": {
          "description": "Resource spec for exporter sidecar",
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "node": {
          "description": "Resource spec for combined nodes",
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "topology": {
          "description": "Specifies the resource spec for cluster in topology mode",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchVerticalScalingTopologySpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchVerticalScalingTopologySpec": {
      "description": "ElasticsearchVerticalScalingTopologySpec is the resource spec in the cluster topology mode",
      "type": "object",
      "properties": {
        "coordinating": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "data": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "dataCold": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "dataContent": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "dataFrozen": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "dataHot": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "dataWarm": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "ingest": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "master": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "ml": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "transform": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchVolumeExpansionSpec": {
      "description": "ElasticsearchVolumeExpansionSpec is the spec for Elasticsearch volume expansion",
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        },
        "node": {
          "description": "volume specification for combined nodes",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "topology": {
          "description": "volume specification for nodes in cluster topology",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchVolumeExpansionTopologySpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ElasticsearchVolumeExpansionTopologySpec": {
      "description": "ElasticsearchVolumeExpansionTopologySpec is the spec for Elasticsearch volume expansion in topology mode",
      "type": "object",
      "properties": {
        "coordinating": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "data": {
          "description": "volume specification for data nodes",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "dataCold": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "dataContent": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "dataFrozen": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "dataHot": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "dataWarm": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "ingest": {
          "description": "volume specification for ingest nodes",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "master": {
          "description": "volume specification for master nodes",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "ml": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "transform": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdCustomConfigurationSpec": {
      "type": "object"
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdHorizontalScalingSpec": {
      "description": "HorizontalScaling is the spec for Etcd horizontal scaling",
      "type": "object"
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequest": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequestSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.OpsRequestStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "EtcdOpsRequest",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequestList": {
      "description": "EtcdOpsRequestList is a list of EtcdOpsRequests",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of EtcdOpsRequest CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequest"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "EtcdOpsRequestList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdOpsRequestSpec": {
      "description": "EtcdOpsRequestSpec is the spec for EtcdOpsRequest",
      "type": "object",
      "required": [
        "databaseRef",
        "type"
      ],
      "properties": {
        "apply": {
          "description": "ApplyOption is to control the execution of OpsRequest depending on the database state.",
          "type": "string"
        },
        "configuration": {
          "description": "Specifies information necessary for custom configuration of Etcd",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdCustomConfigurationSpec"
        },
        "databaseRef": {
          "description": "Specifies the Etcd reference",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "horizontalScaling": {
          "description": "Specifies information necessary for horizontal scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdHorizontalScalingSpec"
        },
        "restart": {
          "description": "Specifies information necessary for restarting database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RestartSpec"
        },
        "tls": {
          "description": "Specifies information necessary for configuring TLS",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.TLSSpec"
        },
        "type": {
          "description": "Specifies the ops request type: Upgrade, HorizontalScaling, VerticalScaling etc.",
          "type": "string",
          "default": ""
        },
        "updateVersion": {
          "description": "Specifies information necessary for upgrading Etcd",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdUpdateVersionSpec"
        },
        "verticalScaling": {
          "description": "Specifies information necessary for vertical scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdVerticalScalingSpec"
        },
        "volumeExpansion": {
          "description": "Specifies information necessary for volume expansion",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdVolumeExpansionSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdReplicaReadinessCriteria": {
      "description": "EtcdReplicaReadinessCriteria is the criteria for checking readiness of a Etcd pod after updating, horizontal scaling etc.",
      "type": "object"
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdUpdateVersionSpec": {
      "type": "object",
      "properties": {
        "readinessCriteria": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdReplicaReadinessCriteria"
        },
        "targetVersion": {
          "description": "Specifies the target version name from catalog",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdVerticalScalingSpec": {
      "description": "EtcdVerticalScalingSpec is the spec for Etcd vertical scaling",
      "type": "object",
      "properties": {
        "readinessCriteria": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdReplicaReadinessCriteria"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.EtcdVolumeExpansionSpec": {
      "description": "EtcdVolumeExpansionSpec is the spec for Etcd volume expansion",
      "type": "object"
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.HiddenNode": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedCustomConfigurationSpec": {
      "type": "object"
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedHorizontalScalingSpec": {
      "description": "HorizontalScaling is the spec for Memcached horizontal scaling",
      "type": "object"
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequest": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequestSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.OpsRequestStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "MemcachedOpsRequest",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequestList": {
      "description": "MemcachedOpsRequestList is a list of MemcachedOpsRequests",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of MemcachedOpsRequest CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequest"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "MemcachedOpsRequestList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedOpsRequestSpec": {
      "description": "MemcachedOpsRequestSpec is the spec for MemcachedOpsRequest",
      "type": "object",
      "required": [
        "databaseRef",
        "type"
      ],
      "properties": {
        "apply": {
          "description": "ApplyOption is to control the execution of OpsRequest depending on the database state.",
          "type": "string"
        },
        "configuration": {
          "description": "Specifies information necessary for custom configuration of Memcached",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedCustomConfigurationSpec"
        },
        "databaseRef": {
          "description": "Specifies the Memcached reference",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "horizontalScaling": {
          "description": "Specifies information necessary for horizontal scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedHorizontalScalingSpec"
        },
        "restart": {
          "description": "Specifies information necessary for restarting database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RestartSpec"
        },
        "tls": {
          "description": "Specifies information necessary for configuring TLS",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.TLSSpec"
        },
        "type": {
          "description": "Specifies the ops request type: Upgrade, HorizontalScaling, VerticalScaling etc.",
          "type": "string",
          "default": ""
        },
        "updateVersion": {
          "description": "Specifies information necessary for upgrading Memcached",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedUpdateVersionSpec"
        },
        "verticalScaling": {
          "description": "Specifies information necessary for vertical scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedVerticalScalingSpec"
        },
        "volumeExpansion": {
          "description": "Specifies information necessary for volume expansion",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedVolumeExpansionSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedReplicaReadinessCriteria": {
      "description": "MemcachedReplicaReadinessCriteria is the criteria for checking readiness of a Memcached pod after updating, horizontal scaling etc.",
      "type": "object"
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedUpdateVersionSpec": {
      "type": "object",
      "properties": {
        "readinessCriteria": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedReplicaReadinessCriteria"
        },
        "targetVersion": {
          "description": "Specifies the target version name from catalog",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedVerticalScalingSpec": {
      "description": "MemcachedVerticalScalingSpec is the spec for Memcached vertical scaling",
      "type": "object",
      "properties": {
        "readinessCriteria": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedReplicaReadinessCriteria"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MemcachedVolumeExpansionSpec": {
      "description": "MemcachedVolumeExpansionSpec is the spec for Memcached volume expansion",
      "type": "object"
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBCustomConfiguration": {
      "type": "object",
      "properties": {
        "applyConfig": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "configSecret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "inlineConfig": {
          "description": "Deprecated",
          "type": "string"
        },
        "removeCustomConfig": {
          "type": "boolean"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBCustomConfigurationSpec": {
      "type": "object",
      "properties": {
        "arbiter": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBCustomConfiguration"
        },
        "configServer": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBCustomConfiguration"
        },
        "hidden": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBCustomConfiguration"
        },
        "mongos": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBCustomConfiguration"
        },
        "replicaSet": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBCustomConfiguration"
        },
        "shard": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBCustomConfiguration"
        },
        "standalone": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBCustomConfiguration"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBHorizontalScalingSpec": {
      "description": "HorizontalScaling is the spec for mongodb horizontal scaling",
      "type": "object",
      "properties": {
        "configServer": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ConfigNode"
        },
        "hidden": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.HiddenNode"
        },
        "mongos": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongosNode"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "shard": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBShardNode"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequest": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequestSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.OpsRequestStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "MongoDBOpsRequest",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequestList": {
      "description": "MongoDBOpsRequestList is a list of MongoDBOpsRequests",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of MongoDBOpsRequest CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequest"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "MongoDBOpsRequestList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBOpsRequestSpec": {
      "description": "MongoDBOpsRequestSpec is the spec for MongoDBOpsRequest",
      "type": "object",
      "required": [
        "databaseRef",
        "type"
      ],
      "properties": {
        "apply": {
          "description": "ApplyOption is to control the execution of OpsRequest depending on the database state.",
          "type": "string"
        },
        "archiver": {
          "description": "Specifies information necessary for setting up Archiver for database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ArchiverOptions"
        },
        "configuration": {
          "description": "Specifies information necessary for custom configuration of MongoDB",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBCustomConfigurationSpec"
        },
        "databaseRef": {
          "description": "Specifies the MongoDB reference",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "horizontalScaling": {
          "description": "Specifies information necessary for horizontal scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBHorizontalScalingSpec"
        },
        "readinessCriteria": {
          "description": "Specifies the Readiness Criteria",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBReplicaReadinessCriteria"
        },
        "reprovision": {
          "description": "Specifies information necessary for reprovisioning database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.Reprovision"
        },
        "restart": {
          "description": "Specifies information necessary for restarting database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RestartSpec"
        },
        "timeout": {
          "description": "Timeout for each step of the ops request in second. If a step doesn't finish within the specified timeout, the ops request will result in failure.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "tls": {
          "description": "Specifies information necessary for configuring TLS",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.TLSSpec"
        },
        "type": {
          "description": "Specifies the ops request type: Upgrade, HorizontalScaling, VerticalScaling etc.",
          "type": "string",
          "default": ""
        },
        "updateVersion": {
          "description": "Specifies information necessary for upgrading MongoDB",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBUpdateVersionSpec"
        },
        "verticalScaling": {
          "description": "Specifies information necessary for vertical scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBVerticalScalingSpec"
        },
        "volumeExpansion": {
          "description": "Specifies information necessary for volume expansion",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBVolumeExpansionSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBReplicaReadinessCriteria": {
      "description": "MongoDBReplicaReadinessCriteria is the criteria for checking readiness of a MongoDB pod after restarting the pod",
      "type": "object",
      "properties": {
        "objectsCountDiffPercentage": {
          "type": "integer",
          "format": "int32"
        },
        "oplogMaxLagSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBShardNode": {
      "description": "MongoDBShardNode is the spec for mongodb Shard",
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "shards": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBUpdateVersionSpec": {
      "type": "object",
      "properties": {
        "targetVersion": {
          "description": "Specifies the target version name from catalog",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBVerticalScalingSpec": {
      "description": "MongoDBVerticalScalingSpec is the spec for mongodb vertical scaling",
      "type": "object",
      "properties": {
        "arbiter": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "configServer": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "coordinator": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "exporter": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "hidden": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "mongos": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "replicaSet": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "shard": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "standalone": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MongoDBVolumeExpansionSpec": {
      "description": "MongoDBVolumeExpansionSpec is the spec for mongodb volume expansion",
      "type": "object",
      "properties": {
        "configServer": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "hidden": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "mode": {
          "type": "string"
        },
        "replicaSet": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "shard": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "standalone": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MongosNode": {
      "description": "MongosNode is the spec for mongodb Mongos",
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLCustomConfigurationSpec": {
      "type": "object",
      "properties": {
        "configSecret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "inlineConfig": {
          "type": "string"
        },
        "removeCustomConfig": {
          "type": "boolean"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLHorizontalScalingSpec": {
      "type": "object",
      "properties": {
        "member": {
          "description": "Number of nodes/members of the group",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequest": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequestSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.OpsRequestStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "MySQLOpsRequest",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequestList": {
      "description": "MySQLOpsRequestList is a list of MySQLOpsRequests",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of MySQLOpsRequest CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequest"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "MySQLOpsRequestList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLOpsRequestSpec": {
      "description": "MySQLOpsRequestSpec is the spec for MySQLOpsRequest",
      "type": "object",
      "required": [
        "databaseRef",
        "type"
      ],
      "properties": {
        "apply": {
          "description": "ApplyOption is to control the execution of OpsRequest depending on the database state.",
          "type": "string"
        },
        "configuration": {
          "description": "Specifies information necessary for custom configuration of MySQL",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLCustomConfigurationSpec"
        },
        "databaseRef": {
          "description": "Specifies the MySQL reference",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "horizontalScaling": {
          "description": "Specifies information necessary for horizontal scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLHorizontalScalingSpec"
        },
        "restart": {
          "description": "Specifies information necessary for restarting database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RestartSpec"
        },
        "timeout": {
          "description": "Timeout for each step of the ops request in second. If a step doesn't finish within the specified timeout, the ops request will result in failure.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "tls": {
          "description": "Specifies information necessary for configuring TLS",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLTLSSpec"
        },
        "type": {
          "description": "Specifies the ops request type: Upgrade, HorizontalScaling, VerticalScaling etc.",
          "type": "string",
          "default": ""
        },
        "updateVersion": {
          "description": "Specifies information necessary for upgrading MySQL",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLUpdateVersionSpec"
        },
        "verticalScaling": {
          "description": "Specifies information necessary for vertical scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLVerticalScalingSpec"
        },
        "volumeExpansion": {
          "description": "Specifies information necessary for volume expansion",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLVolumeExpansionSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLQueryRules": {
      "type": "object",
      "required": [
        "rules",
        "reqType"
      ],
      "properties": {
        "reqType": {
          "type": "string",
          "default": ""
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
          }
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLReplicaReadinessCriteria": {
      "description": "MySQLReplicaReadinessCriteria is the criteria for checking readiness of a MySQL pod after updating, horizontal scaling etc.",
      "type": "object"
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLTLSSpec": {
      "type": "object",
      "properties": {
        "certificates": {
          "description": "Certificate provides server and/or client certificate options used by application pods. These options are passed to a cert-manager Certificate object. xref: https://github.com/jetstack/cert-manager/blob/v0.16.0/pkg/apis/certmanager/v1beta1/types_certificate.go#L82-L162",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.CertificateSpec"
          }
        },
        "issuerRef": {
          "description": "IssuerRef is a reference to a Certificate Issuer.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "remove": {
          "description": "Remove tells operator to remove TLS configuration",
          "type": "boolean"
        },
        "requireSSL": {
          "description": "Indicates that the database server need to be encrypted connections(ssl)",
          "type": "boolean"
        },
        "rotateCertificates": {
          "description": "RotateCertificates tells operator to initiate certificate rotation",
          "type": "boolean"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLUpdateVersionSpec": {
      "type": "object",
      "properties": {
        "readinessCriteria": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLReplicaReadinessCriteria"
        },
        "targetVersion": {
          "description": "Specifies the target version name from catalog",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLUsers": {
      "type": "object",
      "required": [
        "users",
        "reqType"
      ],
      "properties": {
        "reqType": {
          "type": "string",
          "default": ""
        },
        "users": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.kubedb.v1alpha2.MySQLUser"
          }
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLVerticalScalingSpec": {
      "type": "object",
      "properties": {
        "coordinator": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "exporter": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "mysql": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLVolumeExpansionSpec": {
      "description": "MySQLVolumeExpansionSpec is the spec for MySQL volume expansion",
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        },
        "mysql": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.OpsRequestStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions applied to the request, such as approval or denial.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.Condition"
          }
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this resource. It corresponds to the resource's generation, which is updated on mutation by the API Server.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "Specifies the current phase of the ops request",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBCustomConfigurationSpec": {
      "type": "object",
      "properties": {
        "applyConfig": {
          "description": "ApplyConfig is an optional field to provide PerconaXtraDB configuration. Provided configuration will be applied to config files stored in ConfigSecret. If the ConfigSecret is missing, the operator will create a new k8s secret by the following naming convention: {db-name}-user-config . Expected input format:\n\tapplyConfig:\n\t\tfile-name.cnf: |\n\t\t\t[mysqld]\n\t\t\tkey1: value1\n\t\t\tkey2: value2",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "configSecret": {
          "description": "ConfigSecret is an optional field to provide custom configuration file for database.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "inlineConfig": {
          "description": "Deprecated",
          "type": "string"
        },
        "removeCustomConfig": {
          "description": "If set to \"true\", the user provided configuration will be removed. PerconaXtraDB will start will default configuration that is generated by the operator.",
          "type": "boolean"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBHorizontalScalingSpec": {
      "type": "object",
      "properties": {
        "member": {
          "description": "Number of nodes/members of the group",
          "type": "integer",
          "format": "int32"
        },
        "memberWeight": {
          "description": "specifies the weight of the current member/Node",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequest": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequestSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.OpsRequestStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "PerconaXtraDBOpsRequest",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequestList": {
      "description": "PerconaXtraDBOpsRequestList is a list of PerconaXtraDBOpsRequests",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of PerconaXtraDBOpsRequest CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequest"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "PerconaXtraDBOpsRequestList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBOpsRequestSpec": {
      "description": "PerconaXtraDBOpsRequestSpec is the spec for PerconaXtraDBOpsRequest",
      "type": "object",
      "required": [
        "databaseRef",
        "type"
      ],
      "properties": {
        "apply": {
          "description": "ApplyOption is to control the execution of OpsRequest depending on the database state.",
          "type": "string"
        },
        "configuration": {
          "description": "Specifies information necessary for custom configuration of PerconaXtraDB",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBCustomConfigurationSpec"
        },
        "databaseRef": {
          "description": "Specifies the PerconaXtraDB reference",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "horizontalScaling": {
          "description": "Specifies information necessary for horizontal scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBHorizontalScalingSpec"
        },
        "restart": {
          "description": "Specifies information necessary for restarting database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RestartSpec"
        },
        "timeout": {
          "description": "Timeout for each step of the ops request in second. If a step doesn't finish within the specified timeout, the ops request will result in failure.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "tls": {
          "description": "Specifies information necessary for configuring TLS",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBTLSSpec"
        },
        "type": {
          "description": "Specifies the ops request type: Upgrade, HorizontalScaling, VerticalScaling etc.",
          "type": "string",
          "default": ""
        },
        "updateVersion": {
          "description": "Specifies information necessary for upgrading PerconaXtraDB",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBUpdateVersionSpec"
        },
        "verticalScaling": {
          "description": "Specifies information necessary for vertical scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBVerticalScalingSpec"
        },
        "volumeExpansion": {
          "description": "Specifies information necessary for volume expansion",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBVolumeExpansionSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBTLSSpec": {
      "description": "PerconaXtraDBTLSSpec specifies information necessary for configuring TLS",
      "type": "object",
      "properties": {
        "certificates": {
          "description": "Certificate provides server and/or client certificate options used by application pods. These options are passed to a cert-manager Certificate object. xref: https://github.com/jetstack/cert-manager/blob/v0.16.0/pkg/apis/certmanager/v1beta1/types_certificate.go#L82-L162",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.CertificateSpec"
          }
        },
        "issuerRef": {
          "description": "IssuerRef is a reference to a Certificate Issuer.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "remove": {
          "description": "Remove tells operator to remove TLS configuration",
          "type": "boolean"
        },
        "requireSSL": {
          "description": "Indicates that the database server need to be encrypted connections(ssl)",
          "type": "boolean"
        },
        "rotateCertificates": {
          "description": "RotateCertificates tells operator to initiate certificate rotation",
          "type": "boolean"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBUpdateVersionSpec": {
      "type": "object",
      "properties": {
        "targetVersion": {
          "description": "Specifies the target version name from catalog",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBVerticalScalingSpec": {
      "type": "object",
      "properties": {
        "coordinator": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "exporter": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "perconaxtradb": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PerconaXtraDBVolumeExpansionSpec": {
      "description": "PerconaXtraDBVolumeExpansionSpec is the spec for PerconaXtraDB volume expansion",
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        },
        "perconaxtradb": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresCustomConfigurationSpec": {
      "type": "object",
      "properties": {
        "configSecret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "inlineConfig": {
          "type": "string"
        },
        "removeCustomConfig": {
          "type": "boolean"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresHorizontalScalingSpec": {
      "description": "HorizontalScaling is the spec for Postgres horizontal scaling",
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "standbyMode": {
          "description": "Standby mode",
          "type": "string"
        },
        "streamingMode": {
          "description": "Streaming mode",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequest": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequestSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.OpsRequestStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "PostgresOpsRequest",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequestList": {
      "description": "PostgresOpsRequestList is a list of PostgresOpsRequests",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of PostgresOpsRequest CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequest"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "PostgresOpsRequestList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresOpsRequestSpec": {
      "description": "PostgresOpsRequestSpec is the spec for PostgresOpsRequest",
      "type": "object",
      "required": [
        "databaseRef",
        "type"
      ],
      "properties": {
        "apply": {
          "description": "ApplyOption is to control the execution of OpsRequest depending on the database state.",
          "type": "string"
        },
        "configuration": {
          "description": "Specifies information necessary for custom configuration of Postgres",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresCustomConfigurationSpec"
        },
        "databaseRef": {
          "description": "Specifies the Postgres reference",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "horizontalScaling": {
          "description": "Specifies information necessary for horizontal scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresHorizontalScalingSpec"
        },
        "restart": {
          "description": "Specifies information necessary for restarting database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RestartSpec"
        },
        "timeout": {
          "description": "Timeout for each step of the ops request in second. If a step doesn't finish within the specified timeout, the ops request will result in failure.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "tls": {
          "description": "Specifies information necessary for configuring TLS",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresTLSSpec"
        },
        "type": {
          "description": "Specifies the ops request type: Upgrade, HorizontalScaling, VerticalScaling etc.",
          "type": "string",
          "default": ""
        },
        "updateVersion": {
          "description": "Specifies information necessary for upgrading Postgres",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresUpdateVersionSpec"
        },
        "verticalScaling": {
          "description": "Specifies information necessary for vertical scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresVerticalScalingSpec"
        },
        "volumeExpansion": {
          "description": "Specifies information necessary for volume expansion",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresVolumeExpansionSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresTLSSpec": {
      "type": "object",
      "properties": {
        "certificates": {
          "description": "Certificate provides server and/or client certificate options used by application pods. These options are passed to a cert-manager Certificate object. xref: https://github.com/jetstack/cert-manager/blob/v0.16.0/pkg/apis/certmanager/v1beta1/types_certificate.go#L82-L162",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.CertificateSpec"
          }
        },
        "clientAuthMode": {
          "description": "ClientAuthMode for sidecar or sharding. (default will be md5. [md5;scram;cert])",
          "type": "string"
        },
        "issuerRef": {
          "description": "IssuerRef is a reference to a Certificate Issuer.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "remove": {
          "description": "Remove tells operator to remove TLS configuration",
          "type": "boolean"
        },
        "rotateCertificates": {
          "description": "RotateCertificates tells operator to initiate certificate rotation",
          "type": "boolean"
        },
        "sslMode": {
          "description": "SSLMode for both standalone and clusters. [disable;allow;prefer;require;verify-ca;verify-full]",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresUpdateVersionSpec": {
      "type": "object",
      "properties": {
        "targetVersion": {
          "description": "Specifies the target version name from catalog",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresVerticalScalingSpec": {
      "description": "PostgresVerticalScalingSpec is the spec for Postgres vertical scaling",
      "type": "object",
      "properties": {
        "coordinator": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "exporter": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "postgres": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.PostgresVolumeExpansionSpec": {
      "description": "PostgresVolumeExpansionSpec is the spec for Postgres volume expansion",
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        },
        "postgres": {
          "description": "volume specification for Postgres",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLCustomConfigurationSpec": {
      "type": "object",
      "properties": {
        "adminVariables": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "mysqlQueryRules": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLQueryRules"
        },
        "mysqlUsers": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.MySQLUsers"
        },
        "mysqlVariables": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLHorizontalScalingSpec": {
      "description": "HorizontalScaling is the spec for ProxySQL horizontal scaling",
      "type": "object",
      "properties": {
        "member": {
          "description": "Number of nodes/members of the group",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequest": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequestSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.OpsRequestStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "ProxySQLOpsRequest",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequestList": {
      "description": "ProxySQLOpsRequestList is a list of ProxySQLOpsRequests",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of ProxySQLOpsRequest CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequest"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "ProxySQLOpsRequestList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLOpsRequestSpec": {
      "description": "ProxySQLOpsRequestSpec is the spec for ProxySQLOpsRequest",
      "type": "object",
      "required": [
        "proxyRef",
        "type"
      ],
      "properties": {
        "apply": {
          "description": "ApplyOption is to control the execution of OpsRequest depending on the database state.",
          "type": "string"
        },
        "configuration": {
          "description": "Specifies information necessary for custom configuration of ProxySQL",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLCustomConfigurationSpec"
        },
        "horizontalScaling": {
          "description": "Specifies information necessary for horizontal scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLHorizontalScalingSpec"
        },
        "proxyRef": {
          "description": "Specifies the ProxySQL reference",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "restart": {
          "description": "Specifies information necessary for restarting database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RestartSpec"
        },
        "timeout": {
          "description": "Timeout for each step of the ops request in second. If a step doesn't finish within the specified timeout, the ops request will result in failure.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "tls": {
          "description": "Specifies information necessary for configuring TLS",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.TLSSpec"
        },
        "type": {
          "description": "Specifies the ops request type: Upgrade, HorizontalScaling, VerticalScaling etc.",
          "type": "string",
          "default": ""
        },
        "updateVersion": {
          "description": "Specifies information necessary for upgrading ProxySQL",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLUpdateVersionSpec"
        },
        "verticalScaling": {
          "description": "Specifies information necessary for vertical scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLVerticalScalingSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLReplicaReadinessCriteria": {
      "description": "ProxySQLReplicaReadinessCriteria is the criteria for checking readiness of a ProxySQL pod after updating, horizontal scaling etc.",
      "type": "object"
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLUpdateVersionSpec": {
      "type": "object",
      "properties": {
        "readinessCriteria": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLReplicaReadinessCriteria"
        },
        "targetVersion": {
          "description": "Specifies the target version name from catalog",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.ProxySQLVerticalScalingSpec": {
      "description": "ProxySQLVerticalScalingSpec is the spec for ProxySQL vertical scaling",
      "type": "object",
      "properties": {
        "proxysql": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisCustomConfigurationSpec": {
      "type": "object",
      "properties": {
        "configSecret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "inlineConfig": {
          "type": "string"
        },
        "podTemplate": {
          "description": "PodTemplate is an optional configuration for pods used to expose database",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec"
        },
        "removeCustomConfig": {
          "type": "boolean"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisHorizontalScalingSpec": {
      "type": "object",
      "properties": {
        "master": {
          "description": "Number of Masters in the cluster",
          "type": "integer",
          "format": "int32"
        },
        "replicas": {
          "description": "specifies the number of replica for the master",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequest": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequestSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.OpsRequestStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "RedisOpsRequest",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequestList": {
      "description": "RedisOpsRequestList is a list of RedisOpsRequests",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of RedisOpsRequest CRD objects",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequest"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "ops.kubedb.com",
          "kind": "RedisOpsRequestList",
          "version": "v1alpha1"
        }
      ]
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisOpsRequestSpec": {
      "description": "RedisOpsRequestSpec is the spec for RedisOpsRequest",
      "type": "object",
      "required": [
        "databaseRef",
        "type"
      ],
      "properties": {
        "apply": {
          "description": "ApplyOption is to control the execution of OpsRequest depending on the database state.",
          "type": "string"
        },
        "configuration": {
          "description": "Specifies information necessary for custom configuration of Redis",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisCustomConfigurationSpec"
        },
        "databaseRef": {
          "description": "Specifies the Redis reference",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "horizontalScaling": {
          "description": "Specifies information necessary for horizontal scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisHorizontalScalingSpec"
        },
        "restart": {
          "description": "Specifies information necessary for restarting database",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RestartSpec"
        },
        "sentinel": {
          "description": "Specifies information necessary for replacing sentinel instances",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisSentinelSpec"
        },
        "timeout": {
          "description": "Timeout for each step of the ops request in second. If a step doesn't finish within the specified timeout, the ops request will result in failure.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "tls": {
          "description": "Specifies information necessary for configuring TLS",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisTLSSpec"
        },
        "type": {
          "description": "Specifies the ops request type: Upgrade, HorizontalScaling, VerticalScaling etc.",
          "type": "string",
          "default": ""
        },
        "updateVersion": {
          "description": "Specifies information necessary for upgrading Redis",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisUpdateVersionSpec"
        },
        "verticalScaling": {
          "description": "Specifies information necessary for vertical scaling",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisVerticalScalingSpec"
        },
        "volumeExpansion": {
          "description": "Specifies information necessary for volume expansion",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisVolumeExpansionSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisReplicaReadinessCriteria": {
      "description": "RedisReplicaReadinessCriteria is the criteria for checking readiness of a Redis pod after updating, horizontal scaling etc.",
      "type": "object"
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisSentinelRef": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the refereed sentinel",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace where refereed sentinel has been deployed",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisSentinelSpec": {
      "type": "object",
      "required": [
        "ref"
      ],
      "properties": {
        "ref": {
          "description": "Sentinel Ref for new Sentinel which will replace the old sentinel",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisSentinelRef"
        },
        "removeUnusedSentinel": {
          "type": "boolean"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisTLSSpec": {
      "type": "object",
      "properties": {
        "certificates": {
          "description": "Certificate provides server and/or client certificate options used by application pods. These options are passed to a cert-manager Certificate object. xref: https://github.com/jetstack/cert-manager/blob/v0.16.0/pkg/apis/certmanager/v1beta1/types_certificate.go#L82-L162",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.CertificateSpec"
          }
        },
        "issuerRef": {
          "description": "IssuerRef is a reference to a Certificate Issuer.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "remove": {
          "description": "Remove tells operator to remove TLS configuration",
          "type": "boolean"
        },
        "rotateCertificates": {
          "description": "RotateCertificates tells operator to initiate certificate rotation",
          "type": "boolean"
        },
        "sentinel": {
          "description": "This field is only needed in Redis Sentinel Mode when we add or remove TLS. In Redis Sentinel Mode, both redis instances and sentinel instances either have TLS or don't have TLS. So when want to add TLS to Redis in Sentinel Mode, current sentinel instances don't have TLS enabled, so we need to give a new Sentinel Reference which has TLS enabled and which will monitor the Redis instances when we add TLS to it",
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisSentinelSpec"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisUpdateVersionSpec": {
      "type": "object",
      "properties": {
        "readinessCriteria": {
          "$ref": "#/definitions/dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisReplicaReadinessCriteria"
        },
        "targetVersion": {
          "description": "Specifies the target version name from catalog",
          "type": "string"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisVerticalScalingSpec": {
      "description": "RedisVerticalScalingSpec is the spec for Redis vertical scaling",
      "type": "object",
      "properties": {
        "coordinator": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "exporter": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "redis": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.RedisVolumeExpansionSpec": {
      "description": "RedisVolumeExpansionSpec is the spec for Redis volume expansion",
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        },
        "redis": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.Reprovision": {
      "type": "object"
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.RestartSpec": {
      "type": "object"
    },
    "dev.kubedb.apimachinery.apis.ops.v1alpha1.TLSSpec": {
      "type": "object",
      "properties": {
        "certificates": {
          "description": "Certificate provides server and/or client certificate options used by application pods. These options are passed to a cert-manager Certificate object. xref: https://github.com/jetstack/cert-manager/blob/v0.16.0/pkg/apis/certmanager/v1beta1/types_certificate.go#L82-L162",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.CertificateSpec"
          }
        },
        "issuerRef": {
          "description": "IssuerRef is a reference to a Certificate Issuer.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "remove": {
          "description": "Remove tells operator to remove TLS configuration",
          "type": "boolean"
        },
        "rotateCertificates": {
          "description": "RotateCertificates tells operator to initiate certificate rotation",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource": {
      "description": "Represents a Persistent Disk resource in AWS.\n\nAn AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "required": [
        "volumeID"
      ],
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "type": "string"
        },
        "partition": {
          "description": "partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
          "type": "integer",
          "format": "int32"
        },
        "readOnly": {
          "description": "readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "type": "boolean"
        },
        "volumeID": {
          "description": "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.Affinity": {
      "description": "Affinity is a group of affinity scheduling rules.",
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "description": "Describes node affinity scheduling rules for the pod.",
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeAffinity"
        },
        "podAffinity": {
          "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinity"
        },
        "podAntiAffinity": {
          "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAntiAffinity"
        }
      }
    },
    "io.k8s.api.core.v1.AzureDiskVolumeSource": {
      "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
      "type": "object",
      "required": [
        "diskName",
        "diskURI"
      ],
      "properties": {
        "cachingMode": {
          "description": "cachingMode is the Host Caching mode: None, Read Only, Read Write.",
          "type": "string"
        },
        "diskName": {
          "description": "diskName is the Name of the data disk in the blob storage",
          "type": "string",
          "default": ""
        },
        "diskURI": {
          "description": "diskURI is the URI of data disk in the blob storage",
          "type": "string",
          "default": ""
        },
        "fsType": {
          "description": "fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "kind": {
          "description": "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.AzureFileVolumeSource": {
      "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
      "type": "object",
      "required": [
        "secretName",
        "shareName"
      ],
      "properties": {
        "readOnly": {
          "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretName": {
          "description": "secretName is the  name of secret that contains Azure Storage Account Name and Key",
          "type": "string",
          "default": ""
        },
        "shareName": {
          "description": "shareName is the azure share Name",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.CSIVolumeSource": {
      "description": "Represents a source location of a volume to mount, managed by an external CSI driver",
      "type": "object",
      "required": [
        "driver"
      ],
      "properties": {
        "driver": {
          "description": "driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.",
          "type": "string",
          "default": ""
        },
        "fsType": {
          "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
          "type": "string"
        },
        "nodePublishSecretRef": {
          "description": "nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "readOnly": {
          "description": "readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).",
          "type": "boolean"
        },
        "volumeAttributes": {
          "description": "volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "io.k8s.api.core.v1.Capabilities": {
      "description": "Adds and removes POSIX capabilities from running containers.",
      "type": "object",
      "properties": {
        "add": {
          "description": "Added capabilities",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "drop": {
          "description": "Removed capabilities",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "io.k8s.api.core.v1.CephFSVolumeSource": {
      "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "required": [
        "monitors"
      ],
      "properties": {
        "monitors": {
          "description": "monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "path": {
          "description": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "type": "boolean"
        },
        "secretFile": {
          "description": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "type": "string"
        },
        "secretRef": {
          "description": "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "user": {
          "description": "user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.CinderVolumeSource": {
      "description": "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "required": [
        "volumeID"
      ],
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "type": "boolean"
        },
        "secretRef": {
          "description": "secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "volumeID": {
          "description": "volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.ClientIPConfig": {
      "description": "ClientIPConfig represents the configurations of Client IP based session affinity.",
      "type": "object",
      "properties": {
        "timeoutSeconds": {
          "description": "timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be \u003e0 \u0026\u0026 \u003c=86400(for 1 day) if ServiceAffinity == \"ClientIP\". Default value is 10800(for 3 hours).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.core.v1.ConfigMapEnvSource": {
      "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.\n\nThe contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the ConfigMap must be defined",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.ConfigMapKeySelector": {
      "description": "Selects a key from a ConfigMap.",
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "description": "The key to select.",
          "type": "string",
          "default": ""
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the ConfigMap or its key must be defined",
          "type": "boolean"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ConfigMapProjection": {
      "description": "Adapts a ConfigMap into a projected volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.",
      "type": "object",
      "properties": {
        "items": {
          "description": "items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          }
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "optional specify whether the ConfigMap or its keys must be defined",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.ConfigMapVolumeSource": {
      "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "properties": {
        "defaultMode": {
          "description": "defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "description": "items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          }
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "optional specify whether the ConfigMap or its keys must be defined",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.Container": {
      "description": "A single application container that you want to run within a pod.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "args": {
          "description": "Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "command": {
          "description": "Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "env": {
          "description": "List of environment variables to set in the container. Cannot be updated.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "envFrom": {
          "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "image": {
          "description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
          "type": "string"
        },
        "imagePullPolicy": {
          "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n\nPossible enum values:\n - `\"Always\"` means that kubelet always attempts to pull the latest image. Container will fail If the pull fails.\n - `\"IfNotPresent\"` means that kubelet pulls if the image isn't present on disk. Container will fail if the image isn't present and the pull fails.\n - `\"Never\"` means that kubelet never pulls an image, but only uses a local image. Container will fail if the image isn't present",
          "type": "string",
          "enum": [
            "Always",
            "IfNotPresent",
            "Never"
          ]
        },
        "lifecycle": {
          "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
        },
        "livenessProbe": {
          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "name": {
          "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
          "type": "string",
          "default": ""
        },
        "ports": {
          "description": "List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
          },
          "x-kubernetes-list-map-keys": [
            "containerPort",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "containerPort",
          "x-kubernetes-patch-strategy": "merge"
        },
        "readinessProbe": {
          "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "resources": {
          "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "securityContext": {
          "description": "SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
        },
        "startupProbe": {
          "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "stdin": {
          "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
          "type": "boolean"
        },
        "stdinOnce": {
          "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
          "type": "boolean"
        },
        "terminationMessagePath": {
          "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
          "type": "string"
        },
        "terminationMessagePolicy": {
          "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.\n\nPossible enum values:\n - `\"FallbackToLogsOnError\"` will read the most recent contents of the container logs for the container status message when the container exits with an error and the terminationMessagePath has no contents.\n - `\"File\"` is the default behavior and will set the container status message to the contents of the container's terminationMessagePath when the container exits.",
          "type": "string",
          "enum": [
            "FallbackToLogsOnError",
            "File"
          ]
        },
        "tty": {
          "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
          "type": "boolean"
        },
        "volumeDevices": {
          "description": "volumeDevices is the list of block devices to be used by the container.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
          },
          "x-kubernetes-patch-merge-key": "devicePath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumeMounts": {
          "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          },
          "x-kubernetes-patch-merge-key": "mountPath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "workingDir": {
          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ContainerPort": {
      "description": "ContainerPort represents a network port in a single container.",
      "type": "object",
      "required": [
        "containerPort"
      ],
      "properties": {
        "containerPort": {
          "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536.",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "hostIP": {
          "description": "What host IP to bind the external port to.",
          "type": "string"
        },
        "hostPort": {
          "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
          "type": "string"
        },
        "protocol": {
          "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".\n\nPossible enum values:\n - `\"SCTP\"` is the SCTP protocol.\n - `\"TCP\"` is the TCP protocol.\n - `\"UDP\"` is the UDP protocol.",
          "type": "string",
          "default": "TCP",
          "enum": [
            "SCTP",
            "TCP",
            "UDP"
          ]
        }
      }
    },
    "io.k8s.api.core.v1.DownwardAPIProjection": {
      "description": "Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.",
      "type": "object",
      "properties": {
        "items": {
          "description": "Items is a list of DownwardAPIVolume file",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile"
          }
        }
      }
    },
    "io.k8s.api.core.v1.DownwardAPIVolumeFile": {
      "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "fieldRef": {
          "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector"
        },
        "mode": {
          "description": "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
          "type": "string",
          "default": ""
        },
        "resourceFieldRef": {
          "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector"
        }
      }
    },
    "io.k8s.api.core.v1.DownwardAPIVolumeSource": {
      "description": "DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "properties": {
        "defaultMode": {
          "description": "Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "description": "Items is a list of downward API volume file",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile"
          }
        }
      }
    },
    "io.k8s.api.core.v1.EmptyDirVolumeSource": {
      "description": "Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "properties": {
        "medium": {
          "description": "medium represents what type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
          "type": "string"
        },
        "sizeLimit": {
          "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "io.k8s.api.core.v1.EnvFromSource": {
      "description": "EnvFromSource represents the source of a set of ConfigMaps",
      "type": "object",
      "properties": {
        "configMapRef": {
          "description": "The ConfigMap to select from",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapEnvSource"
        },
        "prefix": {
          "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
          "type": "string"
        },
        "secretRef": {
          "description": "The Secret to select from",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretEnvSource"
        }
      }
    },
    "io.k8s.api.core.v1.EnvVar": {
      "description": "EnvVar represents an environment variable present in a Container.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
          "type": "string",
          "default": ""
        },
        "value": {
          "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
          "type": "string"
        },
        "valueFrom": {
          "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
          "$ref": "#/definitions/io.k8s.api.core.v1.EnvVarSource"
        }
      }
    },
    "io.k8s.api.core.v1.EnvVarSource": {
      "description": "EnvVarSource represents a source for the value of an EnvVar.",
      "type": "object",
      "properties": {
        "configMapKeyRef": {
          "description": "Selects a key of a ConfigMap.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        },
        "fieldRef": {
          "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector"
        },
        "resourceFieldRef": {
          "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector"
        },
        "secretKeyRef": {
          "description": "Selects a key of a secret in the pod's namespace",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.k8s.api.core.v1.EphemeralVolumeSource": {
      "description": "Represents an ephemeral volume that is handled by a normal storage driver.",
      "type": "object",
      "properties": {
        "volumeClaimTemplate": {
          "description": "Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `\u003cpod name\u003e-\u003cvolume name\u003e` where `\u003cvolume name\u003e` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.\n\nRequired, must not be nil.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimTemplate"
        }
      }
    },
    "io.k8s.api.core.v1.ExecAction": {
      "description": "ExecAction describes a \"run in container\" action.",
      "type": "object",
      "properties": {
        "command": {
          "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "io.k8s.api.core.v1.FCVolumeSource": {
      "description": "Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "lun": {
          "description": "lun is Optional: FC target lun number",
          "type": "integer",
          "format": "int32"
        },
        "readOnly": {
          "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "targetWWNs": {
          "description": "targetWWNs is Optional: FC target worldwide names (WWNs)",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "wwids": {
          "description": "wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "io.k8s.api.core.v1.FlexVolumeSource": {
      "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
      "type": "object",
      "required": [
        "driver"
      ],
      "properties": {
        "driver": {
          "description": "driver is the name of the driver to use for this volume.",
          "type": "string",
          "default": ""
        },
        "fsType": {
          "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
          "type": "string"
        },
        "options": {
          "description": "options is Optional: this field holds extra command options if any.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "readOnly": {
          "description": "readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretRef": {
          "description": "secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        }
      }
    },
    "io.k8s.api.core.v1.FlockerVolumeSource": {
      "description": "Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "properties": {
        "datasetName": {
          "description": "datasetName is Name of the dataset stored as metadata -\u003e name on the dataset for Flocker should be considered as deprecated",
          "type": "string"
        },
        "datasetUUID": {
          "description": "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource": {
      "description": "Represents a Persistent Disk resource in Google Compute Engine.\n\nA GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.",
      "type": "object",
      "required": [
        "pdName"
      ],
      "properties": {
        "fsType": {
          "description": "fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "type": "string"
        },
        "partition": {
          "description": "partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "type": "integer",
          "format": "int32"
        },
        "pdName": {
          "description": "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "type": "string",
          "default": ""
        },
        "readOnly": {
          "description": "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.GRPCAction": {
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "port": {
          "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "service": {
          "description": "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.GitRepoVolumeSource": {
      "description": "Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.\n\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
      "type": "object",
      "required": [
        "repository"
      ],
      "properties": {
        "directory": {
          "description": "directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
          "type": "string"
        },
        "repository": {
          "description": "repository is the URL",
          "type": "string",
          "default": ""
        },
        "revision": {
          "description": "revision is the commit hash for the specified revision.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.GlusterfsVolumeSource": {
      "description": "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "required": [
        "endpoints",
        "path"
      ],
      "properties": {
        "endpoints": {
          "description": "endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
          "type": "string",
          "default": ""
        },
        "path": {
          "description": "path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
          "type": "string",
          "default": ""
        },
        "readOnly": {
          "description": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.HTTPGetAction": {
      "description": "HTTPGetAction describes an action based on HTTP Get requests.",
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "host": {
          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
          "type": "string"
        },
        "httpHeaders": {
          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HTTPHeader"
          }
        },
        "path": {
          "description": "Path to access on the HTTP server.",
          "type": "string"
        },
        "port": {
          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "scheme": {
          "description": "Scheme to use for connecting to the host. Defaults to HTTP.\n\nPossible enum values:\n - `\"HTTP\"` means that the scheme used will be http://\n - `\"HTTPS\"` means that the scheme used will be https://",
          "type": "string",
          "enum": [
            "HTTP",
            "HTTPS"
          ]
        }
      }
    },
    "io.k8s.api.core.v1.HTTPHeader": {
      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "description": "The header field name",
          "type": "string",
          "default": ""
        },
        "value": {
          "description": "The header field value",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.HostPathVolumeSource": {
      "description": "Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "path": {
          "description": "path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
          "type": "string",
          "default": ""
        },
        "type": {
          "description": "type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ISCSIVolumeSource": {
      "description": "Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "required": [
        "targetPortal",
        "iqn",
        "lun"
      ],
      "properties": {
        "chapAuthDiscovery": {
          "description": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication",
          "type": "boolean"
        },
        "chapAuthSession": {
          "description": "chapAuthSession defines whether support iSCSI Session CHAP authentication",
          "type": "boolean"
        },
        "fsType": {
          "description": "fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
          "type": "string"
        },
        "initiatorName": {
          "description": "initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface \u003ctarget portal\u003e:\u003cvolume name\u003e will be created for the connection.",
          "type": "string"
        },
        "iqn": {
          "description": "iqn is the target iSCSI Qualified Name.",
          "type": "string",
          "default": ""
        },
        "iscsiInterface": {
          "description": "iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).",
          "type": "string"
        },
        "lun": {
          "description": "lun represents iSCSI Target Lun number.",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "portals": {
          "description": "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "readOnly": {
          "description": "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.",
          "type": "boolean"
        },
        "secretRef": {
          "description": "secretRef is the CHAP Secret for iSCSI target and initiator authentication",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "targetPortal": {
          "description": "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.KeyToPath": {
      "description": "Maps a string key to a path within a volume.",
      "type": "object",
      "required": [
        "key",
        "path"
      ],
      "properties": {
        "key": {
          "description": "key is the key to project.",
          "type": "string",
          "default": ""
        },
        "mode": {
          "description": "mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "description": "path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.Lifecycle": {
      "description": "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
      "type": "object",
      "properties": {
        "postStart": {
          "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
          "$ref": "#/definitions/io.k8s.api.core.v1.LifecycleHandler"
        },
        "preStop": {
          "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
          "$ref": "#/definitions/io.k8s.api.core.v1.LifecycleHandler"
        }
      }
    },
    "io.k8s.api.core.v1.LifecycleHandler": {
      "description": "LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.",
      "type": "object",
      "properties": {
        "exec": {
          "description": "Exec specifies the action to take.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction"
        },
        "httpGet": {
          "description": "HTTPGet specifies the http request to perform.",
          "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction"
        },
        "tcpSocket": {
          "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction"
        }
      }
    },
    "io.k8s.api.core.v1.LocalObjectReference": {
      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.NFSVolumeSource": {
      "description": "Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "required": [
        "server",
        "path"
      ],
      "properties": {
        "path": {
          "description": "path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "type": "string",
          "default": ""
        },
        "readOnly": {
          "description": "readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "type": "boolean"
        },
        "server": {
          "description": "server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.NodeAffinity": {
      "description": "Node affinity is a group of node affinity scheduling rules.",
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PreferredSchedulingTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector"
        }
      }
    },
    "io.k8s.api.core.v1.NodeSelector": {
      "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
      "type": "object",
      "required": [
        "nodeSelectorTerms"
      ],
      "properties": {
        "nodeSelectorTerms": {
          "description": "Required. A list of node selector terms. The terms are ORed.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm"
          }
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.NodeSelectorRequirement": {
      "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      "type": "object",
      "required": [
        "key",
        "operator"
      ],
      "properties": {
        "key": {
          "description": "The label key that the selector applies to.",
          "type": "string",
          "default": ""
        },
        "operator": {
          "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\nPossible enum values:\n - `\"DoesNotExist\"`\n - `\"Exists\"`\n - `\"Gt\"`\n - `\"In\"`\n - `\"Lt\"`\n - `\"NotIn\"`",
          "type": "string",
          "default": "",
          "enum": [
            "DoesNotExist",
            "Exists",
            "Gt",
            "In",
            "Lt",
            "NotIn"
          ]
        },
        "values": {
          "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "io.k8s.api.core.v1.NodeSelectorTerm": {
      "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
      "type": "object",
      "properties": {
        "matchExpressions": {
          "description": "A list of node selector requirements by node's labels.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
          }
        },
        "matchFields": {
          "description": "A list of node selector requirements by node's fields.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
          }
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ObjectFieldSelector": {
      "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
      "type": "object",
      "required": [
        "fieldPath"
      ],
      "properties": {
        "apiVersion": {
          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
          "type": "string"
        },
        "fieldPath": {
          "description": "Path of the field to select in the specified API version.",
          "type": "string",
          "default": ""
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ObjectReference": {
      "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "fieldPath": {
          "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
          "type": "string"
        },
        "resourceVersion": {
          "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
          "type": "string"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimSpec": {
      "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
      "type": "object",
      "properties": {
        "accessModes": {
          "description": "accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "dataSource": {
          "description": "dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "dataSourceRef": {
          "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While DataSource ignores disallowed values (dropping them), DataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "resources": {
          "description": "resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "selector": {
          "description": "selector is a label query over volumes to consider for binding.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "storageClassName": {
          "description": "storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
          "type": "string"
        },
        "volumeMode": {
          "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.",
          "type": "string"
        },
        "volumeName": {
          "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimTemplate": {
      "description": "PersistentVolumeClaimTemplate is used to produce PersistentVolumeClaim objects as part of an EphemeralVolumeSource.",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "metadata": {
          "description": "May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        }
      }
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource": {
      "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
      "type": "object",
      "required": [
        "claimName"
      ],
      "properties": {
        "claimName": {
          "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "type": "string",
          "default": ""
        },
        "readOnly": {
          "description": "readOnly Will force the ReadOnly setting in VolumeMounts. Default false.",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource": {
      "description": "Represents a Photon Controller persistent disk resource.",
      "type": "object",
      "required": [
        "pdID"
      ],
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "pdID": {
          "description": "pdID is the ID that identifies Photon Controller persistent disk",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.PodAffinity": {
      "description": "Pod affinity is a group of inter pod affinity scheduling rules.",
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
          }
        }
      }
    },
    "io.k8s.api.core.v1.PodAffinityTerm": {
      "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \u003ctopologyKey\u003e matches that of any node on which a pod of the set of pods is running",
      "type": "object",
      "required": [
        "topologyKey"
      ],
      "properties": {
        "labelSelector": {
          "description": "A label query over a set of resources, in this case pods.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "namespaceSelector": {
          "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "namespaces": {
          "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "topologyKey": {
          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.PodAntiAffinity": {
      "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules.",
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
          }
        }
      }
    },
    "io.k8s.api.core.v1.PodDNSConfig": {
      "description": "PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.",
      "type": "object",
      "properties": {
        "nameservers": {
          "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "options": {
          "description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfigOption"
          }
        },
        "searches": {
          "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "io.k8s.api.core.v1.PodDNSConfigOption": {
      "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required.",
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PodSecurityContext": {
      "description": "PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.",
      "type": "object",
      "properties": {
        "fsGroup": {
          "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.",
          "type": "integer",
          "format": "int64"
        },
        "fsGroupChangePolicy": {
          "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used. Note that this field cannot be set when spec.os.name is windows.",
          "type": "string"
        },
        "runAsGroup": {
          "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
          "type": "integer",
          "format": "int64"
        },
        "runAsNonRoot": {
          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "type": "boolean"
        },
        "runAsUser": {
          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
          "type": "integer",
          "format": "int64"
        },
        "seLinuxOptions": {
          "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
        },
        "seccompProfile": {
          "description": "The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SeccompProfile"
        },
        "supplementalGroups": {
          "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container. Note that this field cannot be set when spec.os.name is windows.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        },
        "sysctls": {
          "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Sysctl"
          }
        },
        "windowsOptions": {
          "description": "The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.",
          "$ref": "#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions"
        }
      }
    },
    "io.k8s.api.core.v1.PortworxVolumeSource": {
      "description": "PortworxVolumeSource represents a Portworx volume resource.",
      "type": "object",
      "required": [
        "volumeID"
      ],
      "properties": {
        "fsType": {
          "description": "fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "volumeID": {
          "description": "volumeID uniquely identifies a Portworx volume",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.PreferredSchedulingTerm": {
      "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
      "type": "object",
      "required": [
        "weight",
        "preference"
      ],
      "properties": {
        "preference": {
          "description": "A node selector term, associated with the corresponding weight.",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm"
        },
        "weight": {
          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      }
    },
    "io.k8s.api.core.v1.Probe": {
      "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
      "type": "object",
      "properties": {
        "exec": {
          "description": "Exec specifies the action to take.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction"
        },
        "failureThreshold": {
          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
          "type": "integer",
          "format": "int32"
        },
        "grpc": {
          "description": "GRPC specifies an action involving a GRPC port. This is a beta field and requires enabling GRPCContainerProbe feature gate.",
          "$ref": "#/definitions/io.k8s.api.core.v1.GRPCAction"
        },
        "httpGet": {
          "description": "HTTPGet specifies the http request to perform.",
          "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction"
        },
        "initialDelaySeconds": {
          "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "type": "integer",
          "format": "int32"
        },
        "periodSeconds": {
          "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
          "type": "integer",
          "format": "int32"
        },
        "successThreshold": {
          "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
          "type": "integer",
          "format": "int32"
        },
        "tcpSocket": {
          "description": "TCPSocket specifies an action involving a TCP port.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction"
        },
        "terminationGracePeriodSeconds": {
          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
          "type": "integer",
          "format": "int64"
        },
        "timeoutSeconds": {
          "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.core.v1.ProjectedVolumeSource": {
      "description": "Represents a projected volume source",
      "type": "object",
      "properties": {
        "defaultMode": {
          "description": "defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "type": "integer",
          "format": "int32"
        },
        "sources": {
          "description": "sources is the list of volume projections",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeProjection"
          }
        }
      }
    },
    "io.k8s.api.core.v1.QuobyteVolumeSource": {
      "description": "Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "required": [
        "registry",
        "volume"
      ],
      "properties": {
        "group": {
          "description": "group to map volume access to Default is no group",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
          "type": "boolean"
        },
        "registry": {
          "description": "registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
          "type": "string",
          "default": ""
        },
        "tenant": {
          "description": "tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin",
          "type": "string"
        },
        "user": {
          "description": "user to map volume access to Defaults to serivceaccount user",
          "type": "string"
        },
        "volume": {
          "description": "volume is a string that references an already created Quobyte volume by name.",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.RBDVolumeSource": {
      "description": "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "required": [
        "monitors",
        "image"
      ],
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
          "type": "string"
        },
        "image": {
          "description": "image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string",
          "default": ""
        },
        "keyring": {
          "description": "keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        },
        "monitors": {
          "description": "monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "pool": {
          "description": "pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "boolean"
        },
        "secretRef": {
          "description": "secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "user": {
          "description": "user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ResourceFieldSelector": {
      "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
      "type": "object",
      "required": [
        "resource"
      ],
      "properties": {
        "containerName": {
          "description": "Container name: required for volumes, optional for env vars",
          "type": "string"
        },
        "divisor": {
          "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "resource": {
          "description": "Required: resource to select",
          "type": "string",
          "default": ""
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ResourceRequirements": {
      "description": "ResourceRequirements describes the compute resource requirements.",
      "type": "object",
      "properties": {
        "limits": {
          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "requests": {
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        }
      }
    },
    "io.k8s.api.core.v1.SELinuxOptions": {
      "description": "SELinuxOptions are the labels to be applied to the container",
      "type": "object",
      "properties": {
        "level": {
          "description": "Level is SELinux level label that applies to the container.",
          "type": "string"
        },
        "role": {
          "description": "Role is a SELinux role label that applies to the container.",
          "type": "string"
        },
        "type": {
          "description": "Type is a SELinux type label that applies to the container.",
          "type": "string"
        },
        "user": {
          "description": "User is a SELinux user label that applies to the container.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ScaleIOVolumeSource": {
      "description": "ScaleIOVolumeSource represents a persistent ScaleIO volume",
      "type": "object",
      "required": [
        "gateway",
        "system",
        "secretRef"
      ],
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".",
          "type": "string"
        },
        "gateway": {
          "description": "gateway is the host address of the ScaleIO API Gateway.",
          "type": "string",
          "default": ""
        },
        "protectionDomain": {
          "description": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretRef": {
          "description": "secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "sslEnabled": {
          "description": "sslEnabled Flag enable/disable SSL communication with Gateway, default false",
          "type": "boolean"
        },
        "storageMode": {
          "description": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.",
          "type": "string"
        },
        "storagePool": {
          "description": "storagePool is the ScaleIO Storage Pool associated with the protection domain.",
          "type": "string"
        },
        "system": {
          "description": "system is the name of the storage system as configured in ScaleIO.",
          "type": "string",
          "default": ""
        },
        "volumeName": {
          "description": "volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.SeccompProfile": {
      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "localhostProfile": {
          "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\".",
          "type": "string"
        },
        "type": {
          "description": "type indicates which kind of seccomp profile will be applied. Valid options are:\n\nLocalhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.\n\nPossible enum values:\n - `\"Localhost\"` indicates a profile defined in a file on the node should be used. The file's location relative to \u003ckubelet-root-dir\u003e/seccomp.\n - `\"RuntimeDefault\"` represents the default container runtime seccomp profile.\n - `\"Unconfined\"` indicates no seccomp profile is applied (A.K.A. unconfined).",
          "type": "string",
          "default": "",
          "enum": [
            "Localhost",
            "RuntimeDefault",
            "Unconfined"
          ]
        }
      },
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "localhostProfile": "LocalhostProfile"
          }
        }
      ]
    },
    "io.k8s.api.core.v1.SecretEnvSource": {
      "description": "SecretEnvSource selects a Secret to populate the environment variables with.\n\nThe contents of the target Secret's Data field will represent the key-value pairs as environment variables.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the Secret must be defined",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.SecretKeySelector": {
      "description": "SecretKeySelector selects a key of a Secret.",
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "description": "The key of the secret to select from.  Must be a valid secret key.",
          "type": "string",
          "default": ""
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the Secret or its key must be defined",
          "type": "boolean"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.SecretProjection": {
      "description": "Adapts a secret into a projected volume.\n\nThe contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.",
      "type": "object",
      "properties": {
        "items": {
          "description": "items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          }
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "optional field specify whether the Secret or its key must be defined",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.SecretVolumeSource": {
      "description": "Adapts a Secret into a volume.\n\nThe contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "properties": {
        "defaultMode": {
          "description": "defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "description": "items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          }
        },
        "optional": {
          "description": "optional field specify whether the Secret or its keys must be defined",
          "type": "boolean"
        },
        "secretName": {
          "description": "secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.SecurityContext": {
      "description": "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
      "type": "object",
      "properties": {
        "allowPrivilegeEscalation": {
          "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.",
          "type": "boolean"
        },
        "capabilities": {
          "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Capabilities"
        },
        "privileged": {
          "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.",
          "type": "boolean"
        },
        "procMount": {
          "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.",
          "type": "string"
        },
        "readOnlyRootFilesystem": {
          "description": "Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.",
          "type": "boolean"
        },
        "runAsGroup": {
          "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
          "type": "integer",
          "format": "int64"
        },
        "runAsNonRoot": {
          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "type": "boolean"
        },
        "runAsUser": {
          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
          "type": "integer",
          "format": "int64"
        },
        "seLinuxOptions": {
          "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
        },
        "seccompProfile": {
          "description": "The seccomp options to use by this container. If seccomp options are provided at both the pod \u0026 container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SeccompProfile"
        },
        "windowsOptions": {
          "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.",
          "$ref": "#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions"
        }
      }
    },
    "io.k8s.api.core.v1.ServiceAccountTokenProjection": {
      "description": "ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).",
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "audience": {
          "description": "audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
          "type": "string"
        },
        "expirationSeconds": {
          "description": "expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
          "type": "integer",
          "format": "int64"
        },
        "path": {
          "description": "path is the path relative to the mount point of the file to project the token into.",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.SessionAffinityConfig": {
      "description": "SessionAffinityConfig represents the configurations of session affinity.",
      "type": "object",
      "properties": {
        "clientIP": {
          "description": "clientIP contains the configurations of Client IP based session affinity.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ClientIPConfig"
        }
      }
    },
    "io.k8s.api.core.v1.StorageOSVolumeSource": {
      "description": "Represents a StorageOS persistent volume resource.",
      "type": "object",
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretRef": {
          "description": "secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "volumeName": {
          "description": "volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.",
          "type": "string"
        },
        "volumeNamespace": {
          "description": "volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.Sysctl": {
      "description": "Sysctl defines a kernel parameter to be set",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "description": "Name of a property to set",
          "type": "string",
          "default": ""
        },
        "value": {
          "description": "Value of a property to set",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.TCPSocketAction": {
      "description": "TCPSocketAction describes an action based on opening a socket",
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "host": {
          "description": "Optional: Host name to connect to, defaults to the pod IP.",
          "type": "string"
        },
        "port": {
          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.k8s.api.core.v1.Toleration": {
      "description": "The pod this Toleration is attached to tolerates any taint that matches the triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
      "type": "object",
      "properties": {
        "effect": {
          "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n\nPossible enum values:\n - `\"NoExecute\"` Evict any already-running pods that do not tolerate the taint. Currently enforced by NodeController.\n - `\"NoSchedule\"` Do not allow new pods to schedule onto the node unless they tolerate the taint, but allow all pods submitted to Kubelet without going through the scheduler to start, and allow all already-running pods to continue running. Enforced by the scheduler.\n - `\"PreferNoSchedule\"` Like TaintEffectNoSchedule, but the scheduler tries not to schedule new pods onto the node, rather than prohibiting new pods from scheduling onto the node entirely. Enforced by the scheduler.",
          "type": "string",
          "enum": [
            "NoExecute",
            "NoSchedule",
            "PreferNoSchedule"
          ]
        },
        "key": {
          "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
          "type": "string"
        },
        "operator": {
          "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\n\nPossible enum values:\n - `\"Equal\"`\n - `\"Exists\"`",
          "type": "string",
          "enum": [
            "Equal",
            "Exists"
          ]
        },
        "tolerationSeconds": {
          "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.TopologySpreadConstraint": {
      "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
      "type": "object",
      "required": [
        "maxSkew",
        "topologyKey",
        "whenUnsatisfiable"
      ],
      "properties": {
        "labelSelector": {
          "description": "LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "matchLabelKeys": {
          "description": "MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          },
          "x-kubernetes-list-type": "atomic"
        },
        "maxSkew": {
          "description": "MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "minDomains": {
          "description": "MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew.\n\nThis is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).",
          "type": "integer",
          "format": "int32"
        },
        "nodeAffinityPolicy": {
          "description": "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\nIf this value is nil, the behavior is equivalent to the Honor policy. This is a alpha-level feature enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.",
          "type": "string"
        },
        "nodeTaintsPolicy": {
          "description": "NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.\n\nIf this value is nil, the behavior is equivalent to the Ignore policy. This is a alpha-level feature enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.",
          "type": "string"
        },
        "topologyKey": {
          "description": "TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each \u003ckey, value\u003e as a \"bucket\", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology. And, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology. It's a required field.",
          "type": "string",
          "default": ""
        },
        "whenUnsatisfiable": {
          "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod if and only if every possible node assignment for that pod would violate \"MaxSkew\" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.\n\nPossible enum values:\n - `\"DoNotSchedule\"` instructs the scheduler not to schedule the pod when constraints are not satisfied.\n - `\"ScheduleAnyway\"` instructs the scheduler to schedule the pod even if constraints are not satisfied.",
          "type": "string",
          "default": "",
          "enum": [
            "DoNotSchedule",
            "ScheduleAnyway"
          ]
        }
      }
    },
    "io.k8s.api.core.v1.TypedLocalObjectReference": {
      "description": "TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.",
      "type": "object",
      "required": [
        "kind",
        "name"
      ],
      "properties": {
        "apiGroup": {
          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is the type of resource being referenced",
          "type": "string",
          "default": ""
        },
        "name": {
          "description": "Name is the name of resource being referenced",
          "type": "string",
          "default": ""
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.VolumeDevice": {
      "description": "volumeDevice describes a mapping of a raw block device within a container.",
      "type": "object",
      "required": [
        "name",
        "devicePath"
      ],
      "properties": {
        "devicePath": {
          "description": "devicePath is the path inside of the container that the device will be mapped to.",
          "type": "string",
          "default": ""
        },
        "name": {
          "description": "name must match the name of a persistentVolumeClaim in the pod",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.VolumeMount": {
      "description": "VolumeMount describes a mounting of a Volume within a container.",
      "type": "object",
      "required": [
        "name",
        "mountPath"
      ],
      "properties": {
        "mountPath": {
          "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
          "type": "string",
          "default": ""
        },
        "mountPropagation": {
          "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
          "type": "string"
        },
        "name": {
          "description": "This must match the Name of a Volume.",
          "type": "string",
          "default": ""
        },
        "readOnly": {
          "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
          "type": "boolean"
        },
        "subPath": {
          "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
          "type": "string"
        },
        "subPathExpr": {
          "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.VolumeProjection": {
      "description": "Projection that may be projected along with other supported volume types",
      "type": "object",
      "properties": {
        "configMap": {
          "description": "configMap information about the configMap data to project",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapProjection"
        },
        "downwardAPI": {
          "description": "downwardAPI information about the downwardAPI data to project",
          "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIProjection"
        },
        "secret": {
          "description": "secret information about the secret data to project",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretProjection"
        },
        "serviceAccountToken": {
          "description": "serviceAccountToken is information about the serviceAccountToken data to project",
          "$ref": "#/definitions/io.k8s.api.core.v1.ServiceAccountTokenProjection"
        }
      }
    },
    "io.k8s.api.core.v1.VolumeSource": {
      "description": "Represents the source of a volume to mount. Only one of its members may be specified.",
      "type": "object",
      "properties": {
        "awsElasticBlockStore": {
          "description": "awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "$ref": "#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"
        },
        "azureDisk": {
          "description": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource"
        },
        "azureFile": {
          "description": "azureFile represents an Azure File Service mount on the host and bind mount to the pod.",
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureFileVolumeSource"
        },
        "cephfs": {
          "description": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
          "$ref": "#/definitions/io.k8s.api.core.v1.CephFSVolumeSource"
        },
        "cinder": {
          "description": "cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.CinderVolumeSource"
        },
        "configMap": {
          "description": "configMap represents a configMap that should populate this volume",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapVolumeSource"
        },
        "csi": {
          "description": "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).",
          "$ref": "#/definitions/io.k8s.api.core.v1.CSIVolumeSource"
        },
        "downwardAPI": {
          "description": "downwardAPI represents downward API about the pod that should populate this volume",
          "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeSource"
        },
        "emptyDir": {
          "description": "emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
          "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"
        },
        "ephemeral": {
          "description": "ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.\n\nUse this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.\n\nA pod can use both types of ephemeral volumes and persistent volumes at the same time.",
          "$ref": "#/definitions/io.k8s.api.core.v1.EphemeralVolumeSource"
        },
        "fc": {
          "description": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
          "$ref": "#/definitions/io.k8s.api.core.v1.FCVolumeSource"
        },
        "flexVolume": {
          "description": "flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
          "$ref": "#/definitions/io.k8s.api.core.v1.FlexVolumeSource"
        },
        "flocker": {
          "description": "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running",
          "$ref": "#/definitions/io.k8s.api.core.v1.FlockerVolumeSource"
        },
        "gcePersistentDisk": {
          "description": "gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "$ref": "#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"
        },
        "gitRepo": {
          "description": "gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
          "$ref": "#/definitions/io.k8s.api.core.v1.GitRepoVolumeSource"
        },
        "glusterfs": {
          "description": "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.GlusterfsVolumeSource"
        },
        "hostPath": {
          "description": "hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
          "$ref": "#/definitions/io.k8s.api.core.v1.HostPathVolumeSource"
        },
        "iscsi": {
          "description": "iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.ISCSIVolumeSource"
        },
        "nfs": {
          "description": "nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "$ref": "#/definitions/io.k8s.api.core.v1.NFSVolumeSource"
        },
        "persistentVolumeClaim": {
          "description": "persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource"
        },
        "photonPersistentDisk": {
          "description": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"
        },
        "portworxVolume": {
          "description": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.api.core.v1.PortworxVolumeSource"
        },
        "projected": {
          "description": "projected items for all in one resources secrets, configmaps, and downward API",
          "$ref": "#/definitions/io.k8s.api.core.v1.ProjectedVolumeSource"
        },
        "quobyte": {
          "description": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
          "$ref": "#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource"
        },
        "rbd": {
          "description": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.RBDVolumeSource"
        },
        "scaleIO": {
          "description": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ScaleIOVolumeSource"
        },
        "secret": {
          "description": "secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretVolumeSource"
        },
        "storageos": {
          "description": "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
          "$ref": "#/definitions/io.k8s.api.core.v1.StorageOSVolumeSource"
        },
        "vsphereVolume": {
          "description": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"
        }
      }
    },
    "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource": {
      "description": "Represents a vSphere volume resource.",
      "type": "object",
      "required": [
        "volumePath"
      ],
      "properties": {
        "fsType": {
          "description": "fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "storagePolicyID": {
          "description": "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
          "type": "string"
        },
        "storagePolicyName": {
          "description": "storagePolicyName is the storage Policy Based Management (SPBM) profile name.",
          "type": "string"
        },
        "volumePath": {
          "description": "volumePath is the path that identifies vSphere volume vmdk",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.WeightedPodAffinityTerm": {
      "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
      "type": "object",
      "required": [
        "weight",
        "podAffinityTerm"
      ],
      "properties": {
        "podAffinityTerm": {
          "description": "Required. A pod affinity term, associated with the corresponding weight.",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
        },
        "weight": {
          "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      }
    },
    "io.k8s.api.core.v1.WindowsSecurityContextOptions": {
      "description": "WindowsSecurityContextOptions contain Windows-specific options and credentials.",
      "type": "object",
      "properties": {
        "gmsaCredentialSpec": {
          "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
          "type": "string"
        },
        "gmsaCredentialSpecName": {
          "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
          "type": "string"
        },
        "hostProcess": {
          "description": "HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.",
          "type": "boolean"
        },
        "runAsUserName": {
          "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.api.resource.Quantity": {
      "description": "Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n``` \u003cquantity\u003e        ::= \u003csignedNumber\u003e\u003csuffix\u003e\n\n\t(Note that \u003csuffix\u003e may be empty, from the \"\" case in \u003cdecimalSI\u003e.)\n\n\u003cdigit\u003e           ::= 0 | 1 | ... | 9 \u003cdigits\u003e          ::= \u003cdigit\u003e | \u003cdigit\u003e\u003cdigits\u003e \u003cnumber\u003e          ::= \u003cdigits\u003e | \u003cdigits\u003e.\u003cdigits\u003e | \u003cdigits\u003e. | .\u003cdigits\u003e \u003csign\u003e            ::= \"+\" | \"-\" \u003csignedNumber\u003e    ::= \u003cnumber\u003e | \u003csign\u003e\u003cnumber\u003e \u003csuffix\u003e          ::= \u003cbinarySI\u003e | \u003cdecimalExponent\u003e | \u003cdecimalSI\u003e \u003cbinarySI\u003e        ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n\u003cdecimalSI\u003e       ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\n\u003cdecimalExponent\u003e ::= \"e\" \u003csignedNumber\u003e | \"E\" \u003csignedNumber\u003e ```\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n\n- No precision is lost - No fractional digits will be emitted - The exponent (or suffix) is as large as possible.\n\nThe sign will be omitted unless the number is negative.\n\nExamples:\n\n- 1.5 will be serialized as \"1500m\" - 1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.",
      "type": "string"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup": {
      "description": "APIGroup contains the name, the supported versions, and the preferred version of a group.",
      "type": "object",
      "required": [
        "name",
        "versions"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "name is the name of the group.",
          "type": "string",
          "default": ""
        },
        "preferredVersion": {
          "description": "preferredVersion is the version preferred by the API server, which probably is the storage version.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
        },
        "serverAddressByClientCIDRs": {
          "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
          }
        },
        "versions": {
          "description": "versions are the versions supported in this group.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIGroup",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList": {
      "description": "APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.",
      "type": "object",
      "required": [
        "groups"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "groups": {
          "description": "groups is a list of APIGroup.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIGroupList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIResource": {
      "description": "APIResource specifies the name of a resource and whether it is namespaced.",
      "type": "object",
      "required": [
        "name",
        "singularName",
        "namespaced",
        "kind",
        "verbs"
      ],
      "properties": {
        "categories": {
          "description": "categories is a list of the grouped resources this resource belongs to (e.g. 'all')",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "group": {
          "description": "group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\".",
          "type": "string"
        },
        "kind": {
          "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
          "type": "string",
          "default": ""
        },
        "name": {
          "description": "name is the plural name of the resource.",
          "type": "string",
          "default": ""
        },
        "namespaced": {
          "description": "namespaced indicates if a resource is namespaced or not.",
          "type": "boolean",
          "default": false
        },
        "shortNames": {
          "description": "shortNames is a list of suggested short names of the resource.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "singularName": {
          "description": "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.",
          "type": "string",
          "default": ""
        },
        "storageVersionHash": {
          "description": "The hash value of the storage version, the version this resource is converted to when written to the data store. Value must be treated as opaque by clients. Only equality comparison on the value is valid. This is an alpha feature and may change or be removed in the future. The field is populated by the apiserver only if the StorageVersionHash feature gate is enabled. This field will remain optional even if it graduates.",
          "type": "string"
        },
        "verbs": {
          "description": "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "version": {
          "description": "version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\".",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList": {
      "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
      "type": "object",
      "required": [
        "groupVersion",
        "resources"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "groupVersion": {
          "description": "groupVersion is the group and version this APIResourceList is for.",
          "type": "string",
          "default": ""
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "resources": {
          "description": "resources contains the name of the resources and if they are namespaced.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIResourceList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions": {
      "description": "DeleteOptions may be provided when deleting an API object.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "dryRun": {
          "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "gracePeriodSeconds": {
          "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "type": "integer",
          "format": "int64"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "orphanDependents": {
          "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "type": "boolean"
        },
        "preconditions": {
          "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions"
        },
        "propagationPolicy": {
          "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "catalog.kubedb.com",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "kubedb.com",
          "kind": "DeleteOptions",
          "version": "v1alpha2"
        },
        {
          "group": "ops.kubedb.com",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Duration": {
      "description": "Duration is a wrapper around time.Duration which supports correct marshaling to YAML and JSON. In particular, it marshals into strings, which can be used as map keys in json.",
      "type": "string"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1": {
      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map 'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item 'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list 'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery": {
      "description": "GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility.",
      "type": "object",
      "required": [
        "groupVersion",
        "version"
      ],
      "properties": {
        "groupVersion": {
          "description": "groupVersion specifies the API group and version in the form \"group/version\"",
          "type": "string",
          "default": ""
        },
        "version": {
          "description": "version specifies the version in the form of \"version\". This is to save the clients the trouble of splitting the GroupVersion.",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector": {
      "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
      "type": "object",
      "properties": {
        "matchExpressions": {
          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
          }
        },
        "matchLabels": {
          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      "type": "object",
      "required": [
        "key",
        "operator"
      ],
      "properties": {
        "key": {
          "description": "key is the label key that the selector applies to.",
          "type": "string",
          "default": "",
          "x-kubernetes-patch-merge-key": "key",
          "x-kubernetes-patch-strategy": "merge"
        },
        "operator": {
          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
          "type": "string",
          "default": ""
        },
        "values": {
          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": "object",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": "string"
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": "integer",
          "format": "int64"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
      "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
          "type": "string"
        },
        "fieldsType": {
          "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
          "type": "string"
        },
        "fieldsV1": {
          "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"
        },
        "manager": {
          "description": "Manager is an identifier of the workflow managing these fields.",
          "type": "string"
        },
        "operation": {
          "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
          "type": "string"
        },
        "subresource": {
          "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
          "type": "string"
        },
        "time": {
          "description": "Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": "integer",
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          },
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": "string"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": "integer",
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
          },
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": "string"
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
      "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
      "type": "object",
      "required": [
        "apiVersion",
        "kind",
        "name",
        "uid"
      ],
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string",
          "default": ""
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
          "type": "boolean"
        },
        "controller": {
          "description": "If true, this reference points to the managing controller.",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "default": ""
        },
        "name": {
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string",
          "default": ""
        },
        "uid": {
          "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string",
          "default": ""
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Patch": {
      "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.",
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions": {
      "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
      "type": "object",
      "properties": {
        "resourceVersion": {
          "description": "Specifies the target ResourceVersion",
          "type": "string"
        },
        "uid": {
          "description": "Specifies the target UID.",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR": {
      "description": "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
      "type": "object",
      "required": [
        "clientCIDR",
        "serverAddress"
      ],
      "properties": {
        "clientCIDR": {
          "description": "The CIDR with which clients can match their IP to figure out the server address that they should use.",
          "type": "string",
          "default": ""
        },
        "serverAddress": {
          "description": "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Status": {
      "description": "Status is a return value for calls that don't return other objects.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "code": {
          "description": "Suggested HTTP return code for this status, 0 if not set.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "message": {
          "description": "A human-readable description of the status of this operation.",
          "type": "string"
        },
        "metadata": {
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        },
        "reason": {
          "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
          "type": "string"
        },
        "status": {
          "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Status",
          "version": "v1"
        },
        {
          "group": "catalog.kubedb.com",
          "kind": "Status",
          "version": "v1alpha1"
        },
        {
          "group": "kubedb.com",
          "kind": "Status",
          "version": "v1alpha2"
        },
        {
          "group": "ops.kubedb.com",
          "kind": "Status",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause": {
      "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
      "type": "object",
      "properties": {
        "field": {
          "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
          "type": "string"
        },
        "message": {
          "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
          "type": "string"
        },
        "reason": {
          "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails": {
      "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
      "type": "object",
      "properties": {
        "causes": {
          "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
          }
        },
        "group": {
          "description": "The group attribute of the resource associated with the status StatusReason.",
          "type": "string"
        },
        "kind": {
          "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
          "type": "string"
        },
        "retryAfterSeconds": {
          "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
      "type": "string",
      "format": "date-time"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent": {
      "description": "Event represents a single event to a watched resource.",
      "type": "object",
      "required": [
        "type",
        "object"
      ],
      "properties": {
        "object": {
          "description": "Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *Status is recommended; other types may make sense\n   depending on context.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "type": {
          "type": "string",
          "default": ""
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "catalog.kubedb.com",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "kubedb.com",
          "kind": "WatchEvent",
          "version": "v1alpha2"
        },
        {
          "group": "ops.kubedb.com",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.runtime.RawExtension": {
      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.util.intstr.IntOrString": {
      "description": "IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.",
      "type": "string",
      "format": "int-or-string"
    },
    "xyz.kmodules.client-go.api.v1.CertificatePrivateKey": {
      "description": "CertificatePrivateKey contains configuration options for private keys used by the Certificate controller. This allows control of how private keys are rotated.",
      "type": "object",
      "properties": {
        "encoding": {
          "description": "The private key cryptography standards (PKCS) encoding for this certificate's private key to be encoded in. If provided, allowed values are \"pkcs1\" and \"pkcs8\" standing for PKCS#1 and PKCS#8, respectively. Defaults to PKCS#1 if not specified. See here for the difference between the formats: https://stackoverflow.com/a/48960291",
          "type": "string"
        }
      }
    },
    "xyz.kmodules.client-go.api.v1.CertificateSpec": {
      "type": "object",
      "required": [
        "alias"
      ],
      "properties": {
        "alias": {
          "description": "Alias represents the identifier of the certificate.",
          "type": "string",
          "default": ""
        },
        "dnsNames": {
          "description": "DNSNames is a list of subject alt names to be used on the Certificate.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "duration": {
          "description": "Certificate default Duration",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "emailAddresses": {
          "description": "EmailAddresses is a list of email subjectAltNames to be set on the Certificate.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "ipAddresses": {
          "description": "IPAddresses is a list of IP addresses to be used on the Certificate",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "issuerRef": {
          "description": "IssuerRef is a reference to a Certificate Issuer.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "privateKey": {
          "description": "Options to control private keys used for the Certificate.",
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.CertificatePrivateKey"
        },
        "renewBefore": {
          "description": "Certificate renew before expiration duration",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "secretName": {
          "description": "Specifies the k8s secret name that holds the certificates. Default to \u003cresource-name\u003e-\u003ccert-alias\u003e-cert.",
          "type": "string"
        },
        "subject": {
          "description": "Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).",
          "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.X509Subject"
        },
        "uris": {
          "description": "URIs is a list of URI subjectAltNames to be set on the Certificate.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "xyz.kmodules.client-go.api.v1.Condition": {
      "description": "Condition defines an observation of a object operational state.",
      "type": "object",
      "required": [
        "type",
        "status",
        "lastTransitionTime"
      ],
      "properties": {
        "lastTransitionTime": {
          "description": "Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "description": "A human-readable message indicating details about the transition. This field may be empty.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "The reason for the condition's last transition in CamelCase. The specific API may choose whether this field is considered a guaranteed API. This field may not be empty.",
          "type": "string"
        },
        "severity": {
          "description": "Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string",
          "default": ""
        },
        "type": {
          "description": "Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary util can be useful (see .node.status.util), the ability to deconflict is important.",
          "type": "string",
          "default": ""
        }
      }
    },
    "xyz.kmodules.client-go.api.v1.HealthCheckSpec": {
      "description": "HealthCheckSpec defines attributes of the health check",
      "type": "object",
      "properties": {
        "disableWriteCheck": {
          "description": "Whether to disable write check on database. Defaults to false.",
          "type": "boolean"
        },
        "failureThreshold": {
          "description": "Minimum consecutive failures for the health check to be considered failed after having succeeded. Defaults to 1. Minimum value is 1.",
          "type": "integer",
          "format": "int32"
        },
        "periodSeconds": {
          "description": "How often (in seconds) to perform the health check. Default to 10 seconds. Minimum value is 1.",
          "type": "integer",
          "format": "int32"
        },
        "timeoutSeconds": {
          "description": "Number of seconds after which the probe times out. Defaults to 10 second. Minimum value is 1. It should be less than the periodSeconds.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "xyz.kmodules.client-go.api.v1.ObjectReference": {
      "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string",
          "default": ""
        },
        "namespace": {
          "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
          "type": "string"
        }
      }
    },
    "xyz.kmodules.client-go.api.v1.TLSConfig": {
      "type": "object",
      "properties": {
        "certificates": {
          "description": "Certificate provides server and/or client certificate options used by application pods. These options are passed to a cert-manager Certificate object. xref: https://github.com/jetstack/cert-manager/blob/v0.16.0/pkg/apis/certmanager/v1beta1/types_certificate.go#L82-L162",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.client-go.api.v1.CertificateSpec"
          }
        },
        "issuerRef": {
          "description": "IssuerRef is a reference to a Certificate Issuer.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        }
      }
    },
    "xyz.kmodules.client-go.api.v1.X509Subject": {
      "description": "X509Subject Full X509 name specification",
      "type": "object",
      "properties": {
        "countries": {
          "description": "Countries to be used on the CertificateSpec.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "localities": {
          "description": "Cities to be used on the CertificateSpec.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "organizationalUnits": {
          "description": "Organizational Units to be used on the CertificateSpec.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "organizations": {
          "description": "Organizations to be used on the Certificate.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "postalCodes": {
          "description": "Postal codes to be used on the CertificateSpec.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "provinces": {
          "description": "State/Provinces to be used on the CertificateSpec.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "serialNumber": {
          "description": "Serial number to be used on the CertificateSpec.",
          "type": "string"
        },
        "streetAddresses": {
          "description": "Street addresses to be used on the CertificateSpec.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.AppReference": {
      "type": "object",
      "required": [
        "namespace",
        "name"
      ],
      "properties": {
        "name": {
          "description": "`name` is the name of the app. Required",
          "type": "string",
          "default": ""
        },
        "namespace": {
          "description": "`namespace` is the namespace of the app. Required",
          "type": "string",
          "default": ""
        },
        "parameters": {
          "description": "Parameters is a set of the parameters to be used to override default parameters. The inline YAML/JSON payload to be translated into equivalent JSON object.\n\nThe Parameters field is NOT secret or secured in any way and should NEVER be used to hold sensitive information.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        }
      }
    },
    "xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.Param": {
      "description": "Param declares a value to use for the Param called Name.",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "default": ""
        },
        "value": {
          "type": "string",
          "default": ""
        }
      }
    },
    "xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.StashAddonSpec": {
      "description": "StashAddonSpec is the spec for app",
      "type": "object",
      "properties": {
        "addon": {
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.StashTaskSpec"
        }
      }
    },
    "xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.StashTaskSpec": {
      "description": "StashTaskSpec is the spec for app",
      "type": "object",
      "required": [
        "backupTask",
        "restoreTask"
      ],
      "properties": {
        "backupTask": {
          "description": "Backup task definition",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.TaskRef"
        },
        "restoreTask": {
          "description": "Restore task definition",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.TaskRef"
        }
      }
    },
    "xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.TaskRef": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "default": ""
        },
        "params": {
          "description": "Params specifies a list of parameter to pass to the Task. Stash will use this parameters to resolve the task.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.custom-resources.apis.appcatalog.v1alpha1.Param"
          }
        }
      }
    },
    "xyz.kmodules.monitoring-agent-api.api.v1.AgentSpec": {
      "type": "object",
      "properties": {
        "agent": {
          "type": "string"
        },
        "prometheus": {
          "$ref": "#/definitions/xyz.kmodules.monitoring-agent-api.api.v1.PrometheusSpec"
        }
      }
    },
    "xyz.kmodules.monitoring-agent-api.api.v1.PrometheusExporterSpec": {
      "type": "object",
      "properties": {
        "args": {
          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "env": {
          "description": "List of environment variables to set in the container. Cannot be updated.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "port": {
          "description": "Port number for the exporter side car.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Compute Resources required by exporter container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "securityContext": {
          "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
        }
      }
    },
    "xyz.kmodules.monitoring-agent-api.api.v1.PrometheusSpec": {
      "type": "object",
      "properties": {
        "exporter": {
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.monitoring-agent-api.api.v1.PrometheusExporterSpec"
        },
        "serviceMonitor": {
          "$ref": "#/definitions/xyz.kmodules.monitoring-agent-api.api.v1.ServiceMonitorSpec"
        }
      }
    },
    "xyz.kmodules.monitoring-agent-api.api.v1.ServiceMonitorSpec": {
      "type": "object",
      "properties": {
        "interval": {
          "description": "Interval at which metrics should be scraped",
          "type": "string"
        },
        "labels": {
          "description": "Labels are key value pairs that is used to select Prometheus instance via ServiceMonitor labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "xyz.kmodules.offshoot-api.api.v1.EphemeralVolumeSource": {
      "description": "Represents an ephemeral volume that is handled by a normal storage driver.",
      "type": "object",
      "properties": {
        "volumeClaimTemplate": {
          "description": "Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `\u003cpod name\u003e-\u003cvolume name\u003e` where `\u003cvolume name\u003e` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.\n\nRequired, must not be nil.",
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PersistentVolumeClaimTemplate"
        }
      }
    },
    "xyz.kmodules.offshoot-api.api.v1.ObjectMeta": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "xyz.kmodules.offshoot-api.api.v1.PartialObjectMeta": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": "string"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
          },
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        }
      }
    },
    "xyz.kmodules.offshoot-api.api.v1.PersistentVolumeClaimTemplate": {
      "description": "PersistentVolumeClaimTemplate is used to produce PersistentVolumeClaim objects as part of an EphemeralVolumeSource.",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "metadata": {
          "description": "May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PartialObjectMeta"
        },
        "spec": {
          "description": "The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        }
      }
    },
    "xyz.kmodules.offshoot-api.api.v1.PodSpec": {
      "type": "object",
      "properties": {
        "affinity": {
          "description": "If specified, the pod's scheduling constraints",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "args": {
          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "containerSecurityContext": {
          "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.\n\nPossible enum values:\n - `\"ClusterFirst\"` indicates that the pod should use cluster DNS first unless hostNetwork is true, if it is available, then fall back on the default (as determined by kubelet) DNS settings.\n - `\"ClusterFirstWithHostNet\"` indicates that the pod should use cluster DNS first, if it is available, then fall back on the default (as determined by kubelet) DNS settings.\n - `\"Default\"` indicates that the pod should use the default (as determined by kubelet) DNS settings.\n - `\"None\"` indicates that the pod should use empty DNS settings. DNS parameters such as nameservers and search paths should be defined via DNSConfig.",
          "type": "string",
          "enum": [
            "ClusterFirst",
            "ClusterFirstWithHostNet",
            "Default",
            "None"
          ]
        },
        "enableServiceLinks": {
          "description": "EnableServiceLinks indicates whether information about services should be injected into pod's environment variables, matching the syntax of Docker links. Optional: Defaults to true.",
          "type": "boolean"
        },
        "env": {
          "description": "List of environment variables to set in the container. Cannot be updated.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "hostIPC": {
          "description": "Use the host's ipc namespace. Optional: Default to false.",
          "type": "boolean"
        },
        "hostNetwork": {
          "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.",
          "type": "boolean"
        },
        "hostPID": {
          "description": "Use the host's pid namespace. Optional: Default to false.",
          "type": "boolean"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "initContainers": {
          "description": "List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "lifecycle": {
          "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
        },
        "livenessProbe": {
          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Controllers may set default LivenessProbe if no liveness probe is provided. To ignore defaulting, set the value to empty LivenessProbe \"{}\". Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "nodeSelector": {
          "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          },
          "x-kubernetes-map-type": "atomic"
        },
        "priority": {
          "description": "The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.",
          "type": "integer",
          "format": "int32"
        },
        "priorityClassName": {
          "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
          "type": "string"
        },
        "readinessProbe": {
          "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. Controllers may set default ReadinessProbe if no readyness probe is provided. To ignore defaulting, set the value to empty ReadynessProbe \"{}\". More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "resources": {
          "description": "Compute Resources required by the sidecar container.",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class",
          "type": "string"
        },
        "schedulerName": {
          "description": "If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.",
          "type": "string"
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodSecurityContext"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
          "type": "string"
        },
        "shareProcessNamespace": {
          "description": "Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false.",
          "type": "boolean"
        },
        "terminationGracePeriodSeconds": {
          "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          },
          "x-kubernetes-list-map-keys": [
            "topologyKey",
            "whenUnsatisfiable"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "topologyKey",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumeMounts": {
          "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          },
          "x-kubernetes-patch-merge-key": "mountPath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumes": {
          "description": "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.Volume"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge,retainKeys"
        }
      }
    },
    "xyz.kmodules.offshoot-api.api.v1.PodTemplateSpec": {
      "description": "PodTemplateSpec describes the data a pod should have when created from a template",
      "type": "object",
      "properties": {
        "controller": {
          "description": "Workload controller's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.ObjectMeta"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.ObjectMeta"
        },
        "spec": {
          "description": "Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
          "default": {},
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.PodSpec"
        }
      }
    },
    "xyz.kmodules.offshoot-api.api.v1.ServicePort": {
      "description": "ServicePort contains information on service's port.",
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "name": {
          "description": "The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. This maps to the 'Name' field in EndpointPort objects. Optional if only one ServicePort is defined on this service.",
          "type": "string"
        },
        "nodePort": {
          "description": "The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
          "type": "integer",
          "format": "int32"
        },
        "port": {
          "description": "The port that will be exposed by this service.",
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      }
    },
    "xyz.kmodules.offshoot-api.api.v1.ServiceSpec": {
      "description": "ServiceSpec describes the attributes that a user creates on a service.",
      "type": "object",
      "properties": {
        "clusterIP": {
          "description": "clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are \"None\", empty string (\"\"), or a valid IP address. \"None\" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
          "type": "string"
        },
        "externalIPs": {
          "description": "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "externalTrafficPolicy": {
          "description": "externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. \"Local\" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. \"Cluster\" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.\n\nPossible enum values:\n - `\"Cluster\"` routes traffic to all endpoints.\n - `\"Local\"` preserves the source IP of the traffic by routing only to endpoints on the same node as the traffic was received on (dropping the traffic if there are no local endpoints).",
          "type": "string",
          "enum": [
            "Cluster",
            "Local"
          ]
        },
        "healthCheckNodePort": {
          "description": "healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.",
          "type": "integer",
          "format": "int32"
        },
        "loadBalancerIP": {
          "description": "Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.",
          "type": "string"
        },
        "loadBalancerSourceRanges": {
          "description": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "ports": {
          "description": "The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.ServicePort"
          },
          "x-kubernetes-patch-merge-key": "port",
          "x-kubernetes-patch-strategy": "merge"
        },
        "sessionAffinityConfig": {
          "description": "sessionAffinityConfig contains the configurations of session affinity.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SessionAffinityConfig"
        },
        "type": {
          "description": "type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ExternalName\" maps to the specified externalName. \"ClusterIP\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \"None\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \"NodePort\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \"LoadBalancer\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types\n\nPossible enum values:\n - `\"ClusterIP\"` means a service will only be accessible inside the cluster, via the cluster IP.\n - `\"ExternalName\"` means a service consists of only a reference to an external name that kubedns or equivalent will return as a CNAME record, with no exposing or proxying of any pods involved.\n - `\"LoadBalancer\"` means a service will be exposed via an external load balancer (if the cloud provider supports it), in addition to 'NodePort' type.\n - `\"NodePort\"` means a service will be exposed on one port of every node, in addition to 'ClusterIP' type.",
          "type": "string",
          "enum": [
            "ClusterIP",
            "ExternalName",
            "LoadBalancer",
            "NodePort"
          ]
        }
      }
    },
    "xyz.kmodules.offshoot-api.api.v1.Volume": {
      "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "awsElasticBlockStore": {
          "description": "awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "$ref": "#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"
        },
        "azureDisk": {
          "description": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource"
        },
        "azureFile": {
          "description": "azureFile represents an Azure File Service mount on the host and bind mount to the pod.",
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureFileVolumeSource"
        },
        "cephfs": {
          "description": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
          "$ref": "#/definitions/io.k8s.api.core.v1.CephFSVolumeSource"
        },
        "cinder": {
          "description": "cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.CinderVolumeSource"
        },
        "configMap": {
          "description": "configMap represents a configMap that should populate this volume",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapVolumeSource"
        },
        "csi": {
          "description": "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).",
          "$ref": "#/definitions/io.k8s.api.core.v1.CSIVolumeSource"
        },
        "downwardAPI": {
          "description": "downwardAPI represents downward API about the pod that should populate this volume",
          "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeSource"
        },
        "emptyDir": {
          "description": "emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
          "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"
        },
        "ephemeral": {
          "description": "ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.\n\nUse this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.\n\nA pod can use both types of ephemeral volumes and persistent volumes at the same time.",
          "$ref": "#/definitions/xyz.kmodules.offshoot-api.api.v1.EphemeralVolumeSource"
        },
        "fc": {
          "description": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
          "$ref": "#/definitions/io.k8s.api.core.v1.FCVolumeSource"
        },
        "flexVolume": {
          "description": "flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
          "$ref": "#/definitions/io.k8s.api.core.v1.FlexVolumeSource"
        },
        "flocker": {
          "description": "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running",
          "$ref": "#/definitions/io.k8s.api.core.v1.FlockerVolumeSource"
        },
        "gcePersistentDisk": {
          "description": "gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "$ref": "#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"
        },
        "glusterfs": {
          "description": "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.GlusterfsVolumeSource"
        },
        "hostPath": {
          "description": "hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
          "$ref": "#/definitions/io.k8s.api.core.v1.HostPathVolumeSource"
        },
        "iscsi": {
          "description": "iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.ISCSIVolumeSource"
        },
        "name": {
          "description": "name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string",
          "default": ""
        },
        "nfs": {
          "description": "nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "$ref": "#/definitions/io.k8s.api.core.v1.NFSVolumeSource"
        },
        "persistentVolumeClaim": {
          "description": "persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource"
        },
        "photonPersistentDisk": {
          "description": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"
        },
        "portworxVolume": {
          "description": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.api.core.v1.PortworxVolumeSource"
        },
        "projected": {
          "description": "projected items for all in one resources secrets, configmaps, and downward API",
          "$ref": "#/definitions/io.k8s.api.core.v1.ProjectedVolumeSource"
        },
        "quobyte": {
          "description": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
          "$ref": "#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource"
        },
        "rbd": {
          "description": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.RBDVolumeSource"
        },
        "scaleIO": {
          "description": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ScaleIOVolumeSource"
        },
        "secret": {
          "description": "secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretVolumeSource"
        },
        "storageos": {
          "description": "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
          "$ref": "#/definitions/io.k8s.api.core.v1.StorageOSVolumeSource"
        },
        "vsphereVolume": {
          "description": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"
        }
      }
    }
  }
}