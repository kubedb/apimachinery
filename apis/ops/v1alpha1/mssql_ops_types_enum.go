// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package v1alpha1

import (
	"fmt"
	"strings"
)

const (
	// MSSQLOpsRequestTypeUpdateVersion is a MSSQLOpsRequestType of type UpdateVersion.
	MSSQLOpsRequestTypeUpdateVersion MSSQLOpsRequestType = "UpdateVersion"
	// MSSQLOpsRequestTypeHorizontalScaling is a MSSQLOpsRequestType of type HorizontalScaling.
	MSSQLOpsRequestTypeHorizontalScaling MSSQLOpsRequestType = "HorizontalScaling"
	// MSSQLOpsRequestTypeVerticalScaling is a MSSQLOpsRequestType of type VerticalScaling.
	MSSQLOpsRequestTypeVerticalScaling MSSQLOpsRequestType = "VerticalScaling"
	// MSSQLOpsRequestTypeVolumeExpansion is a MSSQLOpsRequestType of type VolumeExpansion.
	MSSQLOpsRequestTypeVolumeExpansion MSSQLOpsRequestType = "VolumeExpansion"
	// MSSQLOpsRequestTypeRestart is a MSSQLOpsRequestType of type Restart.
	MSSQLOpsRequestTypeRestart MSSQLOpsRequestType = "Restart"
	// MSSQLOpsRequestTypeReconfigure is a MSSQLOpsRequestType of type Reconfigure.
	MSSQLOpsRequestTypeReconfigure MSSQLOpsRequestType = "Reconfigure"
	// MSSQLOpsRequestTypeReconfigureTLS is a MSSQLOpsRequestType of type ReconfigureTLS.
	MSSQLOpsRequestTypeReconfigureTLS MSSQLOpsRequestType = "ReconfigureTLS"
)

var ErrInvalidMSSQLOpsRequestType = fmt.Errorf("not a valid MSSQLOpsRequestType, try [%s]", strings.Join(_MSSQLOpsRequestTypeNames, ", "))

var _MSSQLOpsRequestTypeNames = []string{
	string(MSSQLOpsRequestTypeUpdateVersion),
	string(MSSQLOpsRequestTypeHorizontalScaling),
	string(MSSQLOpsRequestTypeVerticalScaling),
	string(MSSQLOpsRequestTypeVolumeExpansion),
	string(MSSQLOpsRequestTypeRestart),
	string(MSSQLOpsRequestTypeReconfigure),
	string(MSSQLOpsRequestTypeReconfigureTLS),
}

// MSSQLOpsRequestTypeNames returns a list of possible string values of MSSQLOpsRequestType.
func MSSQLOpsRequestTypeNames() []string {
	tmp := make([]string, len(_MSSQLOpsRequestTypeNames))
	copy(tmp, _MSSQLOpsRequestTypeNames)
	return tmp
}

// MSSQLOpsRequestTypeValues returns a list of the values for MSSQLOpsRequestType
func MSSQLOpsRequestTypeValues() []MSSQLOpsRequestType {
	return []MSSQLOpsRequestType{
		MSSQLOpsRequestTypeUpdateVersion,
		MSSQLOpsRequestTypeHorizontalScaling,
		MSSQLOpsRequestTypeVerticalScaling,
		MSSQLOpsRequestTypeVolumeExpansion,
		MSSQLOpsRequestTypeRestart,
		MSSQLOpsRequestTypeReconfigure,
		MSSQLOpsRequestTypeReconfigureTLS,
	}
}

// String implements the Stringer interface.
func (x MSSQLOpsRequestType) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x MSSQLOpsRequestType) IsValid() bool {
	_, err := ParseMSSQLOpsRequestType(string(x))
	return err == nil
}

var _MSSQLOpsRequestTypeValue = map[string]MSSQLOpsRequestType{
	"UpdateVersion":     MSSQLOpsRequestTypeUpdateVersion,
	"HorizontalScaling": MSSQLOpsRequestTypeHorizontalScaling,
	"VerticalScaling":   MSSQLOpsRequestTypeVerticalScaling,
	"VolumeExpansion":   MSSQLOpsRequestTypeVolumeExpansion,
	"Restart":           MSSQLOpsRequestTypeRestart,
	"Reconfigure":       MSSQLOpsRequestTypeReconfigure,
	"ReconfigureTLS":    MSSQLOpsRequestTypeReconfigureTLS,
}

// ParseMSSQLOpsRequestType attempts to convert a string to a MSSQLOpsRequestType.
func ParseMSSQLOpsRequestType(name string) (MSSQLOpsRequestType, error) {
	if x, ok := _MSSQLOpsRequestTypeValue[name]; ok {
		return x, nil
	}
	return MSSQLOpsRequestType(""), fmt.Errorf("%s is %w", name, ErrInvalidMSSQLOpsRequestType)
}

// MustParseMSSQLOpsRequestType converts a string to a MSSQLOpsRequestType, and panics if is not valid.
func MustParseMSSQLOpsRequestType(name string) MSSQLOpsRequestType {
	val, err := ParseMSSQLOpsRequestType(name)
	if err != nil {
		panic(err)
	}
	return val
}
