// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package v1alpha1

import (
	"fmt"
	"strings"
)

const (
	// MsSQLOpsRequestTypeUpdateVersion is a MsSQLOpsRequestType of type UpdateVersion.
	MsSQLOpsRequestTypeUpdateVersion MsSQLOpsRequestType = "UpdateVersion"
	// MsSQLOpsRequestTypeHorizontalScaling is a MsSQLOpsRequestType of type HorizontalScaling.
	MsSQLOpsRequestTypeHorizontalScaling MsSQLOpsRequestType = "HorizontalScaling"
	// MsSQLOpsRequestTypeVerticalScaling is a MsSQLOpsRequestType of type VerticalScaling.
	MsSQLOpsRequestTypeVerticalScaling MsSQLOpsRequestType = "VerticalScaling"
	// MsSQLOpsRequestTypeVolumeExpansion is a MsSQLOpsRequestType of type VolumeExpansion.
	MsSQLOpsRequestTypeVolumeExpansion MsSQLOpsRequestType = "VolumeExpansion"
	// MsSQLOpsRequestTypeRestart is a MsSQLOpsRequestType of type Restart.
	MsSQLOpsRequestTypeRestart MsSQLOpsRequestType = "Restart"
	// MsSQLOpsRequestTypeReconfigure is a MsSQLOpsRequestType of type Reconfigure.
	MsSQLOpsRequestTypeReconfigure MsSQLOpsRequestType = "Reconfigure"
	// MsSQLOpsRequestTypeReconfigureTLS is a MsSQLOpsRequestType of type ReconfigureTLS.
	MsSQLOpsRequestTypeReconfigureTLS MsSQLOpsRequestType = "ReconfigureTLS"
)

var ErrInvalidMsSQLOpsRequestType = fmt.Errorf("not a valid MsSQLOpsRequestType, try [%s]", strings.Join(_MsSQLOpsRequestTypeNames, ", "))

var _MsSQLOpsRequestTypeNames = []string{
	string(MsSQLOpsRequestTypeUpdateVersion),
	string(MsSQLOpsRequestTypeHorizontalScaling),
	string(MsSQLOpsRequestTypeVerticalScaling),
	string(MsSQLOpsRequestTypeVolumeExpansion),
	string(MsSQLOpsRequestTypeRestart),
	string(MsSQLOpsRequestTypeReconfigure),
	string(MsSQLOpsRequestTypeReconfigureTLS),
}

// MsSQLOpsRequestTypeNames returns a list of possible string values of MsSQLOpsRequestType.
func MsSQLOpsRequestTypeNames() []string {
	tmp := make([]string, len(_MsSQLOpsRequestTypeNames))
	copy(tmp, _MsSQLOpsRequestTypeNames)
	return tmp
}

// MsSQLOpsRequestTypeValues returns a list of the values for MsSQLOpsRequestType
func MsSQLOpsRequestTypeValues() []MsSQLOpsRequestType {
	return []MsSQLOpsRequestType{
		MsSQLOpsRequestTypeUpdateVersion,
		MsSQLOpsRequestTypeHorizontalScaling,
		MsSQLOpsRequestTypeVerticalScaling,
		MsSQLOpsRequestTypeVolumeExpansion,
		MsSQLOpsRequestTypeRestart,
		MsSQLOpsRequestTypeReconfigure,
		MsSQLOpsRequestTypeReconfigureTLS,
	}
}

// String implements the Stringer interface.
func (x MsSQLOpsRequestType) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x MsSQLOpsRequestType) IsValid() bool {
	_, err := ParseMsSQLOpsRequestType(string(x))
	return err == nil
}

var _MsSQLOpsRequestTypeValue = map[string]MsSQLOpsRequestType{
	"UpdateVersion":     MsSQLOpsRequestTypeUpdateVersion,
	"HorizontalScaling": MsSQLOpsRequestTypeHorizontalScaling,
	"VerticalScaling":   MsSQLOpsRequestTypeVerticalScaling,
	"VolumeExpansion":   MsSQLOpsRequestTypeVolumeExpansion,
	"Restart":           MsSQLOpsRequestTypeRestart,
	"Reconfigure":       MsSQLOpsRequestTypeReconfigure,
	"ReconfigureTLS":    MsSQLOpsRequestTypeReconfigureTLS,
}

// ParseMsSQLOpsRequestType attempts to convert a string to a MsSQLOpsRequestType.
func ParseMsSQLOpsRequestType(name string) (MsSQLOpsRequestType, error) {
	if x, ok := _MsSQLOpsRequestTypeValue[name]; ok {
		return x, nil
	}
	return MsSQLOpsRequestType(""), fmt.Errorf("%s is %w", name, ErrInvalidMsSQLOpsRequestType)
}

// MustParseMsSQLOpsRequestType converts a string to a MsSQLOpsRequestType, and panics if is not valid.
func MustParseMsSQLOpsRequestType(name string) MsSQLOpsRequestType {
	val, err := ParseMsSQLOpsRequestType(name)
	if err != nil {
		panic(err)
	}
	return val
}
