/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package kubedb.dev.apimachinery.apis.dashboard.v1alpha1;

import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";
import "kmodules.xyz/client-go/api/v1/generated.proto";
import "kmodules.xyz/monitoring-agent-api/api/v1/generated.proto";
import "kmodules.xyz/offshoot-api/api/v1/generated.proto";
import "sigs.k8s.io/controller-runtime/pkg/scheme/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

message CertSecrets {
  optional k8s.io.api.core.v1.Secret ca = 1;

  optional k8s.io.api.core.v1.Secret crt = 2;
}

// ElasticsearchDashboard is the Schema for the elasticsearchdashboards API
message ElasticsearchDashboard {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ElasticsearchDashboardSpec spec = 2;

  optional ElasticsearchDashboardStatus status = 3;
}

// ElasticsearchDashboardList contains a list of ElasticsearchDashboard
message ElasticsearchDashboardList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated ElasticsearchDashboard items = 2;
}

message ElasticsearchDashboardSpec {
  // Version of ElasticsearchDashboard to be deployed.
  optional string version = 1;

  optional int32 replicas = 2;

  // To enable ssl for http layer
  optional bool enableSSL = 3;

  // disable security of authPlugin (ie, xpack or searchguard). It disables authentication security of user.
  // If unset, default is false
  // +optional
  optional bool disableSecurity = 4;

  // host elasticsearch name and namespace
  optional k8s.io.api.core.v1.ObjectReference databaseRef = 5;

  // Dashboard authentication secret
  // +optional
  optional k8s.io.api.core.v1.LocalObjectReference authSecret = 6;

  // Monitor is used monitor Dashboard instance
  // +optional
  optional kmodules.xyz.monitoring_agent_api.api.v1.AgentSpec monitor = 7;

  // ConfigSecret is an optional field to provide custom configuration file for dashboard.
  // If specified, this file will be used as configuration file otherwise default configuration file will be used.
  // +optional
  optional k8s.io.api.core.v1.LocalObjectReference configSecret = 8;

  // PodTemplate is an optional configuration for pods used to expose Dashboard
  // +optional
  optional kmodules.xyz.offshoot_api.api.v1.PodTemplateSpec podTemplate = 9;

  // ServiceTemplates is an optional configuration for services used to expose Dashboard
  // +optional
  repeated NamedServiceTemplateSpec serviceTemplates = 10;

  // TLS contains tls configurations
  // +optional
  optional kmodules.xyz.client_go.api.v1.TLSConfig tls = 11;

  // TerminationPolicy controls the delete operation for Dashboard
  // +optional
  optional string terminationPolicy = 12;
}

// ElasticsearchDashboardStatus defines the observed state of ElasticsearchDashboard
message ElasticsearchDashboardStatus {
  // Specifies the current phase of the database
  // +optional
  optional string phase = 1;

  // observedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 2;

  // Conditions applied to the database, such as approval or denial.
  // +optional
  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 3;
}

message NamedServiceTemplateSpec {
  // Alias represents the identifier of the service.
  optional string alias = 1;

  // ServiceTemplate is an optional configuration for a service used to expose database
  // +optional
  optional kmodules.xyz.offshoot_api.api.v1.ServiceTemplateSpec serviceTemplateSpec = 2;
}

